begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|advisory
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|RegionBroker
import|;
end_import

begin_class
specifier|public
class|class
name|MasterSlaveTempQueueMemoryTest
extends|extends
name|TempQueueMemoryTest
block|{
name|String
name|masterBindAddress
init|=
literal|"tcp://localhost:61616"
decl_stmt|;
name|String
name|slaveBindAddress
init|=
literal|"tcp://localhost:62616"
decl_stmt|;
name|BrokerService
name|slave
decl_stmt|;
comment|/*      * add a slave broker      * @see org.apache.activemq.EmbeddedBrokerTestSupport#createBroker()      */
annotation|@
name|Override
specifier|protected
name|BrokerService
name|createBroker
parameter_list|()
throws|throws
name|Exception
block|{
comment|// bindAddress is used by super.createBroker
name|bindAddress
operator|=
name|masterBindAddress
expr_stmt|;
name|BrokerService
name|master
init|=
name|super
operator|.
name|createBroker
argument_list|()
decl_stmt|;
name|master
operator|.
name|setBrokerName
argument_list|(
literal|"master"
argument_list|)
expr_stmt|;
name|bindAddress
operator|=
name|slaveBindAddress
expr_stmt|;
name|slave
operator|=
name|super
operator|.
name|createBroker
argument_list|()
expr_stmt|;
name|slave
operator|.
name|setBrokerName
argument_list|(
literal|"slave"
argument_list|)
expr_stmt|;
name|slave
operator|.
name|setMasterConnectorURI
argument_list|(
name|masterBindAddress
argument_list|)
expr_stmt|;
name|bindAddress
operator|=
name|masterBindAddress
expr_stmt|;
return|return
name|master
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|startBroker
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|startBroker
argument_list|()
expr_stmt|;
name|slave
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|slave
operator|.
name|stop
argument_list|()
expr_stmt|;
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|testLoadRequestReply
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|testLoadRequestReply
argument_list|()
expr_stmt|;
comment|// some checks on the slave
name|AdvisoryBroker
name|ab
init|=
operator|(
name|AdvisoryBroker
operator|)
name|slave
operator|.
name|getBroker
argument_list|()
operator|.
name|getAdaptor
argument_list|(
name|AdvisoryBroker
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"the temp queues should not be visible as they are removed"
argument_list|,
literal|1
argument_list|,
name|ab
operator|.
name|getAdvisoryDestinations
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|RegionBroker
name|rb
init|=
operator|(
name|RegionBroker
operator|)
name|slave
operator|.
name|getBroker
argument_list|()
operator|.
name|getAdaptor
argument_list|(
name|RegionBroker
operator|.
name|class
argument_list|)
decl_stmt|;
comment|//serverDestination +
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|rb
operator|.
name|getDestinationMap
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|RegionBroker
name|masterRb
init|=
operator|(
name|RegionBroker
operator|)
name|broker
operator|.
name|getBroker
argument_list|()
operator|.
name|getAdaptor
argument_list|(
name|RegionBroker
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// REVISIT the following two are not dependable at the moment, off by a small number
comment|// for some reason? The work for a COUNT< ~500
comment|//
comment|//assertEquals("inflight match", rb.getDestinationStatistics().getInflight().getCount(), masterRb.getDestinationStatistics().getInflight().getCount());
comment|//assertEquals("enqueues match", rb.getDestinationStatistics().getEnqueues().getCount(), masterRb.getDestinationStatistics().getEnqueues().getCount());
name|assertEquals
argument_list|(
literal|"dequeues match"
argument_list|,
name|rb
operator|.
name|getDestinationStatistics
argument_list|()
operator|.
name|getDequeues
argument_list|()
operator|.
name|getCount
argument_list|()
argument_list|,
name|masterRb
operator|.
name|getDestinationStatistics
argument_list|()
operator|.
name|getDequeues
argument_list|()
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
comment|// slave does not actually dispatch any messages, so no request/reply(2) pair per iteration(COUNT)
name|assertEquals
argument_list|(
literal|"dispatched match"
argument_list|,
name|rb
operator|.
name|getDestinationStatistics
argument_list|()
operator|.
name|getDispatched
argument_list|()
operator|.
name|getCount
argument_list|()
operator|+
literal|2
operator|*
name|COUNT
argument_list|,
name|masterRb
operator|.
name|getDestinationStatistics
argument_list|()
operator|.
name|getDispatched
argument_list|()
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

