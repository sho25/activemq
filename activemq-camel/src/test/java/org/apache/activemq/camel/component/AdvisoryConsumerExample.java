begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|camel
operator|.
name|component
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ActiveMQMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|DataStructure
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|DestinationInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jms
operator|.
name|JmsMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  *   */
end_comment

begin_class
specifier|public
class|class
name|AdvisoryConsumerExample
extends|extends
name|CamelTestSupport
block|{
annotation|@
name|Test
specifier|public
name|void
name|testWorks
parameter_list|()
throws|throws
name|Exception
block|{
comment|// lets create a new queue
name|template
operator|.
name|sendBody
argument_list|(
literal|"activemq:NewQueue."
operator|+
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|,
literal|"<hello>world!</hello>"
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|10000
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
comment|// lets force the creation of a queue up front
name|from
argument_list|(
literal|"activemq:InitialQueue"
argument_list|)
operator|.
name|to
argument_list|(
literal|"log:Messages"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"activemq:topic:ActiveMQ.Advisory.Queue?cacheLevelName=CACHE_CONSUMER"
argument_list|)
operator|.
name|process
argument_list|(
operator|new
name|Processor
argument_list|()
block|{
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|Message
name|in
init|=
name|exchange
operator|.
name|getIn
argument_list|()
decl_stmt|;
if|if
condition|(
name|in
operator|instanceof
name|JmsMessage
condition|)
block|{
name|JmsMessage
name|jmsMessage
init|=
operator|(
name|JmsMessage
operator|)
name|in
decl_stmt|;
name|javax
operator|.
name|jms
operator|.
name|Message
name|value
init|=
name|jmsMessage
operator|.
name|getJmsMessage
argument_list|()
decl_stmt|;
if|if
condition|(
name|value
operator|instanceof
name|ActiveMQMessage
condition|)
block|{
name|ActiveMQMessage
name|activeMQMessage
init|=
operator|(
name|ActiveMQMessage
operator|)
name|value
decl_stmt|;
name|DataStructure
name|structure
init|=
name|activeMQMessage
operator|.
name|getDataStructure
argument_list|()
decl_stmt|;
if|if
condition|(
name|structure
operator|instanceof
name|DestinationInfo
condition|)
block|{
name|DestinationInfo
name|destinationInfo
init|=
operator|(
name|DestinationInfo
operator|)
name|structure
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Received: "
operator|+
name|destinationInfo
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

