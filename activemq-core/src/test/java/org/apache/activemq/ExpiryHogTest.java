begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|ConnectionFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|TextMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|policy
operator|.
name|PolicyEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|policy
operator|.
name|PolicyMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadb
operator|.
name|KahaDBPersistenceAdapter
import|;
end_import

begin_comment
comment|/**  * User: gtully  */
end_comment

begin_class
specifier|public
class|class
name|ExpiryHogTest
extends|extends
name|JmsMultipleClientsTestSupport
block|{
name|boolean
name|sleep
init|=
literal|false
decl_stmt|;
name|int
name|numMessages
init|=
literal|4
decl_stmt|;
specifier|public
name|void
name|testHog
parameter_list|()
throws|throws
name|Exception
block|{
name|ConnectionFactory
name|f
init|=
name|createConnectionFactory
argument_list|()
decl_stmt|;
name|destination
operator|=
name|createDestination
argument_list|()
expr_stmt|;
name|startConsumers
argument_list|(
name|f
argument_list|,
name|destination
argument_list|)
expr_stmt|;
name|sleep
operator|=
literal|true
expr_stmt|;
name|this
operator|.
name|startProducers
argument_list|(
name|f
argument_list|,
name|destination
argument_list|,
name|numMessages
argument_list|)
expr_stmt|;
name|allMessagesList
operator|.
name|assertMessagesReceived
argument_list|(
name|numMessages
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|BrokerService
name|createBroker
parameter_list|()
throws|throws
name|Exception
block|{
name|BrokerService
name|bs
init|=
operator|new
name|BrokerService
argument_list|()
decl_stmt|;
name|bs
operator|.
name|setDeleteAllMessagesOnStartup
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|PolicyMap
name|policyMap
init|=
operator|new
name|PolicyMap
argument_list|()
decl_stmt|;
name|PolicyEntry
name|defaultEntry
init|=
operator|new
name|PolicyEntry
argument_list|()
decl_stmt|;
name|defaultEntry
operator|.
name|setExpireMessagesPeriod
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
name|defaultEntry
operator|.
name|setUseCache
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|policyMap
operator|.
name|setDefaultEntry
argument_list|(
name|defaultEntry
argument_list|)
expr_stmt|;
name|bs
operator|.
name|setDestinationPolicy
argument_list|(
name|policyMap
argument_list|)
expr_stmt|;
name|KahaDBPersistenceAdapter
name|ad
init|=
operator|(
name|KahaDBPersistenceAdapter
operator|)
name|bs
operator|.
name|getPersistenceAdapter
argument_list|()
decl_stmt|;
name|ad
operator|.
name|setConcurrentStoreAndDispatchQueues
argument_list|(
literal|false
argument_list|)
expr_stmt|;
return|return
name|bs
return|;
block|}
specifier|protected
name|TextMessage
name|createTextMessage
parameter_list|(
name|Session
name|session
parameter_list|,
name|String
name|initText
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|sleep
condition|)
block|{
name|TimeUnit
operator|.
name|SECONDS
operator|.
name|sleep
argument_list|(
literal|10
argument_list|)
expr_stmt|;
block|}
name|TextMessage
name|msg
init|=
name|super
operator|.
name|createTextMessage
argument_list|(
name|session
argument_list|,
name|initText
argument_list|)
decl_stmt|;
name|msg
operator|.
name|setJMSExpiration
argument_list|(
literal|4000
argument_list|)
expr_stmt|;
return|return
name|msg
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|autoFail
operator|=
literal|false
expr_stmt|;
name|persistent
operator|=
literal|true
expr_stmt|;
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

