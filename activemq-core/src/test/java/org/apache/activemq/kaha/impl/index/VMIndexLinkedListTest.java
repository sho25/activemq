begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|kaha
operator|.
name|impl
operator|.
name|index
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|kaha
operator|.
name|impl
operator|.
name|index
operator|.
name|IndexItem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|kaha
operator|.
name|impl
operator|.
name|index
operator|.
name|IndexLinkedList
import|;
end_import

begin_comment
comment|/**  * @version $Revision: 1.2 $ */
end_comment

begin_class
specifier|public
class|class
name|VMIndexLinkedListTest
extends|extends
name|TestCase
block|{
specifier|static
specifier|final
name|int
name|NUMBER
init|=
literal|10
decl_stmt|;
specifier|private
name|IndexItem
name|root
decl_stmt|;
specifier|private
name|List
name|testData
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
specifier|private
name|IndexLinkedList
name|list
decl_stmt|;
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|NUMBER
condition|;
name|i
operator|++
control|)
block|{
name|testData
operator|.
name|add
argument_list|(
operator|new
name|IndexItem
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|root
operator|=
operator|new
name|IndexItem
argument_list|()
expr_stmt|;
name|list
operator|=
operator|new
name|VMIndexLinkedList
argument_list|(
name|root
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
name|testData
operator|.
name|clear
argument_list|()
expr_stmt|;
name|list
operator|=
literal|null
expr_stmt|;
block|}
comment|/*      * Test method for 'org.apache.activemq.kaha.impl.VMIndexLinkedList.getFirst()'      */
specifier|public
name|void
name|testGetFirst
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|testData
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|list
operator|.
name|add
argument_list|(
operator|(
name|IndexItem
operator|)
name|testData
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|list
operator|.
name|getFirst
argument_list|()
operator|==
name|testData
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/*      * Test method for 'org.apache.activemq.kaha.impl.VMIndexLinkedList.getLast()'      */
specifier|public
name|void
name|testGetLast
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|testData
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|list
operator|.
name|add
argument_list|(
operator|(
name|IndexItem
operator|)
name|testData
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|list
operator|.
name|getLast
argument_list|()
operator|==
name|testData
operator|.
name|get
argument_list|(
name|testData
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/*      * Test method for 'org.apache.activemq.kaha.impl.VMIndexLinkedList.removeFirst()'      */
specifier|public
name|void
name|testRemoveFirst
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|testData
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|list
operator|.
name|add
argument_list|(
operator|(
name|IndexItem
operator|)
name|testData
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|list
operator|.
name|removeFirst
argument_list|()
operator|==
name|testData
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/*      * Test method for 'org.apache.activemq.kaha.impl.VMIndexLinkedList.removeLast()'      */
specifier|public
name|void
name|testRemoveLast
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|testData
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|list
operator|.
name|add
argument_list|(
operator|(
name|IndexItem
operator|)
name|testData
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|list
operator|.
name|removeLast
argument_list|()
operator|==
name|testData
operator|.
name|get
argument_list|(
name|testData
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/*      * Test method for 'org.apache.activemq.kaha.impl.VMIndexLinkedList.addFirst(IndexItem)'      */
specifier|public
name|void
name|testAddFirst
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|testData
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|list
operator|.
name|addFirst
argument_list|(
operator|(
name|IndexItem
operator|)
name|testData
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|int
name|count
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
name|testData
operator|.
name|size
argument_list|()
operator|-
literal|1
init|;
name|i
operator|>=
literal|0
condition|;
name|i
operator|--
control|)
block|{
name|assertTrue
argument_list|(
name|testData
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|==
name|list
operator|.
name|get
argument_list|(
name|count
operator|++
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
comment|/*      * Test method for 'org.apache.activemq.kaha.impl.VMIndexLinkedList.addLast(IndexItem)'      */
specifier|public
name|void
name|testAddLast
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|testData
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|list
operator|.
name|addLast
argument_list|(
operator|(
name|IndexItem
operator|)
name|testData
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|testData
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|assertTrue
argument_list|(
name|testData
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|==
name|list
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
comment|/*      * Test method for 'org.apache.activemq.kaha.impl.VMIndexLinkedList.size()'      */
specifier|public
name|void
name|testSize
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|testData
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|list
operator|.
name|addLast
argument_list|(
operator|(
name|IndexItem
operator|)
name|testData
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|list
operator|.
name|size
argument_list|()
operator|==
name|i
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
comment|/*      * Test method for 'org.apache.activemq.kaha.impl.VMIndexLinkedList.isEmpty()'      */
specifier|public
name|void
name|testIsEmpty
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|testData
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|list
operator|.
name|addLast
argument_list|(
operator|(
name|IndexItem
operator|)
name|testData
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|list
operator|.
name|size
argument_list|()
operator|==
name|i
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
name|list
operator|.
name|clear
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|list
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/*      * Test method for 'org.apache.activemq.kaha.impl.VMIndexLinkedList.add(IndexItem)'      */
specifier|public
name|void
name|testAddIndexItem
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|testData
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|list
operator|.
name|add
argument_list|(
operator|(
name|IndexItem
operator|)
name|testData
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|testData
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|assertTrue
argument_list|(
name|testData
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|==
name|list
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
comment|/*      * Test method for 'org.apache.activemq.kaha.impl.VMIndexLinkedList.clear()'      */
specifier|public
name|void
name|testClear
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|testData
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|list
operator|.
name|addLast
argument_list|(
operator|(
name|IndexItem
operator|)
name|testData
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|list
operator|.
name|size
argument_list|()
operator|==
name|i
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
name|list
operator|.
name|clear
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|list
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/*      * Test method for 'org.apache.activemq.kaha.impl.VMIndexLinkedList.add(int, IndexItem)'      */
specifier|public
name|void
name|testAddIntIndexItem
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|testData
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|list
operator|.
name|add
argument_list|(
name|i
argument_list|,
operator|(
name|IndexItem
operator|)
name|testData
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|testData
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|assertTrue
argument_list|(
name|testData
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|==
name|list
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
comment|/*      * Test method for 'org.apache.activemq.kaha.impl.VMIndexLinkedList.remove(int)'      */
specifier|public
name|void
name|testRemoveInt
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|testData
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|list
operator|.
name|add
argument_list|(
name|i
argument_list|,
operator|(
name|IndexItem
operator|)
name|testData
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|testData
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|list
operator|.
name|remove
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|list
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|testData
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|list
operator|.
name|add
argument_list|(
name|i
argument_list|,
operator|(
name|IndexItem
operator|)
name|testData
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|testData
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|list
operator|.
name|remove
argument_list|(
name|list
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|list
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/*      * Test method for 'org.apache.activemq.kaha.impl.VMIndexLinkedList.indexOf(IndexItem)'      */
specifier|public
name|void
name|testIndexOf
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|testData
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|list
operator|.
name|add
argument_list|(
name|i
argument_list|,
operator|(
name|IndexItem
operator|)
name|testData
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|testData
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|assertTrue
argument_list|(
name|list
operator|.
name|indexOf
argument_list|(
operator|(
name|IndexItem
operator|)
name|testData
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
operator|==
name|i
argument_list|)
expr_stmt|;
block|}
block|}
comment|/*      * Test method for 'org.apache.activemq.kaha.impl.VMIndexLinkedList.getNextEntry(IndexItem)'      */
specifier|public
name|void
name|testGetNextEntry
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|testData
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|list
operator|.
name|add
argument_list|(
name|i
argument_list|,
operator|(
name|IndexItem
operator|)
name|testData
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|IndexItem
name|next
init|=
name|list
operator|.
name|getFirst
argument_list|()
decl_stmt|;
name|int
name|count
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|next
operator|!=
literal|null
condition|)
block|{
name|assertTrue
argument_list|(
name|next
operator|==
name|testData
operator|.
name|get
argument_list|(
name|count
operator|++
argument_list|)
argument_list|)
expr_stmt|;
name|next
operator|=
name|list
operator|.
name|getNextEntry
argument_list|(
name|next
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|next
operator|!=
name|root
argument_list|)
expr_stmt|;
block|}
block|}
comment|/*      * Test method for 'org.apache.activemq.kaha.impl.VMIndexLinkedList.getPrevEntry(IndexItem)'      */
specifier|public
name|void
name|testGetPrevEntry
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|testData
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|list
operator|.
name|add
argument_list|(
name|i
argument_list|,
operator|(
name|IndexItem
operator|)
name|testData
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|IndexItem
name|next
init|=
name|list
operator|.
name|getLast
argument_list|()
decl_stmt|;
name|int
name|count
init|=
name|testData
operator|.
name|size
argument_list|()
operator|-
literal|1
decl_stmt|;
while|while
condition|(
name|next
operator|!=
literal|null
condition|)
block|{
name|assertTrue
argument_list|(
name|next
operator|==
name|testData
operator|.
name|get
argument_list|(
name|count
operator|--
argument_list|)
argument_list|)
expr_stmt|;
name|next
operator|=
name|list
operator|.
name|getPrevEntry
argument_list|(
name|next
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|next
operator|!=
name|root
argument_list|)
expr_stmt|;
block|}
block|}
comment|/*      * Test method for 'org.apache.activemq.kaha.impl.VMIndexLinkedList.remove(IndexItem)'      */
specifier|public
name|void
name|testRemoveIndexItem
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|testData
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|list
operator|.
name|add
argument_list|(
name|i
argument_list|,
operator|(
name|IndexItem
operator|)
name|testData
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|testData
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|list
operator|.
name|remove
argument_list|(
operator|(
name|IndexItem
operator|)
name|testData
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|list
operator|.
name|size
argument_list|()
operator|==
name|testData
operator|.
name|size
argument_list|()
operator|-
name|i
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

