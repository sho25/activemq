begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**   *   * Copyright 2004 Michael Gaffney  *   * Licensed under the Apache License, Version 2.0 (the "License");   * you may not use this file except in compliance with the License.   * You may obtain a copy of the License at   *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   * See the License for the specific language governing permissions and   * limitations under the License.   *   **/
end_comment

begin_package
package|package
name|com
operator|.
name|panacya
operator|.
name|platform
operator|.
name|service
operator|.
name|bus
operator|.
name|client
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_comment
comment|/**  * @author<a href="mailto:michael.gaffney@panacya.com">Michael Gaffney</a>  */
end_comment

begin_class
specifier|public
class|class
name|ClientArgsTest
extends|extends
name|TestCase
block|{
specifier|public
name|ClientArgsTest
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testThreeArgs
parameter_list|()
block|{
name|Long
name|timeout
init|=
operator|new
name|Long
argument_list|(
literal|14999
argument_list|)
decl_stmt|;
name|String
index|[]
name|args
init|=
block|{
literal|"send"
block|,
literal|"topic.testTopic"
block|,
name|timeout
operator|.
name|toString
argument_list|()
block|}
decl_stmt|;
name|ClientArgs
name|c
init|=
operator|new
name|ClientArgs
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|args
index|[
literal|0
index|]
argument_list|,
name|c
operator|.
name|getCommand
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|args
index|[
literal|1
index|]
argument_list|,
name|c
operator|.
name|getDestination
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|timeout
operator|.
name|longValue
argument_list|()
argument_list|,
name|c
operator|.
name|getTimeout
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testTwoArgs
parameter_list|()
block|{
name|String
index|[]
name|args
init|=
block|{
literal|"send"
block|,
literal|"topic.testTopic"
block|}
decl_stmt|;
name|ClientArgs
name|c
init|=
operator|new
name|ClientArgs
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|args
index|[
literal|0
index|]
argument_list|,
name|c
operator|.
name|getCommand
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|args
index|[
literal|1
index|]
argument_list|,
name|c
operator|.
name|getDestination
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|c
operator|.
name|getTimeout
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

