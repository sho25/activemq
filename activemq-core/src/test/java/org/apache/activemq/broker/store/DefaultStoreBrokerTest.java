begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Copyright 2005-2006 The Apache Software Foundation  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|store
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|SQLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Statement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|sql
operator|.
name|DataSource
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|DefaultPersistenceAdapterFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|PersistenceAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|jdbc
operator|.
name|JDBCPersistenceAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|journal
operator|.
name|JournalPersistenceAdapter
import|;
end_import

begin_comment
comment|/**  * Once the wire format is completed we can test against real persistence storage.  *   * @version $Revision$  */
end_comment

begin_class
specifier|public
class|class
name|DefaultStoreBrokerTest
extends|extends
name|BrokerTest
block|{
specifier|protected
name|BrokerService
name|createBroker
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|BrokerFactory
operator|.
name|createBroker
argument_list|(
operator|new
name|URI
argument_list|(
literal|"broker://()/localhost?deleteAllMessagesOnStartup=true"
argument_list|)
argument_list|)
return|;
block|}
specifier|protected
name|PersistenceAdapter
name|createPersistenceAdapter
parameter_list|(
name|boolean
name|clean
parameter_list|)
throws|throws
name|IOException
block|{
name|File
name|dataDir
init|=
operator|new
name|File
argument_list|(
literal|"test-data"
argument_list|)
decl_stmt|;
if|if
condition|(
name|clean
condition|)
block|{
name|recursiveDelete
argument_list|(
operator|new
name|File
argument_list|(
name|dataDir
argument_list|,
literal|"journal"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|DefaultPersistenceAdapterFactory
name|factory
init|=
operator|new
name|DefaultPersistenceAdapterFactory
argument_list|()
decl_stmt|;
name|factory
operator|.
name|setDataDirectory
argument_list|(
name|dataDir
argument_list|)
expr_stmt|;
comment|// Use a smaller journal so that tests are quicker.
name|factory
operator|.
name|setJournalLogFileSize
argument_list|(
literal|1024
operator|*
literal|64
argument_list|)
expr_stmt|;
name|PersistenceAdapter
name|adapter
init|=
name|factory
operator|.
name|createPersistenceAdapter
argument_list|()
decl_stmt|;
if|if
condition|(
name|clean
condition|)
block|{
name|DataSource
name|ds
init|=
operator|(
call|(
name|JDBCPersistenceAdapter
call|)
argument_list|(
operator|(
name|JournalPersistenceAdapter
operator|)
name|adapter
argument_list|)
operator|.
name|getLongTermPersistence
argument_list|()
operator|)
operator|.
name|getDataSource
argument_list|()
decl_stmt|;
try|try
block|{
name|Connection
name|c
init|=
name|ds
operator|.
name|getConnection
argument_list|()
decl_stmt|;
name|Statement
name|s
init|=
name|c
operator|.
name|createStatement
argument_list|()
decl_stmt|;
try|try
block|{
name|s
operator|.
name|executeUpdate
argument_list|(
literal|"DROP TABLE ACTIVEMQ_MSGS"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SQLException
name|e
parameter_list|)
block|{}
try|try
block|{
name|s
operator|.
name|executeUpdate
argument_list|(
literal|"DROP TABLE ACTIVEMQ_TXS"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SQLException
name|e
parameter_list|)
block|{}
try|try
block|{
name|s
operator|.
name|executeUpdate
argument_list|(
literal|"DROP TABLE ACTIVEMQ_ACKS"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SQLException
name|e
parameter_list|)
block|{}
block|}
catch|catch
parameter_list|(
name|SQLException
name|e
parameter_list|)
block|{             }
block|}
return|return
name|adapter
return|;
block|}
specifier|public
specifier|static
name|Test
name|suite
parameter_list|()
block|{
return|return
name|suite
argument_list|(
name|DefaultStoreBrokerTest
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
name|junit
operator|.
name|textui
operator|.
name|TestRunner
operator|.
name|run
argument_list|(
name|suite
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

