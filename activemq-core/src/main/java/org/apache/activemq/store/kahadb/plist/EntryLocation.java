begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadb
operator|.
name|plist
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|kahadb
operator|.
name|journal
operator|.
name|Location
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|kahadb
operator|.
name|page
operator|.
name|Page
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|kahadb
operator|.
name|util
operator|.
name|VariableMarshaller
import|;
end_import

begin_class
class|class
name|EntryLocation
block|{
specifier|static
specifier|final
name|long
name|NOT_SET
init|=
operator|-
literal|1
decl_stmt|;
specifier|private
name|String
name|id
decl_stmt|;
specifier|private
name|Page
argument_list|<
name|EntryLocation
argument_list|>
name|page
decl_stmt|;
specifier|private
name|long
name|next
decl_stmt|;
specifier|private
name|long
name|prev
decl_stmt|;
specifier|private
name|Location
name|location
decl_stmt|;
specifier|static
class|class
name|EntryLocationMarshaller
extends|extends
name|VariableMarshaller
argument_list|<
name|EntryLocation
argument_list|>
block|{
specifier|static
specifier|final
name|EntryLocationMarshaller
name|INSTANCE
init|=
operator|new
name|EntryLocationMarshaller
argument_list|()
decl_stmt|;
specifier|public
name|EntryLocation
name|readPayload
parameter_list|(
name|DataInput
name|dataIn
parameter_list|)
throws|throws
name|IOException
block|{
name|EntryLocation
name|result
init|=
operator|new
name|EntryLocation
argument_list|()
decl_stmt|;
name|result
operator|.
name|readExternal
argument_list|(
name|dataIn
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|void
name|writePayload
parameter_list|(
name|EntryLocation
name|value
parameter_list|,
name|DataOutput
name|dataOut
parameter_list|)
throws|throws
name|IOException
block|{
name|value
operator|.
name|writeExternal
argument_list|(
name|dataOut
argument_list|)
expr_stmt|;
block|}
block|}
name|EntryLocation
parameter_list|(
name|Location
name|location
parameter_list|)
block|{
name|this
operator|.
name|location
operator|=
name|location
expr_stmt|;
block|}
name|EntryLocation
parameter_list|()
block|{     }
name|EntryLocation
name|copy
parameter_list|()
block|{
name|EntryLocation
name|result
init|=
operator|new
name|EntryLocation
argument_list|()
decl_stmt|;
name|result
operator|.
name|id
operator|=
name|this
operator|.
name|id
expr_stmt|;
name|result
operator|.
name|location
operator|=
name|this
operator|.
name|location
expr_stmt|;
name|result
operator|.
name|next
operator|=
name|this
operator|.
name|next
expr_stmt|;
name|result
operator|.
name|prev
operator|=
name|this
operator|.
name|prev
expr_stmt|;
name|result
operator|.
name|page
operator|=
name|this
operator|.
name|page
expr_stmt|;
return|return
name|result
return|;
block|}
name|void
name|reset
parameter_list|()
block|{
name|this
operator|.
name|id
operator|=
literal|""
expr_stmt|;
name|this
operator|.
name|next
operator|=
name|NOT_SET
expr_stmt|;
name|this
operator|.
name|prev
operator|=
name|NOT_SET
expr_stmt|;
block|}
specifier|public
name|void
name|readExternal
parameter_list|(
name|DataInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|id
operator|=
name|in
operator|.
name|readUTF
argument_list|()
expr_stmt|;
name|this
operator|.
name|prev
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|this
operator|.
name|next
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|location
operator|==
literal|null
condition|)
block|{
name|this
operator|.
name|location
operator|=
operator|new
name|Location
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|location
operator|.
name|readExternal
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|writeExternal
parameter_list|(
name|DataOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|out
operator|.
name|writeUTF
argument_list|(
name|this
operator|.
name|id
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|this
operator|.
name|prev
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|this
operator|.
name|next
argument_list|)
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|location
operator|==
literal|null
condition|)
block|{
name|this
operator|.
name|location
operator|=
operator|new
name|Location
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|location
operator|.
name|writeExternal
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
comment|/**      * @return the jobId      */
name|String
name|getId
parameter_list|()
block|{
return|return
name|this
operator|.
name|id
return|;
block|}
comment|/**      * @param id      *            the id to set      */
name|void
name|setId
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
block|}
name|Location
name|getLocation
parameter_list|()
block|{
return|return
name|this
operator|.
name|location
return|;
block|}
comment|/**      * @param location      *            the location to set      */
name|void
name|setLocation
parameter_list|(
name|Location
name|location
parameter_list|)
block|{
name|this
operator|.
name|location
operator|=
name|location
expr_stmt|;
block|}
comment|/**      * @return the next      */
name|long
name|getNext
parameter_list|()
block|{
return|return
name|this
operator|.
name|next
return|;
block|}
comment|/**      * @param next      *            the next to set      */
name|void
name|setNext
parameter_list|(
name|long
name|next
parameter_list|)
block|{
name|this
operator|.
name|next
operator|=
name|next
expr_stmt|;
block|}
comment|/**      * @return the prev      */
name|long
name|getPrev
parameter_list|()
block|{
return|return
name|this
operator|.
name|prev
return|;
block|}
comment|/**      * @param prev      *            the prev to set      */
name|void
name|setPrev
parameter_list|(
name|long
name|prev
parameter_list|)
block|{
name|this
operator|.
name|prev
operator|=
name|prev
expr_stmt|;
block|}
comment|/**      * @return the page      */
name|Page
argument_list|<
name|EntryLocation
argument_list|>
name|getPage
parameter_list|()
block|{
return|return
name|this
operator|.
name|page
return|;
block|}
comment|/**      * @param page      *            the page to set      */
name|void
name|setPage
parameter_list|(
name|Page
argument_list|<
name|EntryLocation
argument_list|>
name|page
parameter_list|)
block|{
name|this
operator|.
name|page
operator|=
name|page
expr_stmt|;
block|}
block|}
end_class

end_unit

