begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|failover
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
specifier|public
class|class
name|FailoverPriorityTest
extends|extends
name|FailoverClusterTestSupport
block|{
specifier|protected
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|BROKER_A_CLIENT_TC_ADDRESS
init|=
literal|"tcp://127.0.0.1:61616"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|BROKER_B_CLIENT_TC_ADDRESS
init|=
literal|"tcp://127.0.0.1:61617"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|BROKER_C_CLIENT_TC_ADDRESS
init|=
literal|"tcp://127.0.0.1:61618"
decl_stmt|;
specifier|private
specifier|final
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|urls
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|urls
operator|.
name|put
argument_list|(
name|BROKER_A_NAME
argument_list|,
name|BROKER_A_CLIENT_TC_ADDRESS
argument_list|)
expr_stmt|;
name|urls
operator|.
name|put
argument_list|(
name|BROKER_B_NAME
argument_list|,
name|BROKER_B_CLIENT_TC_ADDRESS
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|String
name|BROKER_A_NAME
init|=
literal|"BROKERA"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|BROKER_B_NAME
init|=
literal|"BROKERB"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|BROKER_C_NAME
init|=
literal|"BROKERC"
decl_stmt|;
specifier|public
name|void
name|testPriorityBackup
parameter_list|()
throws|throws
name|Exception
block|{
name|createBrokerA
argument_list|()
expr_stmt|;
name|createBrokerB
argument_list|()
expr_stmt|;
name|getBroker
argument_list|(
name|BROKER_B_NAME
argument_list|)
operator|.
name|waitUntilStarted
argument_list|()
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|setClientUrl
argument_list|(
literal|"failover:("
operator|+
name|BROKER_A_CLIENT_TC_ADDRESS
operator|+
literal|","
operator|+
name|BROKER_B_CLIENT_TC_ADDRESS
operator|+
literal|")?randomize=false&priorityBackup=true&initialReconnectDelay=1000&useExponentialBackOff=false"
argument_list|)
expr_stmt|;
name|createClients
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|assertAllConnectedTo
argument_list|(
name|urls
operator|.
name|get
argument_list|(
name|BROKER_A_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|assertBrokerInfo
argument_list|(
name|BROKER_A_NAME
argument_list|)
expr_stmt|;
name|restart
argument_list|(
literal|false
argument_list|,
name|BROKER_A_NAME
argument_list|,
name|BROKER_B_NAME
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|3
condition|;
name|i
operator|++
control|)
block|{
name|restart
argument_list|(
literal|true
argument_list|,
name|BROKER_A_NAME
argument_list|,
name|BROKER_B_NAME
argument_list|)
expr_stmt|;
block|}
name|Thread
operator|.
name|sleep
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
name|restart
argument_list|(
literal|false
argument_list|,
name|BROKER_A_NAME
argument_list|,
name|BROKER_B_NAME
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testPriorityBackupList
parameter_list|()
throws|throws
name|Exception
block|{
name|createBrokerA
argument_list|()
expr_stmt|;
name|createBrokerB
argument_list|()
expr_stmt|;
name|getBroker
argument_list|(
name|BROKER_B_NAME
argument_list|)
operator|.
name|waitUntilStarted
argument_list|()
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|setClientUrl
argument_list|(
literal|"failover:("
operator|+
name|BROKER_A_CLIENT_TC_ADDRESS
operator|+
literal|","
operator|+
name|BROKER_B_CLIENT_TC_ADDRESS
operator|+
literal|")?randomize=false&priorityBackup=true&priorityURIs=tcp://127.0.0.1:61617&initialReconnectDelay=1000&useExponentialBackOff=false"
argument_list|)
expr_stmt|;
name|createClients
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|3000
argument_list|)
expr_stmt|;
name|assertAllConnectedTo
argument_list|(
name|urls
operator|.
name|get
argument_list|(
name|BROKER_B_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|restart
argument_list|(
literal|false
argument_list|,
name|BROKER_B_NAME
argument_list|,
name|BROKER_A_NAME
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|3
condition|;
name|i
operator|++
control|)
block|{
name|restart
argument_list|(
literal|true
argument_list|,
name|BROKER_B_NAME
argument_list|,
name|BROKER_A_NAME
argument_list|)
expr_stmt|;
block|}
name|restart
argument_list|(
literal|false
argument_list|,
name|BROKER_B_NAME
argument_list|,
name|BROKER_A_NAME
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testThreeBrokers
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Broker A
name|addBroker
argument_list|(
name|BROKER_A_NAME
argument_list|,
name|createBroker
argument_list|(
name|BROKER_A_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|addTransportConnector
argument_list|(
name|getBroker
argument_list|(
name|BROKER_A_NAME
argument_list|)
argument_list|,
literal|"openwire"
argument_list|,
name|BROKER_A_CLIENT_TC_ADDRESS
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|addNetworkBridge
argument_list|(
name|getBroker
argument_list|(
name|BROKER_A_NAME
argument_list|)
argument_list|,
literal|"A_2_B_Bridge"
argument_list|,
literal|"static://("
operator|+
name|BROKER_B_CLIENT_TC_ADDRESS
operator|+
literal|")?useExponentialBackOff=false"
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|addNetworkBridge
argument_list|(
name|getBroker
argument_list|(
name|BROKER_A_NAME
argument_list|)
argument_list|,
literal|"A_2_C_Bridge"
argument_list|,
literal|"static://("
operator|+
name|BROKER_C_CLIENT_TC_ADDRESS
operator|+
literal|")?useExponentialBackOff=false"
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|getBroker
argument_list|(
name|BROKER_A_NAME
argument_list|)
operator|.
name|start
argument_list|()
expr_stmt|;
comment|// Broker B
name|addBroker
argument_list|(
name|BROKER_B_NAME
argument_list|,
name|createBroker
argument_list|(
name|BROKER_B_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|addTransportConnector
argument_list|(
name|getBroker
argument_list|(
name|BROKER_B_NAME
argument_list|)
argument_list|,
literal|"openwire"
argument_list|,
name|BROKER_B_CLIENT_TC_ADDRESS
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|addNetworkBridge
argument_list|(
name|getBroker
argument_list|(
name|BROKER_B_NAME
argument_list|)
argument_list|,
literal|"B_2_A_Bridge"
argument_list|,
literal|"static://("
operator|+
name|BROKER_A_CLIENT_TC_ADDRESS
operator|+
literal|")?useExponentialBackOff=false"
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|addNetworkBridge
argument_list|(
name|getBroker
argument_list|(
name|BROKER_B_NAME
argument_list|)
argument_list|,
literal|"B_2_C_Bridge"
argument_list|,
literal|"static://("
operator|+
name|BROKER_C_CLIENT_TC_ADDRESS
operator|+
literal|")?useExponentialBackOff=false"
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|getBroker
argument_list|(
name|BROKER_B_NAME
argument_list|)
operator|.
name|start
argument_list|()
expr_stmt|;
comment|// Broker C
name|addBroker
argument_list|(
name|BROKER_C_NAME
argument_list|,
name|createBroker
argument_list|(
name|BROKER_C_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|addTransportConnector
argument_list|(
name|getBroker
argument_list|(
name|BROKER_C_NAME
argument_list|)
argument_list|,
literal|"openwire"
argument_list|,
name|BROKER_C_CLIENT_TC_ADDRESS
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|addNetworkBridge
argument_list|(
name|getBroker
argument_list|(
name|BROKER_C_NAME
argument_list|)
argument_list|,
literal|"C_2_A_Bridge"
argument_list|,
literal|"static://("
operator|+
name|BROKER_A_CLIENT_TC_ADDRESS
operator|+
literal|")?useExponentialBackOff=false"
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|addNetworkBridge
argument_list|(
name|getBroker
argument_list|(
name|BROKER_C_NAME
argument_list|)
argument_list|,
literal|"C_2_B_Bridge"
argument_list|,
literal|"static://("
operator|+
name|BROKER_B_CLIENT_TC_ADDRESS
operator|+
literal|")?useExponentialBackOff=false"
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|getBroker
argument_list|(
name|BROKER_C_NAME
argument_list|)
operator|.
name|start
argument_list|()
expr_stmt|;
name|getBroker
argument_list|(
name|BROKER_C_NAME
argument_list|)
operator|.
name|waitUntilStarted
argument_list|()
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|setClientUrl
argument_list|(
literal|"failover:("
operator|+
name|BROKER_A_CLIENT_TC_ADDRESS
operator|+
literal|","
operator|+
name|BROKER_B_CLIENT_TC_ADDRESS
operator|+
literal|","
operator|+
name|BROKER_C_CLIENT_TC_ADDRESS
operator|+
literal|")?randomize=false&priorityBackup=true&initialReconnectDelay=1000&useExponentialBackOff=false"
argument_list|)
expr_stmt|;
name|createClients
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|assertAllConnectedTo
argument_list|(
name|urls
operator|.
name|get
argument_list|(
name|BROKER_A_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|restart
argument_list|(
literal|true
argument_list|,
name|BROKER_A_NAME
argument_list|,
name|BROKER_B_NAME
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testPriorityBackupAndUpdateClients
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Broker A
name|addBroker
argument_list|(
name|BROKER_A_NAME
argument_list|,
name|createBroker
argument_list|(
name|BROKER_A_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|addTransportConnector
argument_list|(
name|getBroker
argument_list|(
name|BROKER_A_NAME
argument_list|)
argument_list|,
literal|"openwire"
argument_list|,
name|BROKER_A_CLIENT_TC_ADDRESS
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|addNetworkBridge
argument_list|(
name|getBroker
argument_list|(
name|BROKER_A_NAME
argument_list|)
argument_list|,
literal|"A_2_B_Bridge"
argument_list|,
literal|"static://("
operator|+
name|BROKER_B_CLIENT_TC_ADDRESS
operator|+
literal|")?useExponentialBackOff=false"
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|getBroker
argument_list|(
name|BROKER_A_NAME
argument_list|)
operator|.
name|start
argument_list|()
expr_stmt|;
comment|// Broker B
name|addBroker
argument_list|(
name|BROKER_B_NAME
argument_list|,
name|createBroker
argument_list|(
name|BROKER_B_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|addTransportConnector
argument_list|(
name|getBroker
argument_list|(
name|BROKER_B_NAME
argument_list|)
argument_list|,
literal|"openwire"
argument_list|,
name|BROKER_B_CLIENT_TC_ADDRESS
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|addNetworkBridge
argument_list|(
name|getBroker
argument_list|(
name|BROKER_B_NAME
argument_list|)
argument_list|,
literal|"B_2_A_Bridge"
argument_list|,
literal|"static://("
operator|+
name|BROKER_A_CLIENT_TC_ADDRESS
operator|+
literal|")?useExponentialBackOff=false"
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|getBroker
argument_list|(
name|BROKER_B_NAME
argument_list|)
operator|.
name|start
argument_list|()
expr_stmt|;
name|getBroker
argument_list|(
name|BROKER_B_NAME
argument_list|)
operator|.
name|waitUntilStarted
argument_list|()
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|setClientUrl
argument_list|(
literal|"failover:("
operator|+
name|BROKER_A_CLIENT_TC_ADDRESS
operator|+
literal|","
operator|+
name|BROKER_B_CLIENT_TC_ADDRESS
operator|+
literal|")?randomize=false&priorityBackup=true&initialReconnectDelay=1000&useExponentialBackOff=false"
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Client URI will be: "
operator|+
name|getClientUrl
argument_list|()
argument_list|)
expr_stmt|;
name|createClients
argument_list|(
literal|5
argument_list|)
expr_stmt|;
comment|// Let's wait a little bit longer just in case it takes a while to realize that the
comment|// Broker A is the one with higher priority.
name|Thread
operator|.
name|sleep
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
name|assertAllConnectedTo
argument_list|(
name|urls
operator|.
name|get
argument_list|(
name|BROKER_A_NAME
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|restart
parameter_list|(
name|boolean
name|primary
parameter_list|,
name|String
name|primaryName
parameter_list|,
name|String
name|secondaryName
parameter_list|)
throws|throws
name|Exception
block|{
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
if|if
condition|(
name|primary
condition|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Stopping "
operator|+
name|primaryName
argument_list|)
expr_stmt|;
name|stopBroker
argument_list|(
name|primaryName
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Stopping "
operator|+
name|secondaryName
argument_list|)
expr_stmt|;
name|stopBroker
argument_list|(
name|secondaryName
argument_list|)
expr_stmt|;
block|}
name|Thread
operator|.
name|sleep
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
if|if
condition|(
name|primary
condition|)
block|{
name|assertAllConnectedTo
argument_list|(
name|urls
operator|.
name|get
argument_list|(
name|secondaryName
argument_list|)
argument_list|)
expr_stmt|;
name|assertBrokerInfo
argument_list|(
name|secondaryName
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertAllConnectedTo
argument_list|(
name|urls
operator|.
name|get
argument_list|(
name|primaryName
argument_list|)
argument_list|)
expr_stmt|;
name|assertBrokerInfo
argument_list|(
name|primaryName
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|primary
condition|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Starting "
operator|+
name|primaryName
argument_list|)
expr_stmt|;
name|createBrokerByName
argument_list|(
name|primaryName
argument_list|)
expr_stmt|;
name|getBroker
argument_list|(
name|primaryName
argument_list|)
operator|.
name|waitUntilStarted
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Starting "
operator|+
name|secondaryName
argument_list|)
expr_stmt|;
name|createBrokerByName
argument_list|(
name|secondaryName
argument_list|)
expr_stmt|;
name|getBroker
argument_list|(
name|secondaryName
argument_list|)
operator|.
name|waitUntilStarted
argument_list|()
expr_stmt|;
block|}
name|Thread
operator|.
name|sleep
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
name|assertAllConnectedTo
argument_list|(
name|urls
operator|.
name|get
argument_list|(
name|primaryName
argument_list|)
argument_list|)
expr_stmt|;
name|assertBrokerInfo
argument_list|(
name|primaryName
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|createBrokerByName
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|name
operator|.
name|equals
argument_list|(
name|BROKER_A_NAME
argument_list|)
condition|)
block|{
name|createBrokerA
argument_list|()
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|name
operator|.
name|equals
argument_list|(
name|BROKER_B_NAME
argument_list|)
condition|)
block|{
name|createBrokerB
argument_list|()
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|Exception
argument_list|(
literal|"Unknown broker "
operator|+
name|name
argument_list|)
throw|;
block|}
block|}
specifier|private
name|void
name|createBrokerA
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|getBroker
argument_list|(
name|BROKER_A_NAME
argument_list|)
operator|==
literal|null
condition|)
block|{
name|addBroker
argument_list|(
name|BROKER_A_NAME
argument_list|,
name|createBroker
argument_list|(
name|BROKER_A_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|addTransportConnector
argument_list|(
name|getBroker
argument_list|(
name|BROKER_A_NAME
argument_list|)
argument_list|,
literal|"openwire"
argument_list|,
name|BROKER_A_CLIENT_TC_ADDRESS
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|addNetworkBridge
argument_list|(
name|getBroker
argument_list|(
name|BROKER_A_NAME
argument_list|)
argument_list|,
literal|"A_2_B_Bridge"
argument_list|,
literal|"static://("
operator|+
name|BROKER_B_CLIENT_TC_ADDRESS
operator|+
literal|")?useExponentialBackOff=false"
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|getBroker
argument_list|(
name|BROKER_A_NAME
argument_list|)
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|createBrokerB
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|getBroker
argument_list|(
name|BROKER_B_NAME
argument_list|)
operator|==
literal|null
condition|)
block|{
name|addBroker
argument_list|(
name|BROKER_B_NAME
argument_list|,
name|createBroker
argument_list|(
name|BROKER_B_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|addTransportConnector
argument_list|(
name|getBroker
argument_list|(
name|BROKER_B_NAME
argument_list|)
argument_list|,
literal|"openwire"
argument_list|,
name|BROKER_B_CLIENT_TC_ADDRESS
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|addNetworkBridge
argument_list|(
name|getBroker
argument_list|(
name|BROKER_B_NAME
argument_list|)
argument_list|,
literal|"B_2_A_Bridge"
argument_list|,
literal|"static://("
operator|+
name|BROKER_A_CLIENT_TC_ADDRESS
operator|+
literal|")?useExponentialBackOff=false"
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|getBroker
argument_list|(
name|BROKER_B_NAME
argument_list|)
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|shutdownClients
argument_list|()
expr_stmt|;
name|destroyBrokerCluster
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

