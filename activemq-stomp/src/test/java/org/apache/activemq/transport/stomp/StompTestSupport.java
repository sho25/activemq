begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|stomp
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|Socket
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|ProtectionDomain
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Vector
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|JMSException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|MalformedObjectNameException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|ObjectName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerPlugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|TransportConnector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|jmx
operator|.
name|BrokerViewMBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|jmx
operator|.
name|QueueViewMBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|jmx
operator|.
name|TopicViewMBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|filter
operator|.
name|DestinationMapEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|security
operator|.
name|AuthenticationUser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|security
operator|.
name|AuthorizationEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|security
operator|.
name|AuthorizationPlugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|security
operator|.
name|DefaultAuthorizationMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|security
operator|.
name|SimpleAuthenticationPlugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|security
operator|.
name|TempDestinationAuthorizationEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|stomp
operator|.
name|util
operator|.
name|ResourceLoadingSslContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|stomp
operator|.
name|util
operator|.
name|XStreamBrokerContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TestName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
specifier|public
class|class
name|StompTestSupport
block|{
specifier|protected
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|StompTestSupport
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
name|BrokerService
name|brokerService
decl_stmt|;
specifier|protected
name|int
name|openwirePort
decl_stmt|;
specifier|protected
name|int
name|port
decl_stmt|;
specifier|protected
name|int
name|sslPort
decl_stmt|;
specifier|protected
name|int
name|nioPort
decl_stmt|;
specifier|protected
name|int
name|nioSslPort
decl_stmt|;
specifier|protected
name|int
name|autoPort
decl_stmt|;
specifier|protected
name|int
name|autoSslPort
decl_stmt|;
specifier|protected
name|int
name|autoNioPort
decl_stmt|;
specifier|protected
name|int
name|autoNioSslPort
decl_stmt|;
specifier|protected
name|String
name|jmsUri
init|=
literal|"vm://localhost"
decl_stmt|;
specifier|protected
name|StompConnection
name|stompConnection
decl_stmt|;
specifier|protected
name|ActiveMQConnectionFactory
name|cf
decl_stmt|;
specifier|protected
name|Vector
argument_list|<
name|Throwable
argument_list|>
name|exceptions
init|=
operator|new
name|Vector
argument_list|<
name|Throwable
argument_list|>
argument_list|()
decl_stmt|;
annotation|@
name|Rule
specifier|public
name|TestName
name|name
init|=
operator|new
name|TestName
argument_list|()
decl_stmt|;
specifier|public
name|File
name|basedir
parameter_list|()
throws|throws
name|IOException
block|{
name|ProtectionDomain
name|protectionDomain
init|=
name|getClass
argument_list|()
operator|.
name|getProtectionDomain
argument_list|()
decl_stmt|;
return|return
operator|new
name|File
argument_list|(
operator|new
name|File
argument_list|(
name|protectionDomain
operator|.
name|getCodeSource
argument_list|()
operator|.
name|getLocation
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|)
argument_list|,
literal|"../.."
argument_list|)
operator|.
name|getCanonicalFile
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|Exception
block|{
specifier|final
name|StompTestSupport
name|s
init|=
operator|new
name|StompTestSupport
argument_list|()
decl_stmt|;
name|s
operator|.
name|sslPort
operator|=
literal|5675
expr_stmt|;
name|s
operator|.
name|port
operator|=
literal|5676
expr_stmt|;
name|s
operator|.
name|nioPort
operator|=
literal|5677
expr_stmt|;
name|s
operator|.
name|nioSslPort
operator|=
literal|5678
expr_stmt|;
name|s
operator|.
name|autoPort
operator|=
literal|5679
expr_stmt|;
name|s
operator|.
name|autoSslPort
operator|=
literal|5680
expr_stmt|;
name|s
operator|.
name|autoNioPort
operator|=
literal|5681
expr_stmt|;
name|s
operator|.
name|autoNioSslPort
operator|=
literal|5682
expr_stmt|;
name|s
operator|.
name|startBroker
argument_list|()
expr_stmt|;
while|while
condition|(
literal|true
condition|)
block|{
name|Thread
operator|.
name|sleep
argument_list|(
literal|100000
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
operator|.
name|getMethodName
argument_list|()
return|;
block|}
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"========== start "
operator|+
name|getName
argument_list|()
operator|+
literal|" =========="
argument_list|)
expr_stmt|;
name|startBroker
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|stompDisconnect
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
comment|// its okay if the stomp connection is already closed.
block|}
finally|finally
block|{
name|stopBroker
argument_list|()
expr_stmt|;
block|}
name|LOG
operator|.
name|info
argument_list|(
literal|"========== finished "
operator|+
name|getName
argument_list|()
operator|+
literal|" =========="
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|startBroker
parameter_list|()
throws|throws
name|Exception
block|{
name|createBroker
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|XStreamBrokerContext
name|context
init|=
operator|new
name|XStreamBrokerContext
argument_list|()
decl_stmt|;
name|brokerService
operator|.
name|setBrokerContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|applyBrokerPolicies
argument_list|()
expr_stmt|;
name|applyMemoryLimitPolicy
argument_list|()
expr_stmt|;
comment|// Setup SSL context...
name|File
name|keyStore
init|=
operator|new
name|File
argument_list|(
name|basedir
argument_list|()
argument_list|,
literal|"src/test/resources/server.keystore"
argument_list|)
decl_stmt|;
name|File
name|trustStore
init|=
operator|new
name|File
argument_list|(
name|basedir
argument_list|()
argument_list|,
literal|"src/test/resources/client.keystore"
argument_list|)
decl_stmt|;
specifier|final
name|ResourceLoadingSslContext
name|sslContext
init|=
operator|new
name|ResourceLoadingSslContext
argument_list|()
decl_stmt|;
name|sslContext
operator|.
name|setKeyStore
argument_list|(
name|keyStore
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|sslContext
operator|.
name|setKeyStorePassword
argument_list|(
literal|"password"
argument_list|)
expr_stmt|;
name|sslContext
operator|.
name|setTrustStore
argument_list|(
name|trustStore
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|sslContext
operator|.
name|setTrustStorePassword
argument_list|(
literal|"password"
argument_list|)
expr_stmt|;
name|sslContext
operator|.
name|afterPropertiesSet
argument_list|()
expr_stmt|;
name|brokerService
operator|.
name|setSslContext
argument_list|(
name|sslContext
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"javax.net.ssl.trustStore"
argument_list|,
name|keyStore
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"javax.net.ssl.trustStorePassword"
argument_list|,
literal|"password"
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"javax.net.ssl.trustStoreType"
argument_list|,
literal|"jks"
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"javax.net.ssl.keyStore"
argument_list|,
name|trustStore
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"javax.net.ssl.keyStorePassword"
argument_list|,
literal|"password"
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"javax.net.ssl.keyStoreType"
argument_list|,
literal|"jks"
argument_list|)
expr_stmt|;
name|ArrayList
argument_list|<
name|BrokerPlugin
argument_list|>
name|plugins
init|=
operator|new
name|ArrayList
argument_list|<
name|BrokerPlugin
argument_list|>
argument_list|()
decl_stmt|;
name|addTranportConnectors
argument_list|()
expr_stmt|;
name|addOpenWireConnector
argument_list|()
expr_stmt|;
name|BrokerPlugin
name|authenticationPlugin
init|=
name|configureAuthentication
argument_list|()
decl_stmt|;
if|if
condition|(
name|authenticationPlugin
operator|!=
literal|null
condition|)
block|{
name|plugins
operator|.
name|add
argument_list|(
name|configureAuthorization
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|BrokerPlugin
name|authorizationPlugin
init|=
name|configureAuthorization
argument_list|()
decl_stmt|;
if|if
condition|(
name|authorizationPlugin
operator|!=
literal|null
condition|)
block|{
name|plugins
operator|.
name|add
argument_list|(
name|configureAuthentication
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|addAdditionalPlugins
argument_list|(
name|plugins
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|plugins
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|BrokerPlugin
index|[]
name|array
init|=
operator|new
name|BrokerPlugin
index|[
name|plugins
operator|.
name|size
argument_list|()
index|]
decl_stmt|;
name|brokerService
operator|.
name|setPlugins
argument_list|(
name|plugins
operator|.
name|toArray
argument_list|(
name|array
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|brokerService
operator|.
name|start
argument_list|()
expr_stmt|;
name|brokerService
operator|.
name|waitUntilStarted
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|stopBroker
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|brokerService
operator|!=
literal|null
condition|)
block|{
name|brokerService
operator|.
name|stop
argument_list|()
expr_stmt|;
name|brokerService
operator|.
name|waitUntilStopped
argument_list|()
expr_stmt|;
name|brokerService
operator|=
literal|null
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|restartBroker
parameter_list|()
throws|throws
name|Exception
block|{
name|restartBroker
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|restartBroker
parameter_list|(
name|boolean
name|deleteAllOnStartup
parameter_list|)
throws|throws
name|Exception
block|{
name|stopBroker
argument_list|()
expr_stmt|;
name|createBroker
argument_list|(
name|deleteAllOnStartup
argument_list|)
expr_stmt|;
name|brokerService
operator|.
name|start
argument_list|()
expr_stmt|;
name|brokerService
operator|.
name|waitUntilStarted
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|createBroker
parameter_list|(
name|boolean
name|deleteAllOnStartup
parameter_list|)
throws|throws
name|Exception
block|{
name|brokerService
operator|=
operator|new
name|BrokerService
argument_list|()
expr_stmt|;
name|brokerService
operator|.
name|setPersistent
argument_list|(
name|isPersistent
argument_list|()
argument_list|)
expr_stmt|;
name|brokerService
operator|.
name|setDeleteAllMessagesOnStartup
argument_list|(
name|deleteAllOnStartup
argument_list|)
expr_stmt|;
name|brokerService
operator|.
name|setAdvisorySupport
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|brokerService
operator|.
name|setSchedulerSupport
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|brokerService
operator|.
name|setPopulateJMSXUserID
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|brokerService
operator|.
name|setSchedulerSupport
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|brokerService
operator|.
name|setUseJmx
argument_list|(
name|isUseJmx
argument_list|()
argument_list|)
expr_stmt|;
name|brokerService
operator|.
name|getManagementContext
argument_list|()
operator|.
name|setCreateConnector
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|brokerService
operator|.
name|getManagementContext
argument_list|()
operator|.
name|setCreateMBeanServer
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|addAdditionalPlugins
parameter_list|(
name|List
argument_list|<
name|BrokerPlugin
argument_list|>
name|plugins
parameter_list|)
throws|throws
name|Exception
block|{     }
specifier|protected
name|void
name|applyMemoryLimitPolicy
parameter_list|()
throws|throws
name|Exception
block|{     }
specifier|protected
name|BrokerPlugin
name|configureAuthentication
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|AuthenticationUser
argument_list|>
name|users
init|=
operator|new
name|ArrayList
argument_list|<
name|AuthenticationUser
argument_list|>
argument_list|()
decl_stmt|;
name|users
operator|.
name|add
argument_list|(
operator|new
name|AuthenticationUser
argument_list|(
literal|"system"
argument_list|,
literal|"manager"
argument_list|,
literal|"users,admins"
argument_list|)
argument_list|)
expr_stmt|;
name|users
operator|.
name|add
argument_list|(
operator|new
name|AuthenticationUser
argument_list|(
literal|"user"
argument_list|,
literal|"password"
argument_list|,
literal|"users"
argument_list|)
argument_list|)
expr_stmt|;
name|users
operator|.
name|add
argument_list|(
operator|new
name|AuthenticationUser
argument_list|(
literal|"guest"
argument_list|,
literal|"password"
argument_list|,
literal|"guests"
argument_list|)
argument_list|)
expr_stmt|;
name|SimpleAuthenticationPlugin
name|authenticationPlugin
init|=
operator|new
name|SimpleAuthenticationPlugin
argument_list|(
name|users
argument_list|)
decl_stmt|;
return|return
name|authenticationPlugin
return|;
block|}
specifier|protected
name|BrokerPlugin
name|configureAuthorization
parameter_list|()
throws|throws
name|Exception
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
name|List
argument_list|<
name|DestinationMapEntry
argument_list|>
name|authorizationEntries
init|=
operator|new
name|ArrayList
argument_list|<
name|DestinationMapEntry
argument_list|>
argument_list|()
decl_stmt|;
name|AuthorizationEntry
name|entry
init|=
operator|new
name|AuthorizationEntry
argument_list|()
decl_stmt|;
name|entry
operator|.
name|setQueue
argument_list|(
literal|">"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setRead
argument_list|(
literal|"admins"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setWrite
argument_list|(
literal|"admins"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setAdmin
argument_list|(
literal|"admins"
argument_list|)
expr_stmt|;
name|authorizationEntries
operator|.
name|add
argument_list|(
name|entry
argument_list|)
expr_stmt|;
name|entry
operator|=
operator|new
name|AuthorizationEntry
argument_list|()
expr_stmt|;
name|entry
operator|.
name|setQueue
argument_list|(
literal|"USERS.>"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setRead
argument_list|(
literal|"users"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setWrite
argument_list|(
literal|"users"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setAdmin
argument_list|(
literal|"users"
argument_list|)
expr_stmt|;
name|authorizationEntries
operator|.
name|add
argument_list|(
name|entry
argument_list|)
expr_stmt|;
name|entry
operator|=
operator|new
name|AuthorizationEntry
argument_list|()
expr_stmt|;
name|entry
operator|.
name|setQueue
argument_list|(
literal|"GUEST.>"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setRead
argument_list|(
literal|"guests"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setWrite
argument_list|(
literal|"guests,users"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setAdmin
argument_list|(
literal|"guests,users"
argument_list|)
expr_stmt|;
name|authorizationEntries
operator|.
name|add
argument_list|(
name|entry
argument_list|)
expr_stmt|;
name|entry
operator|=
operator|new
name|AuthorizationEntry
argument_list|()
expr_stmt|;
name|entry
operator|.
name|setTopic
argument_list|(
literal|">"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setRead
argument_list|(
literal|"admins"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setWrite
argument_list|(
literal|"admins"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setAdmin
argument_list|(
literal|"admins"
argument_list|)
expr_stmt|;
name|authorizationEntries
operator|.
name|add
argument_list|(
name|entry
argument_list|)
expr_stmt|;
name|entry
operator|=
operator|new
name|AuthorizationEntry
argument_list|()
expr_stmt|;
name|entry
operator|.
name|setTopic
argument_list|(
literal|"USERS.>"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setRead
argument_list|(
literal|"users"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setWrite
argument_list|(
literal|"users"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setAdmin
argument_list|(
literal|"users"
argument_list|)
expr_stmt|;
name|authorizationEntries
operator|.
name|add
argument_list|(
name|entry
argument_list|)
expr_stmt|;
name|entry
operator|=
operator|new
name|AuthorizationEntry
argument_list|()
expr_stmt|;
name|entry
operator|.
name|setTopic
argument_list|(
literal|"GUEST.>"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setRead
argument_list|(
literal|"guests"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setWrite
argument_list|(
literal|"guests,users"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setAdmin
argument_list|(
literal|"guests,users"
argument_list|)
expr_stmt|;
name|authorizationEntries
operator|.
name|add
argument_list|(
name|entry
argument_list|)
expr_stmt|;
name|entry
operator|=
operator|new
name|AuthorizationEntry
argument_list|()
expr_stmt|;
name|entry
operator|.
name|setTopic
argument_list|(
literal|"ActiveMQ.Advisory.>"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setRead
argument_list|(
literal|"guests,users"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setWrite
argument_list|(
literal|"guests,users"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setAdmin
argument_list|(
literal|"guests,users"
argument_list|)
expr_stmt|;
name|authorizationEntries
operator|.
name|add
argument_list|(
name|entry
argument_list|)
expr_stmt|;
name|TempDestinationAuthorizationEntry
name|tempEntry
init|=
operator|new
name|TempDestinationAuthorizationEntry
argument_list|()
decl_stmt|;
name|tempEntry
operator|.
name|setRead
argument_list|(
literal|"admins"
argument_list|)
expr_stmt|;
name|tempEntry
operator|.
name|setWrite
argument_list|(
literal|"admins"
argument_list|)
expr_stmt|;
name|tempEntry
operator|.
name|setAdmin
argument_list|(
literal|"admins"
argument_list|)
expr_stmt|;
name|DefaultAuthorizationMap
name|authorizationMap
init|=
operator|new
name|DefaultAuthorizationMap
argument_list|(
name|authorizationEntries
argument_list|)
decl_stmt|;
name|authorizationMap
operator|.
name|setTempDestinationAuthorizationEntry
argument_list|(
name|tempEntry
argument_list|)
expr_stmt|;
name|AuthorizationPlugin
name|authorizationPlugin
init|=
operator|new
name|AuthorizationPlugin
argument_list|(
name|authorizationMap
argument_list|)
decl_stmt|;
return|return
name|authorizationPlugin
return|;
block|}
specifier|protected
name|void
name|applyBrokerPolicies
parameter_list|()
throws|throws
name|Exception
block|{
comment|// NOOP here
block|}
specifier|public
name|void
name|addOpenWireConnector
parameter_list|()
throws|throws
name|Exception
block|{
name|cf
operator|=
operator|new
name|ActiveMQConnectionFactory
argument_list|(
name|jmsUri
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|addTranportConnectors
parameter_list|()
throws|throws
name|Exception
block|{
name|TransportConnector
name|connector
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|isUseTcpConnector
argument_list|()
condition|)
block|{
name|connector
operator|=
name|brokerService
operator|.
name|addConnector
argument_list|(
literal|"stomp://0.0.0.0:"
operator|+
name|port
operator|+
name|getAdditionalConfig
argument_list|()
argument_list|)
expr_stmt|;
name|port
operator|=
name|connector
operator|.
name|getConnectUri
argument_list|()
operator|.
name|getPort
argument_list|()
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"Using stomp port "
operator|+
name|port
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|isUseSslConnector
argument_list|()
condition|)
block|{
name|connector
operator|=
name|brokerService
operator|.
name|addConnector
argument_list|(
literal|"stomp+ssl://0.0.0.0:"
operator|+
name|sslPort
operator|+
name|getAdditionalConfig
argument_list|()
argument_list|)
expr_stmt|;
name|sslPort
operator|=
name|connector
operator|.
name|getConnectUri
argument_list|()
operator|.
name|getPort
argument_list|()
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"Using stomp+ssl port "
operator|+
name|sslPort
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|isUseNioConnector
argument_list|()
condition|)
block|{
name|connector
operator|=
name|brokerService
operator|.
name|addConnector
argument_list|(
literal|"stomp+nio://0.0.0.0:"
operator|+
name|nioPort
operator|+
name|getAdditionalConfig
argument_list|()
argument_list|)
expr_stmt|;
name|nioPort
operator|=
name|connector
operator|.
name|getConnectUri
argument_list|()
operator|.
name|getPort
argument_list|()
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"Using stomp+nio port "
operator|+
name|nioPort
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|isUseNioPlusSslConnector
argument_list|()
condition|)
block|{
name|connector
operator|=
name|brokerService
operator|.
name|addConnector
argument_list|(
literal|"stomp+nio+ssl://0.0.0.0:"
operator|+
name|nioSslPort
operator|+
name|getAdditionalConfig
argument_list|()
argument_list|)
expr_stmt|;
name|nioSslPort
operator|=
name|connector
operator|.
name|getConnectUri
argument_list|()
operator|.
name|getPort
argument_list|()
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"Using stomp+nio+ssl port "
operator|+
name|nioSslPort
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|isUseAutoConnector
argument_list|()
condition|)
block|{
name|connector
operator|=
name|brokerService
operator|.
name|addConnector
argument_list|(
literal|"auto://0.0.0.0:"
operator|+
name|autoPort
operator|+
name|getAdditionalConfig
argument_list|()
argument_list|)
expr_stmt|;
name|autoPort
operator|=
name|connector
operator|.
name|getConnectUri
argument_list|()
operator|.
name|getPort
argument_list|()
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"Using auto port "
operator|+
name|autoPort
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|isUseAutoSslConnector
argument_list|()
condition|)
block|{
name|connector
operator|=
name|brokerService
operator|.
name|addConnector
argument_list|(
literal|"auto+ssl://0.0.0.0:"
operator|+
name|autoSslPort
operator|+
name|getAdditionalConfig
argument_list|()
argument_list|)
expr_stmt|;
name|autoSslPort
operator|=
name|connector
operator|.
name|getConnectUri
argument_list|()
operator|.
name|getPort
argument_list|()
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"Using auto+ssl port "
operator|+
name|autoSslPort
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|isUseAutoNioConnector
argument_list|()
condition|)
block|{
name|connector
operator|=
name|brokerService
operator|.
name|addConnector
argument_list|(
literal|"auto+nio://0.0.0.0:"
operator|+
name|autoNioPort
operator|+
name|getAdditionalConfig
argument_list|()
argument_list|)
expr_stmt|;
name|autoNioPort
operator|=
name|connector
operator|.
name|getConnectUri
argument_list|()
operator|.
name|getPort
argument_list|()
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"Using auto+nio port "
operator|+
name|autoNioPort
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|isUseAutoNioPlusSslConnector
argument_list|()
condition|)
block|{
name|connector
operator|=
name|brokerService
operator|.
name|addConnector
argument_list|(
literal|"auto+nio+ssl://0.0.0.0:"
operator|+
name|autoNioSslPort
operator|+
name|getAdditionalConfig
argument_list|()
argument_list|)
expr_stmt|;
name|autoNioSslPort
operator|=
name|connector
operator|.
name|getConnectUri
argument_list|()
operator|.
name|getPort
argument_list|()
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"Using auto+nio+ssl port "
operator|+
name|autoNioSslPort
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|boolean
name|isPersistent
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
specifier|protected
name|boolean
name|isUseJmx
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|protected
name|boolean
name|isUseTcpConnector
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|protected
name|boolean
name|isUseSslConnector
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
specifier|protected
name|boolean
name|isUseNioConnector
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
specifier|protected
name|boolean
name|isUseNioPlusSslConnector
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
specifier|protected
name|boolean
name|isUseAutoConnector
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
specifier|protected
name|boolean
name|isUseAutoSslConnector
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
specifier|protected
name|boolean
name|isUseAutoNioConnector
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
specifier|protected
name|boolean
name|isUseAutoNioPlusSslConnector
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
specifier|protected
name|String
name|getAdditionalConfig
parameter_list|()
block|{
return|return
literal|""
return|;
block|}
specifier|protected
name|StompConnection
name|stompConnect
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|stompConnection
operator|==
literal|null
condition|)
block|{
name|stompConnection
operator|=
operator|new
name|StompConnection
argument_list|()
expr_stmt|;
block|}
name|stompConnection
operator|.
name|open
argument_list|(
name|createSocket
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|stompConnection
return|;
block|}
specifier|protected
name|StompConnection
name|stompConnect
parameter_list|(
name|StompConnection
name|connection
parameter_list|)
throws|throws
name|Exception
block|{
name|connection
operator|.
name|open
argument_list|(
name|createSocket
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|stompConnection
return|;
block|}
specifier|protected
name|Socket
name|createSocket
parameter_list|()
throws|throws
name|IOException
block|{
return|return
operator|new
name|Socket
argument_list|(
literal|"127.0.0.1"
argument_list|,
name|this
operator|.
name|port
argument_list|)
return|;
block|}
specifier|protected
name|String
name|getQueueName
parameter_list|()
block|{
return|return
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|"."
operator|+
name|name
operator|.
name|getMethodName
argument_list|()
return|;
block|}
specifier|protected
name|String
name|getTopicName
parameter_list|()
block|{
return|return
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|"."
operator|+
name|name
operator|.
name|getMethodName
argument_list|()
return|;
block|}
specifier|protected
name|void
name|stompDisconnect
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|stompConnection
operator|!=
literal|null
condition|)
block|{
name|stompConnection
operator|.
name|disconnect
argument_list|()
expr_stmt|;
name|stompConnection
operator|.
name|close
argument_list|()
expr_stmt|;
name|stompConnection
operator|=
literal|null
expr_stmt|;
block|}
block|}
specifier|protected
name|BrokerViewMBean
name|getProxyToBroker
parameter_list|()
throws|throws
name|MalformedObjectNameException
throws|,
name|JMSException
block|{
name|ObjectName
name|brokerViewMBean
init|=
operator|new
name|ObjectName
argument_list|(
literal|"org.apache.activemq:type=Broker,brokerName=localhost"
argument_list|)
decl_stmt|;
name|BrokerViewMBean
name|proxy
init|=
operator|(
name|BrokerViewMBean
operator|)
name|brokerService
operator|.
name|getManagementContext
argument_list|()
operator|.
name|newProxyInstance
argument_list|(
name|brokerViewMBean
argument_list|,
name|BrokerViewMBean
operator|.
name|class
argument_list|,
literal|true
argument_list|)
decl_stmt|;
return|return
name|proxy
return|;
block|}
specifier|protected
name|QueueViewMBean
name|getProxyToQueue
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|MalformedObjectNameException
throws|,
name|JMSException
block|{
name|ObjectName
name|queueViewMBeanName
init|=
operator|new
name|ObjectName
argument_list|(
literal|"org.apache.activemq:type=Broker,brokerName=localhost,destinationType=Queue,destinationName="
operator|+
name|name
argument_list|)
decl_stmt|;
name|QueueViewMBean
name|proxy
init|=
operator|(
name|QueueViewMBean
operator|)
name|brokerService
operator|.
name|getManagementContext
argument_list|()
operator|.
name|newProxyInstance
argument_list|(
name|queueViewMBeanName
argument_list|,
name|QueueViewMBean
operator|.
name|class
argument_list|,
literal|true
argument_list|)
decl_stmt|;
return|return
name|proxy
return|;
block|}
specifier|protected
name|TopicViewMBean
name|getProxyToTopic
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|MalformedObjectNameException
throws|,
name|JMSException
block|{
name|ObjectName
name|topicViewMBeanName
init|=
operator|new
name|ObjectName
argument_list|(
literal|"org.apache.activemq:type=Broker,brokerName=localhost,destinationType=Topic,destinationName="
operator|+
name|name
argument_list|)
decl_stmt|;
name|TopicViewMBean
name|proxy
init|=
operator|(
name|TopicViewMBean
operator|)
name|brokerService
operator|.
name|getManagementContext
argument_list|()
operator|.
name|newProxyInstance
argument_list|(
name|topicViewMBeanName
argument_list|,
name|TopicViewMBean
operator|.
name|class
argument_list|,
literal|true
argument_list|)
decl_stmt|;
return|return
name|proxy
return|;
block|}
block|}
end_class

end_unit

