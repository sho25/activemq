begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|blob
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ActiveMQBlobMessage
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|JMSException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|MalformedURLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_comment
comment|/**  * A default implementation of {@link BlobUploadStrategy} which uses the URL class to upload  * files or streams to a remote URL  */
end_comment

begin_class
specifier|public
class|class
name|DefaultBlobUploadStrategy
implements|implements
name|BlobUploadStrategy
block|{
specifier|private
name|BlobTransferPolicy
name|transferPolicy
decl_stmt|;
specifier|public
name|DefaultBlobUploadStrategy
parameter_list|(
name|BlobTransferPolicy
name|transferPolicy
parameter_list|)
block|{
name|this
operator|.
name|transferPolicy
operator|=
name|transferPolicy
expr_stmt|;
block|}
specifier|public
name|URL
name|uploadFile
parameter_list|(
name|ActiveMQBlobMessage
name|message
parameter_list|,
name|File
name|file
parameter_list|)
throws|throws
name|JMSException
throws|,
name|IOException
block|{
name|URL
name|url
init|=
name|createUploadURL
argument_list|(
name|message
argument_list|)
decl_stmt|;
comment|// TODO upload to URL
comment|// return url;
throw|throw
operator|new
name|JMSException
argument_list|(
literal|"Not implemented yet!"
argument_list|)
throw|;
block|}
specifier|public
name|URL
name|uploadStream
parameter_list|(
name|ActiveMQBlobMessage
name|message
parameter_list|,
name|InputStream
name|in
parameter_list|)
throws|throws
name|JMSException
throws|,
name|IOException
block|{
name|URL
name|url
init|=
name|createUploadURL
argument_list|(
name|message
argument_list|)
decl_stmt|;
comment|// TODO upload to URL
comment|// return url;
throw|throw
operator|new
name|JMSException
argument_list|(
literal|"Not implemented yet!"
argument_list|)
throw|;
block|}
specifier|protected
name|URL
name|createUploadURL
parameter_list|(
name|ActiveMQBlobMessage
name|message
parameter_list|)
throws|throws
name|JMSException
throws|,
name|MalformedURLException
block|{
return|return
operator|new
name|URL
argument_list|(
name|transferPolicy
operator|.
name|getUploadUrl
argument_list|()
operator|+
name|message
operator|.
name|getMessageId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

