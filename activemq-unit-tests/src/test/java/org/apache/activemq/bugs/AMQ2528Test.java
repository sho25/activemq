begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|bugs
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageProducer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|EmbeddedBrokerTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|Queue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_comment
comment|/**  * This test demonstrates a bug in which calling  * Queue#removeMatchingMessages("") generates an exception, whereas the JMS  * specification states that an empty selector is valid.  */
end_comment

begin_class
specifier|public
class|class
name|AMQ2528Test
extends|extends
name|EmbeddedBrokerTestSupport
block|{
comment|/** 	 * Setup the test so that the destination is a queue. 	 */
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|useTopic
operator|=
literal|false
expr_stmt|;
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
block|}
comment|/** 	 * This test enqueues test messages to destination and then verifies that 	 * {@link Queue#removeMatchingMessages("")} removes all the messages. 	 */
specifier|public
name|void
name|testRemoveMatchingMessages
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|int
name|NUM_MESSAGES
init|=
literal|100
decl_stmt|;
specifier|final
name|String
name|MESSAGE_ID
init|=
literal|"id"
decl_stmt|;
comment|// Enqueue the test messages.
name|Connection
name|conn
init|=
name|createConnection
argument_list|()
decl_stmt|;
try|try
block|{
name|conn
operator|.
name|start
argument_list|()
expr_stmt|;
name|Session
name|session
init|=
name|conn
operator|.
name|createSession
argument_list|(
literal|false
argument_list|,
name|Session
operator|.
name|AUTO_ACKNOWLEDGE
argument_list|)
decl_stmt|;
name|MessageProducer
name|producer
init|=
name|session
operator|.
name|createProducer
argument_list|(
name|destination
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|id
init|=
literal|0
init|;
name|id
operator|<
name|NUM_MESSAGES
condition|;
name|id
operator|++
control|)
block|{
name|Message
name|message
init|=
name|session
operator|.
name|createMessage
argument_list|()
decl_stmt|;
name|message
operator|.
name|setIntProperty
argument_list|(
name|MESSAGE_ID
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|producer
operator|.
name|send
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
name|producer
operator|.
name|close
argument_list|()
expr_stmt|;
name|session
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|conn
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
comment|// Verify that half of the messages can be removed by selector.
name|Queue
name|queue
init|=
operator|(
name|Queue
operator|)
name|broker
operator|.
name|getRegionBroker
argument_list|()
operator|.
name|getDestinations
argument_list|(
name|destination
argument_list|)
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|NUM_MESSAGES
operator|/
literal|2
argument_list|,
name|queue
operator|.
name|removeMatchingMessages
argument_list|(
name|MESSAGE_ID
operator|+
literal|"< "
operator|+
name|NUM_MESSAGES
operator|/
literal|2
argument_list|)
argument_list|)
expr_stmt|;
comment|// Verify that the remainder of the messages can be removed by empty
comment|// selector.
name|Assert
operator|.
name|assertEquals
argument_list|(
name|NUM_MESSAGES
operator|-
name|NUM_MESSAGES
operator|/
literal|2
argument_list|,
name|queue
operator|.
name|removeMatchingMessages
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

