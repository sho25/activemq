begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|karaf
operator|.
name|itest
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|CoreOptions
operator|.
name|mavenBundle
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Callable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|CredentialsProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|CloseableHttpResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpGet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpPost
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|utils
operator|.
name|URIBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|impl
operator|.
name|client
operator|.
name|BasicCredentialsProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|impl
operator|.
name|client
operator|.
name|CloseableHttpClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|impl
operator|.
name|client
operator|.
name|HttpClientBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|util
operator|.
name|EntityUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|Option
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|options
operator|.
name|WrappedUrlProvisionOption
import|;
end_import

begin_class
specifier|public
class|class
name|ActiveMQBrokerFeatureTest
extends|extends
name|AbstractFeatureTest
block|{
specifier|static
specifier|final
name|String
name|WEB_CONSOLE_URL
init|=
literal|"http://localhost:8181/activemqweb/"
decl_stmt|;
annotation|@
name|Configuration
specifier|public
specifier|static
name|Option
index|[]
name|configure
parameter_list|()
block|{
return|return
operator|new
name|Option
index|[]
comment|//
block|{
name|configure
argument_list|(
literal|"connector"
argument_list|,
literal|"activemq-broker"
argument_list|)
block|,
comment|//
comment|// To access web console
comment|//mavenBundle("commons-codec", "commons-codec").versionAsInProject(),
name|mavenBundle
argument_list|(
literal|"org.apache.httpcomponents"
argument_list|,
literal|"httpcore-osgi"
argument_list|)
operator|.
name|version
argument_list|(
literal|"4.4.4"
argument_list|)
block|,
name|mavenBundle
argument_list|(
literal|"org.apache.httpcomponents"
argument_list|,
literal|"httpclient-osgi"
argument_list|)
operator|.
name|version
argument_list|(
literal|"4.5.2"
argument_list|)
block|,
name|configureBrokerStart
argument_list|()
block|}
return|;
block|}
specifier|protected
name|String
name|installWrappedBundle
parameter_list|(
name|WrappedUrlProvisionOption
name|option
parameter_list|)
block|{
return|return
name|executeCommand
argument_list|(
literal|"bundle:install 'wrap:"
operator|+
name|option
operator|.
name|getURL
argument_list|()
operator|+
literal|"'"
argument_list|)
return|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|5
operator|*
literal|60
operator|*
literal|1000
argument_list|)
specifier|public
name|void
name|test
parameter_list|()
throws|throws
name|Throwable
block|{
name|assertBrokerStarted
argument_list|()
expr_stmt|;
name|JMSTester
name|jms
init|=
operator|new
name|JMSTester
argument_list|()
decl_stmt|;
name|jms
operator|.
name|produceAndConsume
argument_list|(
name|sessionFactory
argument_list|)
expr_stmt|;
name|jms
operator|.
name|tempSendReceive
argument_list|()
expr_stmt|;
name|jms
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|produceMessageWebConsole
parameter_list|(
name|String
name|nameAndPayload
parameter_list|)
throws|throws
name|Exception
block|{
name|CredentialsProvider
name|credsProvider
init|=
operator|new
name|BasicCredentialsProvider
argument_list|()
decl_stmt|;
name|credsProvider
operator|.
name|setCredentials
argument_list|(
operator|new
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|auth
operator|.
name|AuthScope
argument_list|(
literal|"httpbin.org"
argument_list|,
literal|80
argument_list|)
argument_list|,
operator|new
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|auth
operator|.
name|UsernamePasswordCredentials
argument_list|(
name|KarafShellHelper
operator|.
name|USER
argument_list|,
name|KarafShellHelper
operator|.
name|PASSWORD
argument_list|)
argument_list|)
expr_stmt|;
name|CloseableHttpClient
name|client
init|=
name|HttpClientBuilder
operator|.
name|create
argument_list|()
comment|//
operator|.
name|setDefaultCredentialsProvider
argument_list|(
name|credsProvider
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
name|executeCommand
argument_list|(
literal|"activemq:bstat"
argument_list|)
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"attempting to access web console.."
argument_list|)
expr_stmt|;
name|withinReason
argument_list|(
operator|new
name|Callable
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
specifier|public
name|Boolean
name|call
parameter_list|()
throws|throws
name|Exception
block|{
name|CloseableHttpResponse
name|response
init|=
name|client
operator|.
name|execute
argument_list|(
operator|new
name|HttpGet
argument_list|(
name|WEB_CONSOLE_URL
operator|+
literal|"index.jsp"
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|response
operator|.
name|getStatusLine
argument_list|()
operator|.
name|getStatusCode
argument_list|()
operator|!=
literal|200
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"attempting publish via web console.."
argument_list|)
expr_stmt|;
comment|// need to first get the secret
name|CloseableHttpResponse
name|response
init|=
name|client
operator|.
name|execute
argument_list|(
operator|new
name|HttpGet
argument_list|(
name|WEB_CONSOLE_URL
operator|+
literal|"send.jsp"
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|code
init|=
name|response
operator|.
name|getStatusLine
argument_list|()
operator|.
name|getStatusCode
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"getting send succeeded"
argument_list|,
literal|200
argument_list|,
name|code
argument_list|)
expr_stmt|;
name|String
name|secret
init|=
name|getSecret
argument_list|(
name|EntityUtils
operator|.
name|toString
argument_list|(
name|response
operator|.
name|getEntity
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|URI
name|sendUri
init|=
operator|new
name|URIBuilder
argument_list|(
name|WEB_CONSOLE_URL
operator|+
literal|"sendMessage.action"
argument_list|)
comment|//
operator|.
name|addParameter
argument_list|(
literal|"secret"
argument_list|,
name|secret
argument_list|)
comment|//
operator|.
name|addParameter
argument_list|(
literal|"JMSText"
argument_list|,
name|nameAndPayload
argument_list|)
operator|.
name|addParameter
argument_list|(
literal|"JMSDestination"
argument_list|,
name|nameAndPayload
argument_list|)
operator|.
name|addParameter
argument_list|(
literal|"JMSDestinationType"
argument_list|,
literal|"queue"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|HttpPost
name|post
init|=
operator|new
name|HttpPost
argument_list|(
name|sendUri
argument_list|)
decl_stmt|;
name|CloseableHttpResponse
name|sendResponse
init|=
name|client
operator|.
name|execute
argument_list|(
name|post
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"post succeeded, "
operator|+
name|post
argument_list|,
literal|302
argument_list|,
name|sendResponse
operator|.
name|getStatusLine
argument_list|()
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
name|executeCommand
argument_list|(
literal|"activemq:bstat"
argument_list|)
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|String
name|getSecret
parameter_list|(
name|String
name|response
parameter_list|)
throws|throws
name|IOException
block|{
specifier|final
name|String
name|secretMarker
init|=
literal|"<input type=\"hidden\" name=\"secret\" value=\""
decl_stmt|;
name|String
name|secret
init|=
name|response
operator|.
name|substring
argument_list|(
name|response
operator|.
name|indexOf
argument_list|(
name|secretMarker
argument_list|)
operator|+
name|secretMarker
operator|.
name|length
argument_list|()
argument_list|)
decl_stmt|;
name|secret
operator|=
name|secret
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|secret
operator|.
name|indexOf
argument_list|(
literal|"\"/>"
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|secret
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSendReceiveWeb
parameter_list|()
throws|throws
name|Throwable
block|{
name|assertBrokerStarted
argument_list|()
expr_stmt|;
name|JMSTester
name|jms
init|=
operator|new
name|JMSTester
argument_list|()
decl_stmt|;
specifier|final
name|String
name|nameAndPayload
init|=
name|String
operator|.
name|valueOf
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
decl_stmt|;
name|produceMessageWebConsole
argument_list|(
name|nameAndPayload
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"got our message"
argument_list|,
name|nameAndPayload
argument_list|,
name|jms
operator|.
name|consumeMessage
argument_list|(
name|nameAndPayload
argument_list|)
argument_list|)
expr_stmt|;
name|jms
operator|.
name|tempSendReceive
argument_list|()
expr_stmt|;
name|jms
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

