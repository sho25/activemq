begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|com
operator|.
name|panacya
operator|.
name|platform
operator|.
name|service
operator|.
name|bus
operator|.
name|sender
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ejb
operator|.
name|CreateException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ejb
operator|.
name|EJBException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ejb
operator|.
name|SessionBean
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ejb
operator|.
name|SessionContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|JMSException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Queue
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|QueueConnection
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|QueueConnectionFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|QueueSender
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|QueueSession
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|TextMessage
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|InitialContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|NamingException
import|;
end_import

begin_comment
comment|/**  * @author<a href="mailto:michael.gaffney@panacya.com">Michael Gaffney</a>  */
end_comment

begin_class
specifier|public
class|class
name|SenderBean
implements|implements
name|SessionBean
block|{
specifier|private
name|Log
name|_log
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|SenderBean
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
name|SenderBean
parameter_list|()
block|{     }
specifier|public
name|void
name|ejbCreate
parameter_list|()
throws|throws
name|CreateException
block|{     }
specifier|public
name|void
name|setSessionContext
parameter_list|(
name|SessionContext
name|sessionContext
parameter_list|)
throws|throws
name|EJBException
block|{     }
specifier|public
name|void
name|ejbRemove
parameter_list|()
throws|throws
name|EJBException
block|{     }
specifier|public
name|void
name|ejbActivate
parameter_list|()
throws|throws
name|EJBException
block|{     }
specifier|public
name|void
name|ejbPassivate
parameter_list|()
throws|throws
name|EJBException
block|{     }
specifier|public
name|void
name|sendMessage
parameter_list|(
name|String
name|message
parameter_list|)
throws|throws
name|SenderException
block|{
try|try
block|{
name|send
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NamingException
name|e
parameter_list|)
block|{
name|_log
operator|.
name|error
argument_list|(
name|e
operator|.
name|toString
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|SenderException
argument_list|(
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|JMSException
name|e
parameter_list|)
block|{
name|_log
operator|.
name|error
argument_list|(
name|e
operator|.
name|toString
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|SenderException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
specifier|private
name|void
name|send
parameter_list|(
name|String
name|recMessage
parameter_list|)
throws|throws
name|NamingException
throws|,
name|JMSException
block|{
name|InitialContext
name|initCtx
init|=
operator|new
name|InitialContext
argument_list|()
decl_stmt|;
name|QueueConnectionFactory
name|qcf
init|=
operator|(
name|QueueConnectionFactory
operator|)
name|initCtx
operator|.
name|lookup
argument_list|(
literal|"java:comp/env/jms/MyQueueConnectionFactory"
argument_list|)
decl_stmt|;
name|QueueConnection
name|qcon
init|=
name|qcf
operator|.
name|createQueueConnection
argument_list|()
decl_stmt|;
name|QueueSession
name|qsession
init|=
name|qcon
operator|.
name|createQueueSession
argument_list|(
literal|true
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|Queue
name|q
init|=
operator|(
name|Queue
operator|)
name|initCtx
operator|.
name|lookup
argument_list|(
literal|"java:comp/env/jms/LogQueue"
argument_list|)
decl_stmt|;
name|QueueSender
name|qsender
init|=
name|qsession
operator|.
name|createSender
argument_list|(
name|q
argument_list|)
decl_stmt|;
name|TextMessage
name|message
init|=
name|qsession
operator|.
name|createTextMessage
argument_list|()
decl_stmt|;
name|message
operator|.
name|setText
argument_list|(
literal|"Message Received: "
operator|+
name|recMessage
argument_list|)
expr_stmt|;
name|qsender
operator|.
name|send
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|qsender
operator|.
name|close
argument_list|()
expr_stmt|;
name|qsession
operator|.
name|close
argument_list|()
expr_stmt|;
name|qcon
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

