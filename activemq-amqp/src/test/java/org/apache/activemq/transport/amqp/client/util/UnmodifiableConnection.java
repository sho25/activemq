begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|amqp
operator|.
name|client
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|EnumSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|qpid
operator|.
name|proton
operator|.
name|amqp
operator|.
name|Symbol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|qpid
operator|.
name|proton
operator|.
name|amqp
operator|.
name|transport
operator|.
name|ErrorCondition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|qpid
operator|.
name|proton
operator|.
name|engine
operator|.
name|Collector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|qpid
operator|.
name|proton
operator|.
name|engine
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|qpid
operator|.
name|proton
operator|.
name|engine
operator|.
name|Delivery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|qpid
operator|.
name|proton
operator|.
name|engine
operator|.
name|EndpointState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|qpid
operator|.
name|proton
operator|.
name|engine
operator|.
name|Link
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|qpid
operator|.
name|proton
operator|.
name|engine
operator|.
name|Record
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|qpid
operator|.
name|proton
operator|.
name|engine
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|qpid
operator|.
name|proton
operator|.
name|engine
operator|.
name|Transport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|qpid
operator|.
name|proton
operator|.
name|reactor
operator|.
name|Reactor
import|;
end_import

begin_comment
comment|/**  * Unmodifiable Connection wrapper used to prevent test code from accidentally  * modifying Connection state.  */
end_comment

begin_class
specifier|public
class|class
name|UnmodifiableConnection
implements|implements
name|Connection
block|{
specifier|private
specifier|final
name|Connection
name|connection
decl_stmt|;
specifier|public
name|UnmodifiableConnection
parameter_list|(
name|Connection
name|connection
parameter_list|)
block|{
name|this
operator|.
name|connection
operator|=
name|connection
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|EndpointState
name|getLocalState
parameter_list|()
block|{
return|return
name|connection
operator|.
name|getLocalState
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|EndpointState
name|getRemoteState
parameter_list|()
block|{
return|return
name|connection
operator|.
name|getRemoteState
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|ErrorCondition
name|getCondition
parameter_list|()
block|{
return|return
name|connection
operator|.
name|getCondition
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setCondition
parameter_list|(
name|ErrorCondition
name|condition
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Connection"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|ErrorCondition
name|getRemoteCondition
parameter_list|()
block|{
return|return
name|connection
operator|.
name|getRemoteCondition
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|free
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Connection"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|open
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Connection"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Connection"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Session
name|session
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Connection"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Session
name|sessionHead
parameter_list|(
name|EnumSet
argument_list|<
name|EndpointState
argument_list|>
name|local
parameter_list|,
name|EnumSet
argument_list|<
name|EndpointState
argument_list|>
name|remote
parameter_list|)
block|{
name|Session
name|head
init|=
name|connection
operator|.
name|sessionHead
argument_list|(
name|local
argument_list|,
name|remote
argument_list|)
decl_stmt|;
if|if
condition|(
name|head
operator|!=
literal|null
condition|)
block|{
name|head
operator|=
operator|new
name|UnmodifiableSession
argument_list|(
name|head
argument_list|)
expr_stmt|;
block|}
return|return
name|head
return|;
block|}
annotation|@
name|Override
specifier|public
name|Link
name|linkHead
parameter_list|(
name|EnumSet
argument_list|<
name|EndpointState
argument_list|>
name|local
parameter_list|,
name|EnumSet
argument_list|<
name|EndpointState
argument_list|>
name|remote
parameter_list|)
block|{
comment|// TODO - If implemented this method should return an unmodifiable link isntance.
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|Delivery
name|getWorkHead
parameter_list|()
block|{
comment|// TODO - If implemented this method should return an unmodifiable delivery isntance.
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setContainer
parameter_list|(
name|String
name|container
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Connection"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setHostname
parameter_list|(
name|String
name|hostname
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Connection"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getHostname
parameter_list|()
block|{
return|return
name|connection
operator|.
name|getHostname
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getRemoteContainer
parameter_list|()
block|{
return|return
name|connection
operator|.
name|getRemoteContainer
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getRemoteHostname
parameter_list|()
block|{
return|return
name|connection
operator|.
name|getRemoteHostname
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setOfferedCapabilities
parameter_list|(
name|Symbol
index|[]
name|capabilities
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Connection"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setDesiredCapabilities
parameter_list|(
name|Symbol
index|[]
name|capabilities
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Connection"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Symbol
index|[]
name|getRemoteOfferedCapabilities
parameter_list|()
block|{
return|return
name|connection
operator|.
name|getRemoteOfferedCapabilities
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Symbol
index|[]
name|getRemoteDesiredCapabilities
parameter_list|()
block|{
return|return
name|connection
operator|.
name|getRemoteDesiredCapabilities
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|Symbol
argument_list|,
name|Object
argument_list|>
name|getRemoteProperties
parameter_list|()
block|{
return|return
name|connection
operator|.
name|getRemoteProperties
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setProperties
parameter_list|(
name|Map
argument_list|<
name|Symbol
argument_list|,
name|Object
argument_list|>
name|properties
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Connection"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Object
name|getContext
parameter_list|()
block|{
return|return
name|connection
operator|.
name|getContext
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setContext
parameter_list|(
name|Object
name|context
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Connection"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|collect
parameter_list|(
name|Collector
name|collector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Connection"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getContainer
parameter_list|()
block|{
return|return
name|connection
operator|.
name|getContainer
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Transport
name|getTransport
parameter_list|()
block|{
return|return
operator|new
name|UnmodifiableTransport
argument_list|(
name|connection
operator|.
name|getTransport
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Record
name|attachments
parameter_list|()
block|{
return|return
name|connection
operator|.
name|attachments
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Reactor
name|getReactor
parameter_list|()
block|{
return|return
name|connection
operator|.
name|getReactor
argument_list|()
return|;
block|}
block|}
end_class

end_unit

