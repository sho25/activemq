begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|usecases
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|ConnectionFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|DeliveryMode
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageConsumer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageProducer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Queue
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|TextMessage
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerService
import|;
end_import

begin_class
specifier|public
class|class
name|TestBrokerConnectionDuplexExcludedDestinations
extends|extends
name|TestCase
block|{
specifier|public
name|void
name|testBrokerConnectionDuplexPropertiesPropagation
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Hub broker
name|String
name|configFileName
init|=
literal|"org/apache/activemq/usecases/receiver-duplex.xml"
decl_stmt|;
name|URI
name|uri
init|=
operator|new
name|URI
argument_list|(
literal|"xbean:"
operator|+
name|configFileName
argument_list|)
decl_stmt|;
name|BrokerService
name|receiverBroker
init|=
name|BrokerFactory
operator|.
name|createBroker
argument_list|(
name|uri
argument_list|)
decl_stmt|;
name|receiverBroker
operator|.
name|setPersistent
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|receiverBroker
operator|.
name|setBrokerName
argument_list|(
literal|"Hub"
argument_list|)
expr_stmt|;
comment|// Spoke broker
name|configFileName
operator|=
literal|"org/apache/activemq/usecases/sender-duplex.xml"
expr_stmt|;
name|uri
operator|=
operator|new
name|URI
argument_list|(
literal|"xbean:"
operator|+
name|configFileName
argument_list|)
expr_stmt|;
name|BrokerService
name|senderBroker
init|=
name|BrokerFactory
operator|.
name|createBroker
argument_list|(
name|uri
argument_list|)
decl_stmt|;
name|senderBroker
operator|.
name|setPersistent
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|receiverBroker
operator|.
name|setBrokerName
argument_list|(
literal|"Spoke"
argument_list|)
expr_stmt|;
comment|// Start both Hub and Spoke broker
name|receiverBroker
operator|.
name|start
argument_list|()
expr_stmt|;
name|senderBroker
operator|.
name|start
argument_list|()
expr_stmt|;
specifier|final
name|ConnectionFactory
name|cfHub
init|=
operator|new
name|ActiveMQConnectionFactory
argument_list|(
literal|"tcp://localhost:62002"
argument_list|)
decl_stmt|;
specifier|final
name|Connection
name|hubConnection
init|=
name|cfHub
operator|.
name|createConnection
argument_list|()
decl_stmt|;
name|hubConnection
operator|.
name|start
argument_list|()
expr_stmt|;
specifier|final
name|Session
name|hubSession
init|=
name|hubConnection
operator|.
name|createSession
argument_list|(
literal|false
argument_list|,
name|Session
operator|.
name|AUTO_ACKNOWLEDGE
argument_list|)
decl_stmt|;
specifier|final
name|MessageProducer
name|hubProducer
init|=
name|hubSession
operator|.
name|createProducer
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|hubProducer
operator|.
name|setDeliveryMode
argument_list|(
name|DeliveryMode
operator|.
name|NON_PERSISTENT
argument_list|)
expr_stmt|;
name|hubProducer
operator|.
name|setDisableMessageID
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|hubProducer
operator|.
name|setDisableMessageTimestamp
argument_list|(
literal|true
argument_list|)
expr_stmt|;
specifier|final
name|Queue
name|excludedQueueHub
init|=
name|hubSession
operator|.
name|createQueue
argument_list|(
literal|"exclude.test.foo"
argument_list|)
decl_stmt|;
specifier|final
name|TextMessage
name|excludedMsgHub
init|=
name|hubSession
operator|.
name|createTextMessage
argument_list|()
decl_stmt|;
name|excludedMsgHub
operator|.
name|setText
argument_list|(
name|excludedQueueHub
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|Queue
name|includedQueueHub
init|=
name|hubSession
operator|.
name|createQueue
argument_list|(
literal|"include.test.foo"
argument_list|)
decl_stmt|;
specifier|final
name|TextMessage
name|includedMsgHub
init|=
name|hubSession
operator|.
name|createTextMessage
argument_list|()
decl_stmt|;
name|excludedMsgHub
operator|.
name|setText
argument_list|(
name|includedQueueHub
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
comment|// Sending from Hub queue
name|hubProducer
operator|.
name|send
argument_list|(
name|excludedQueueHub
argument_list|,
name|excludedMsgHub
argument_list|)
expr_stmt|;
name|hubProducer
operator|.
name|send
argument_list|(
name|includedQueueHub
argument_list|,
name|includedMsgHub
argument_list|)
expr_stmt|;
specifier|final
name|ConnectionFactory
name|cfSpoke
init|=
operator|new
name|ActiveMQConnectionFactory
argument_list|(
literal|"tcp://localhost:62001"
argument_list|)
decl_stmt|;
specifier|final
name|Connection
name|spokeConnection
init|=
name|cfSpoke
operator|.
name|createConnection
argument_list|()
decl_stmt|;
name|spokeConnection
operator|.
name|start
argument_list|()
expr_stmt|;
specifier|final
name|Session
name|spokeSession
init|=
name|spokeConnection
operator|.
name|createSession
argument_list|(
literal|false
argument_list|,
name|Session
operator|.
name|AUTO_ACKNOWLEDGE
argument_list|)
decl_stmt|;
specifier|final
name|Queue
name|excludedQueueSpoke
init|=
name|spokeSession
operator|.
name|createQueue
argument_list|(
literal|"exclude.test.foo"
argument_list|)
decl_stmt|;
specifier|final
name|MessageConsumer
name|excludedConsumerSpoke
init|=
name|spokeSession
operator|.
name|createConsumer
argument_list|(
name|excludedQueueSpoke
argument_list|)
decl_stmt|;
specifier|final
name|Queue
name|includedQueueSpoke
init|=
name|spokeSession
operator|.
name|createQueue
argument_list|(
literal|"include.test.foo"
argument_list|)
decl_stmt|;
specifier|final
name|MessageConsumer
name|includedConsumerSpoke
init|=
name|spokeSession
operator|.
name|createConsumer
argument_list|(
name|includedQueueSpoke
argument_list|)
decl_stmt|;
comment|// Receiving from excluded Spoke queue
name|Message
name|msg
init|=
name|excludedConsumerSpoke
operator|.
name|receive
argument_list|(
literal|200
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|msg
argument_list|)
expr_stmt|;
comment|// Receiving from included Spoke queue
name|msg
operator|=
name|includedConsumerSpoke
operator|.
name|receive
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
argument_list|,
name|includedMsgHub
argument_list|)
expr_stmt|;
name|excludedConsumerSpoke
operator|.
name|close
argument_list|()
expr_stmt|;
name|hubSession
operator|.
name|close
argument_list|()
expr_stmt|;
name|hubConnection
operator|.
name|stop
argument_list|()
expr_stmt|;
name|hubConnection
operator|.
name|close
argument_list|()
expr_stmt|;
name|hubProducer
operator|.
name|close
argument_list|()
expr_stmt|;
name|spokeSession
operator|.
name|close
argument_list|()
expr_stmt|;
name|spokeConnection
operator|.
name|stop
argument_list|()
expr_stmt|;
name|spokeConnection
operator|.
name|close
argument_list|()
expr_stmt|;
name|senderBroker
operator|.
name|stop
argument_list|()
expr_stmt|;
name|receiverBroker
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

