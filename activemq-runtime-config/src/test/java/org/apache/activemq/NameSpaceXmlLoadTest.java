begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|ObjectName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|plugin
operator|.
name|RuntimeConfigurationBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|plugin
operator|.
name|jmx
operator|.
name|RuntimeConfigurationViewMBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|util
operator|.
name|IOHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|util
operator|.
name|IntrospectionSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|NameSpaceXmlLoadTest
extends|extends
name|RuntimeConfigTestSupport
block|{
annotation|@
name|Test
specifier|public
name|void
name|testCanLoad
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|brokerConfig
init|=
literal|"namespace-prefix"
decl_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"data"
argument_list|,
name|IOHelper
operator|.
name|getDefaultDataDirectory
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"broker-name"
argument_list|,
name|brokerConfig
argument_list|)
expr_stmt|;
name|startBroker
argument_list|(
name|brokerConfig
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"broker alive"
argument_list|,
name|brokerService
operator|.
name|isStarted
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"nameMatch"
argument_list|,
name|brokerConfig
argument_list|,
name|brokerService
operator|.
name|getBrokerName
argument_list|()
argument_list|)
expr_stmt|;
comment|// verify runtimeConfig active
name|ObjectName
name|objectName
init|=
operator|new
name|ObjectName
argument_list|(
name|brokerService
operator|.
name|getBrokerObjectName
argument_list|()
operator|.
name|toString
argument_list|()
operator|+
name|RuntimeConfigurationBroker
operator|.
name|objectNamePropsAppendage
argument_list|)
decl_stmt|;
name|RuntimeConfigurationViewMBean
name|runtimeConfigurationView
init|=
operator|(
name|RuntimeConfigurationViewMBean
operator|)
name|brokerService
operator|.
name|getManagementContext
argument_list|()
operator|.
name|newProxyInstance
argument_list|(
name|objectName
argument_list|,
name|RuntimeConfigurationViewMBean
operator|.
name|class
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|props
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|IntrospectionSupport
operator|.
name|getProperties
argument_list|(
name|runtimeConfigurationView
argument_list|,
name|props
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"mbean attributes before: "
operator|+
name|props
argument_list|)
expr_stmt|;
name|String
name|propOfInterest
init|=
literal|"modified"
decl_stmt|;
name|assertNotEquals
argument_list|(
literal|"modified is valid"
argument_list|,
literal|"unknown"
argument_list|,
name|props
operator|.
name|get
argument_list|(
name|propOfInterest
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

