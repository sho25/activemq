begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|bugs
operator|.
name|amq1974
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Destination
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|JMSException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageConsumer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageListener
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQConnection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|network
operator|.
name|DiscoveryNetworkConnector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadaptor
operator|.
name|KahaPersistenceAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|discovery
operator|.
name|simple
operator|.
name|SimpleDiscoveryAgent
import|;
end_import

begin_class
specifier|public
class|class
name|TryJmsManager
block|{
specifier|private
specifier|final
name|BrokerService
name|broker
init|=
operator|new
name|BrokerService
argument_list|()
decl_stmt|;
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|Exception
block|{
operator|new
name|TryJmsManager
argument_list|()
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|start
parameter_list|()
throws|throws
name|Exception
block|{
name|broker
operator|.
name|setUseJmx
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|broker
operator|.
name|setPersistent
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|broker
operator|.
name|setBrokerName
argument_list|(
literal|"TestBroker"
argument_list|)
expr_stmt|;
name|broker
operator|.
name|getSystemUsage
argument_list|()
operator|.
name|setSendFailIfNoSpace
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|broker
operator|.
name|getSystemUsage
argument_list|()
operator|.
name|getMemoryUsage
argument_list|()
operator|.
name|setLimit
argument_list|(
literal|10
operator|*
literal|1024
operator|*
literal|1024
argument_list|)
expr_stmt|;
name|KahaPersistenceAdapter
name|persist
init|=
operator|new
name|KahaPersistenceAdapter
argument_list|()
decl_stmt|;
name|persist
operator|.
name|setDirectory
argument_list|(
operator|new
name|File
argument_list|(
literal|"/tmp/broker1"
argument_list|)
argument_list|)
expr_stmt|;
name|persist
operator|.
name|setMaxDataFileLength
argument_list|(
literal|20
operator|*
literal|1024
operator|*
literal|1024
argument_list|)
expr_stmt|;
name|broker
operator|.
name|setPersistenceAdapter
argument_list|(
name|persist
argument_list|)
expr_stmt|;
name|String
name|brokerUrl
init|=
literal|"tcp://localhost:4500"
decl_stmt|;
name|broker
operator|.
name|addConnector
argument_list|(
name|brokerUrl
argument_list|)
expr_stmt|;
name|broker
operator|.
name|start
argument_list|()
expr_stmt|;
name|addNetworkBroker
argument_list|()
expr_stmt|;
name|startUsageMonitor
argument_list|(
name|broker
argument_list|)
expr_stmt|;
name|startMessageConsumer
argument_list|()
expr_stmt|;
synchronized|synchronized
init|(
name|this
init|)
block|{
name|this
operator|.
name|wait
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|startUsageMonitor
parameter_list|(
specifier|final
name|BrokerService
name|brokerService
parameter_list|)
block|{
operator|new
name|Thread
argument_list|(
operator|new
name|Runnable
argument_list|()
block|{
specifier|public
name|void
name|run
parameter_list|()
block|{
while|while
condition|(
literal|true
condition|)
block|{
try|try
block|{
name|Thread
operator|.
name|sleep
argument_list|(
literal|10000
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"ActiveMQ memeory "
operator|+
name|brokerService
operator|.
name|getSystemUsage
argument_list|()
operator|.
name|getMemoryUsage
argument_list|()
operator|.
name|getPercentUsage
argument_list|()
operator|+
literal|" "
operator|+
name|brokerService
operator|.
name|getSystemUsage
argument_list|()
operator|.
name|getMemoryUsage
argument_list|()
operator|.
name|getUsage
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"ActiveMQ message store "
operator|+
name|brokerService
operator|.
name|getSystemUsage
argument_list|()
operator|.
name|getStoreUsage
argument_list|()
operator|.
name|getPercentUsage
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"ActiveMQ temp space "
operator|+
name|brokerService
operator|.
name|getSystemUsage
argument_list|()
operator|.
name|getTempUsage
argument_list|()
operator|.
name|getPercentUsage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|addNetworkBroker
parameter_list|()
throws|throws
name|Exception
block|{
name|DiscoveryNetworkConnector
name|dnc
init|=
operator|new
name|DiscoveryNetworkConnector
argument_list|()
decl_stmt|;
name|dnc
operator|.
name|setNetworkTTL
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|dnc
operator|.
name|setBrokerName
argument_list|(
literal|"TestBroker"
argument_list|)
expr_stmt|;
name|dnc
operator|.
name|setName
argument_list|(
literal|"Broker1Connector"
argument_list|)
expr_stmt|;
name|dnc
operator|.
name|setDynamicOnly
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|SimpleDiscoveryAgent
name|discoveryAgent
init|=
operator|new
name|SimpleDiscoveryAgent
argument_list|()
decl_stmt|;
name|String
name|remoteUrl
init|=
literal|"tcp://localhost:4501"
decl_stmt|;
name|discoveryAgent
operator|.
name|setServices
argument_list|(
name|remoteUrl
argument_list|)
expr_stmt|;
name|dnc
operator|.
name|setDiscoveryAgent
argument_list|(
name|discoveryAgent
argument_list|)
expr_stmt|;
name|broker
operator|.
name|addNetworkConnector
argument_list|(
name|dnc
argument_list|)
expr_stmt|;
name|dnc
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|startMessageConsumer
parameter_list|()
throws|throws
name|JMSException
throws|,
name|URISyntaxException
block|{
name|String
name|url
init|=
literal|"vm://TestBroker"
decl_stmt|;
name|ActiveMQConnection
name|connection
init|=
name|ActiveMQConnection
operator|.
name|makeConnection
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|Session
name|session
init|=
name|connection
operator|.
name|createSession
argument_list|(
literal|false
argument_list|,
name|Session
operator|.
name|AUTO_ACKNOWLEDGE
argument_list|)
decl_stmt|;
name|Destination
name|dest
init|=
name|session
operator|.
name|createTopic
argument_list|(
literal|"TestDestination"
argument_list|)
decl_stmt|;
name|MessageConsumer
name|consumer
init|=
name|session
operator|.
name|createConsumer
argument_list|(
name|dest
argument_list|)
decl_stmt|;
name|consumer
operator|.
name|setMessageListener
argument_list|(
operator|new
name|MessageListener
argument_list|()
block|{
specifier|public
name|void
name|onMessage
parameter_list|(
name|Message
name|message
parameter_list|)
block|{
try|try
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"got message "
operator|+
name|message
operator|.
name|getJMSMessageID
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JMSException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|connection
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

