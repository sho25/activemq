begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|amq
operator|.
name|reader
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|core
operator|.
name|io
operator|.
name|ClassPathResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|core
operator|.
name|io
operator|.
name|Resource
import|;
end_import

begin_class
specifier|public
class|class
name|AMQReaderTest
extends|extends
name|TestCase
block|{
specifier|public
name|void
name|testIterateArchive
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|resourceName
init|=
name|getClass
argument_list|()
operator|.
name|getPackage
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
name|File
operator|.
name|separator
operator|+
literal|"data"
decl_stmt|;
name|resourceName
operator|=
name|resourceName
operator|.
name|replace
argument_list|(
literal|'.'
argument_list|,
name|File
operator|.
name|separatorChar
argument_list|)
expr_stmt|;
name|Resource
name|resource
init|=
operator|new
name|ClassPathResource
argument_list|(
name|resourceName
argument_list|)
decl_stmt|;
name|AMQReader
name|reader
init|=
operator|new
name|AMQReader
argument_list|(
name|resource
operator|.
name|getFile
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|Message
name|m
range|:
name|reader
control|)
block|{
name|assertNotNull
argument_list|(
name|m
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|xtestIterateFile
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|resourceName
init|=
name|getClass
argument_list|()
operator|.
name|getPackage
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
name|File
operator|.
name|separator
operator|+
literal|"data"
decl_stmt|;
name|resourceName
operator|=
name|resourceName
operator|.
name|replace
argument_list|(
literal|'.'
argument_list|,
name|File
operator|.
name|separatorChar
argument_list|)
expr_stmt|;
name|Resource
name|resource
init|=
operator|new
name|ClassPathResource
argument_list|(
name|resourceName
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|File
argument_list|>
name|files
init|=
name|AMQReader
operator|.
name|listDataFiles
argument_list|(
name|resource
operator|.
name|getFile
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|files
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|files
operator|.
name|size
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
for|for
control|(
name|File
name|file
range|:
name|files
control|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"READING "
operator|+
name|file
argument_list|)
expr_stmt|;
name|AMQReader
name|reader
init|=
operator|new
name|AMQReader
argument_list|(
name|file
argument_list|)
decl_stmt|;
for|for
control|(
name|Message
name|m
range|:
name|reader
control|)
block|{
name|assertNotNull
argument_list|(
name|m
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

