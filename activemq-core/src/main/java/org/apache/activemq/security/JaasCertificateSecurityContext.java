begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|security
package|;
end_package

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|cert
operator|.
name|X509Certificate
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|Subject
import|;
end_import

begin_comment
comment|/**  * Extends the SecurityContext to provide a username which is the  * Distinguished Name from the certificate.  *  */
end_comment

begin_class
specifier|public
class|class
name|JaasCertificateSecurityContext
extends|extends
name|SecurityContext
block|{
specifier|private
name|Subject
name|subject
decl_stmt|;
specifier|private
name|X509Certificate
index|[]
name|certs
decl_stmt|;
specifier|public
name|JaasCertificateSecurityContext
parameter_list|(
name|String
name|userName
parameter_list|,
name|Subject
name|subject
parameter_list|,
name|X509Certificate
index|[]
name|certs
parameter_list|)
block|{
name|super
argument_list|(
name|userName
argument_list|)
expr_stmt|;
name|this
operator|.
name|subject
operator|=
name|subject
expr_stmt|;
name|this
operator|.
name|certs
operator|=
name|certs
expr_stmt|;
block|}
specifier|public
name|Set
name|getPrincipals
parameter_list|()
block|{
return|return
name|subject
operator|.
name|getPrincipals
argument_list|()
return|;
block|}
specifier|public
name|String
name|getUserName
parameter_list|()
block|{
if|if
condition|(
name|certs
operator|!=
literal|null
operator|&&
name|certs
operator|.
name|length
operator|>
literal|0
condition|)
block|{
return|return
name|certs
index|[
literal|0
index|]
operator|.
name|getSubjectDN
argument_list|()
operator|.
name|getName
argument_list|()
return|;
block|}
return|return
name|super
operator|.
name|getUserName
argument_list|()
return|;
block|}
block|}
end_class

end_unit

