begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|web
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|util
operator|.
name|AuditLogEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|util
operator|.
name|AuditLogService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|*
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_class
specifier|public
class|class
name|AuditFilter
implements|implements
name|Filter
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
literal|"org.apache.activemq.audit"
argument_list|)
decl_stmt|;
specifier|private
name|boolean
name|audit
decl_stmt|;
specifier|private
name|AuditLogService
name|auditLog
decl_stmt|;
specifier|public
name|void
name|init
parameter_list|(
name|FilterConfig
name|filterConfig
parameter_list|)
throws|throws
name|ServletException
block|{
name|audit
operator|=
literal|"true"
operator|.
name|equalsIgnoreCase
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"org.apache.activemq.audit"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|audit
condition|)
block|{
name|auditLog
operator|=
name|AuditLogService
operator|.
name|getAuditLog
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|destroy
parameter_list|()
block|{     }
specifier|public
name|void
name|doFilter
parameter_list|(
name|ServletRequest
name|request
parameter_list|,
name|ServletResponse
name|response
parameter_list|,
name|FilterChain
name|chain
parameter_list|)
throws|throws
name|IOException
throws|,
name|ServletException
block|{
if|if
condition|(
name|audit
operator|&&
name|request
operator|instanceof
name|HttpServletRequest
condition|)
block|{
name|HttpServletRequest
name|http
init|=
operator|(
name|HttpServletRequest
operator|)
name|request
decl_stmt|;
name|AuditLogEntry
name|entry
init|=
operator|new
name|HttpAuditLogEntry
argument_list|()
decl_stmt|;
if|if
condition|(
name|http
operator|.
name|getRemoteUser
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|entry
operator|.
name|setUser
argument_list|(
name|http
operator|.
name|getRemoteUser
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|entry
operator|.
name|setTimestamp
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setOperation
argument_list|(
name|http
operator|.
name|getRequestURI
argument_list|()
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setRemoteAddr
argument_list|(
name|http
operator|.
name|getRemoteAddr
argument_list|()
argument_list|)
expr_stmt|;
name|entry
operator|.
name|getParameters
argument_list|()
operator|.
name|put
argument_list|(
literal|"params"
argument_list|,
name|http
operator|.
name|getParameterMap
argument_list|()
argument_list|)
expr_stmt|;
name|auditLog
operator|.
name|log
argument_list|(
name|entry
argument_list|)
expr_stmt|;
block|}
name|chain
operator|.
name|doFilter
argument_list|(
name|request
argument_list|,
name|response
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

