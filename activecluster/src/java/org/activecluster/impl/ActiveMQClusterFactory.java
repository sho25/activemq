begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**   *   * Copyright 2005 LogicBlaze, Inc. (http://www.logicblaze.com)  *   * Licensed under the Apache License, Version 2.0 (the "License");   * you may not use this file except in compliance with the License.   * You may obtain a copy of the License at   *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   * See the License for the specific language governing permissions and   * limitations under the License.   *   **/
end_comment

begin_package
package|package
name|org
operator|.
name|activecluster
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|org
operator|.
name|activecluster
operator|.
name|impl
operator|.
name|DefaultClusterFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activemq
operator|.
name|ActiveMQConnectionFactory
import|;
end_import

begin_comment
comment|/**  * An implementation of {@link org.activecluster.ClusterFactory} using  *<a href="http://activemq.codehaus.org/">ActiveMQ</a>  *  * @version $Revision: 1.4 $  */
end_comment

begin_class
specifier|public
class|class
name|ActiveMQClusterFactory
extends|extends
name|DefaultClusterFactory
block|{
specifier|public
specifier|static
name|String
name|DEFAULT_CLUSTER_URL
init|=
literal|"peer://org.activecluster?persistent=false"
decl_stmt|;
specifier|public
name|ActiveMQClusterFactory
parameter_list|()
block|{
name|super
argument_list|(
operator|new
name|ActiveMQConnectionFactory
argument_list|(
name|DEFAULT_CLUSTER_URL
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ActiveMQClusterFactory
parameter_list|(
name|String
name|brokerURL
parameter_list|)
block|{
name|super
argument_list|(
operator|new
name|ActiveMQConnectionFactory
argument_list|(
name|brokerURL
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ActiveMQClusterFactory
parameter_list|(
name|ActiveMQConnectionFactory
name|connectionFactory
parameter_list|)
block|{
name|super
argument_list|(
name|connectionFactory
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ActiveMQClusterFactory
parameter_list|(
name|boolean
name|transacted
parameter_list|,
name|int
name|acknowledgeMode
parameter_list|,
name|String
name|dataTopicPrefix
parameter_list|,
name|long
name|inactiveTime
parameter_list|)
block|{
name|super
argument_list|(
operator|new
name|ActiveMQConnectionFactory
argument_list|(
name|DEFAULT_CLUSTER_URL
argument_list|)
argument_list|,
name|transacted
argument_list|,
name|acknowledgeMode
argument_list|,
name|dataTopicPrefix
argument_list|,
name|inactiveTime
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ActiveMQClusterFactory
parameter_list|(
name|ActiveMQConnectionFactory
name|connectionFactory
parameter_list|,
name|boolean
name|transacted
parameter_list|,
name|int
name|acknowledgeMode
parameter_list|,
name|String
name|dataTopicPrefix
parameter_list|,
name|long
name|inactiveTime
parameter_list|)
block|{
name|super
argument_list|(
name|connectionFactory
argument_list|,
name|transacted
argument_list|,
name|acknowledgeMode
argument_list|,
name|dataTopicPrefix
argument_list|,
name|inactiveTime
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ActiveMQConnectionFactory
name|getActiveMQConnectionFactory
parameter_list|()
block|{
return|return
operator|(
name|ActiveMQConnectionFactory
operator|)
name|getConnectionFactory
argument_list|()
return|;
block|}
specifier|public
name|void
name|setActiveMQConnectionFactory
parameter_list|(
name|ActiveMQConnectionFactory
name|connectionFactory
parameter_list|)
block|{
name|setConnectionFactory
argument_list|(
name|connectionFactory
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

