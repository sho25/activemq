begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|config
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|InvalidSelectorException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|JMSException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQMessageConsumer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ActiveMQQueue
import|;
end_import

begin_class
specifier|public
class|class
name|ConfigUsingDestinationOptions
extends|extends
name|TestCase
block|{
specifier|public
name|void
name|testValidSelectorConfig
parameter_list|()
throws|throws
name|JMSException
block|{
name|ActiveMQQueue
name|queue
init|=
operator|new
name|ActiveMQQueue
argument_list|(
literal|"TEST.FOO?consumer.selector=test=1"
argument_list|)
decl_stmt|;
name|ActiveMQConnectionFactory
name|factory
init|=
operator|new
name|ActiveMQConnectionFactory
argument_list|(
literal|"vm://localhost"
argument_list|)
decl_stmt|;
name|Connection
name|conn
init|=
name|factory
operator|.
name|createConnection
argument_list|()
decl_stmt|;
name|Session
name|sess
init|=
name|conn
operator|.
name|createSession
argument_list|(
literal|false
argument_list|,
name|Session
operator|.
name|AUTO_ACKNOWLEDGE
argument_list|)
decl_stmt|;
name|ActiveMQMessageConsumer
name|cons
decl_stmt|;
comment|// JMS selector should be priority
name|cons
operator|=
operator|(
name|ActiveMQMessageConsumer
operator|)
name|sess
operator|.
name|createConsumer
argument_list|(
name|queue
argument_list|,
literal|"test=2"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test=2"
argument_list|,
name|cons
operator|.
name|getMessageSelector
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test setting using JMS destinations
name|cons
operator|=
operator|(
name|ActiveMQMessageConsumer
operator|)
name|sess
operator|.
name|createConsumer
argument_list|(
name|queue
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test=1"
argument_list|,
name|cons
operator|.
name|getMessageSelector
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testInvalidSelectorConfig
parameter_list|()
throws|throws
name|JMSException
block|{
name|ActiveMQQueue
name|queue
init|=
operator|new
name|ActiveMQQueue
argument_list|(
literal|"TEST.FOO?consumer.selector=test||1"
argument_list|)
decl_stmt|;
name|ActiveMQConnectionFactory
name|factory
init|=
operator|new
name|ActiveMQConnectionFactory
argument_list|(
literal|"vm://localhost"
argument_list|)
decl_stmt|;
name|Connection
name|conn
init|=
name|factory
operator|.
name|createConnection
argument_list|()
decl_stmt|;
name|Session
name|sess
init|=
name|conn
operator|.
name|createSession
argument_list|(
literal|false
argument_list|,
name|Session
operator|.
name|AUTO_ACKNOWLEDGE
argument_list|)
decl_stmt|;
name|ActiveMQMessageConsumer
name|cons
decl_stmt|;
comment|// JMS selector should be priority
try|try
block|{
name|cons
operator|=
operator|(
name|ActiveMQMessageConsumer
operator|)
name|sess
operator|.
name|createConsumer
argument_list|(
name|queue
argument_list|,
literal|"test||1"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Selector should be invalid"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InvalidSelectorException
name|e
parameter_list|)
block|{          }
comment|// Test setting using JMS destinations
try|try
block|{
name|cons
operator|=
operator|(
name|ActiveMQMessageConsumer
operator|)
name|sess
operator|.
name|createConsumer
argument_list|(
name|queue
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Selector should be invalid"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InvalidSelectorException
name|e
parameter_list|)
block|{          }
block|}
block|}
end_class

end_unit

