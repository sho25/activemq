begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|usecases
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Enumeration
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Destination
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageConsumer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|QueueBrowser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|JmsMultipleBrokersTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|QueueSubscription
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ActiveMQDestination
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ActiveMQTextMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|network
operator|.
name|NetworkConnector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|util
operator|.
name|MessageIdList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|core
operator|.
name|io
operator|.
name|ClassPathResource
import|;
end_import

begin_class
specifier|public
class|class
name|BrowseOverNetworkTest
extends|extends
name|JmsMultipleBrokersTestSupport
block|{
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|QueueSubscription
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|int
name|MESSAGE_COUNT
init|=
literal|10
decl_stmt|;
specifier|public
name|void
name|testBrowse
parameter_list|()
throws|throws
name|Exception
block|{
name|createBroker
argument_list|(
operator|new
name|URI
argument_list|(
literal|"broker:(tcp://localhost:61617)/BrokerB?persistent=false&useJmx=false"
argument_list|)
argument_list|)
expr_stmt|;
name|createBroker
argument_list|(
operator|new
name|URI
argument_list|(
literal|"broker:(tcp://localhost:61616)/BrokerA?persistent=false&useJmx=false"
argument_list|)
argument_list|)
expr_stmt|;
name|bridgeBrokers
argument_list|(
literal|"BrokerA"
argument_list|,
literal|"BrokerB"
argument_list|)
expr_stmt|;
name|startAllBrokers
argument_list|()
expr_stmt|;
name|Destination
name|dest
init|=
name|createDestination
argument_list|(
literal|"TEST.FOO"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|sendMessages
argument_list|(
literal|"BrokerA"
argument_list|,
name|dest
argument_list|,
name|MESSAGE_COUNT
argument_list|)
expr_stmt|;
name|browseMessages
argument_list|(
literal|"BrokerB"
argument_list|,
name|dest
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|2000
argument_list|)
expr_stmt|;
name|MessageConsumer
name|clientA
init|=
name|createConsumer
argument_list|(
literal|"BrokerA"
argument_list|,
name|dest
argument_list|)
decl_stmt|;
name|MessageIdList
name|msgsA
init|=
name|getConsumerMessages
argument_list|(
literal|"BrokerA"
argument_list|,
name|clientA
argument_list|)
decl_stmt|;
name|msgsA
operator|.
name|waitForMessagesToArrive
argument_list|(
name|MESSAGE_COUNT
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|2000
argument_list|)
expr_stmt|;
name|MessageConsumer
name|clientB
init|=
name|createConsumer
argument_list|(
literal|"BrokerB"
argument_list|,
name|dest
argument_list|)
decl_stmt|;
name|MessageIdList
name|msgsB
init|=
name|getConsumerMessages
argument_list|(
literal|"BrokerB"
argument_list|,
name|clientB
argument_list|)
decl_stmt|;
name|msgsB
operator|.
name|waitForMessagesToArrive
argument_list|(
name|MESSAGE_COUNT
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"A+B: "
operator|+
name|msgsA
operator|.
name|getMessageCount
argument_list|()
operator|+
literal|"+"
operator|+
name|msgsB
operator|.
name|getMessageCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MESSAGE_COUNT
argument_list|,
name|msgsA
operator|.
name|getMessageCount
argument_list|()
operator|+
name|msgsB
operator|.
name|getMessageCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testConsumerInfo
parameter_list|()
throws|throws
name|Exception
block|{
name|createBroker
argument_list|(
operator|new
name|ClassPathResource
argument_list|(
literal|"org/apache/activemq/usecases/browse-broker1.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|createBroker
argument_list|(
operator|new
name|ClassPathResource
argument_list|(
literal|"org/apache/activemq/usecases/browse-broker2.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|startAllBrokers
argument_list|()
expr_stmt|;
name|brokers
operator|.
name|get
argument_list|(
literal|"broker1"
argument_list|)
operator|.
name|broker
operator|.
name|waitUntilStarted
argument_list|()
expr_stmt|;
name|Destination
name|dest
init|=
name|createDestination
argument_list|(
literal|"QUEUE.A,QUEUE.B"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|int
name|broker1
init|=
name|browseMessages
argument_list|(
literal|"broker1"
argument_list|,
name|dest
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Browsed a message on an empty queue"
argument_list|,
literal|0
argument_list|,
name|broker1
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|int
name|broker2
init|=
name|browseMessages
argument_list|(
literal|"broker2"
argument_list|,
name|dest
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Browsed a message on an empty queue"
argument_list|,
literal|0
argument_list|,
name|broker2
argument_list|)
expr_stmt|;
block|}
specifier|public
class|class
name|Browser
extends|extends
name|Thread
block|{
name|String
name|broker
decl_stmt|;
name|Destination
name|dest
decl_stmt|;
name|int
name|totalCount
decl_stmt|;
name|QueueBrowser
name|browser
init|=
literal|null
decl_stmt|;
name|MessageConsumer
name|consumer
init|=
literal|null
decl_stmt|;
name|boolean
name|consume
init|=
literal|false
decl_stmt|;
specifier|public
name|Browser
parameter_list|(
name|String
name|broker
parameter_list|,
name|Destination
name|dest
parameter_list|)
block|{
name|this
operator|.
name|broker
operator|=
name|broker
expr_stmt|;
name|this
operator|.
name|dest
operator|=
name|dest
expr_stmt|;
block|}
specifier|public
name|void
name|run
parameter_list|()
block|{
name|int
name|retries
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|retries
operator|++
operator|<
literal|5
condition|)
block|{
try|try
block|{
name|QueueBrowser
name|browser
init|=
name|createBrowser
argument_list|(
name|broker
argument_list|,
name|dest
argument_list|)
decl_stmt|;
name|int
name|count
init|=
name|browseMessages
argument_list|(
name|browser
argument_list|,
name|broker
argument_list|)
decl_stmt|;
if|if
condition|(
name|consume
condition|)
block|{
if|if
condition|(
name|count
operator|!=
literal|0
condition|)
block|{
name|MessageConsumer
name|consumer
init|=
name|createSyncConsumer
argument_list|(
name|broker
argument_list|,
name|dest
argument_list|)
decl_stmt|;
name|totalCount
operator|+=
name|count
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|count
condition|;
name|i
operator|++
control|)
block|{
name|ActiveMQTextMessage
name|message
init|=
operator|(
name|ActiveMQTextMessage
operator|)
name|consumer
operator|.
name|receive
argument_list|(
literal|1000
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
name|broker
operator|+
literal|" consumer: "
operator|+
name|message
operator|.
name|getText
argument_list|()
operator|+
literal|" "
operator|+
name|message
operator|.
name|getDestination
argument_list|()
operator|+
literal|" "
operator|+
name|message
operator|.
name|getMessageId
argument_list|()
operator|+
literal|" "
operator|+
name|Arrays
operator|.
name|toString
argument_list|(
name|message
operator|.
name|getBrokerPath
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|message
operator|==
literal|null
condition|)
break|break;
block|}
block|}
block|}
else|else
block|{
name|totalCount
operator|=
name|count
expr_stmt|;
block|}
name|LOG
operator|.
name|info
argument_list|(
literal|"browser '"
operator|+
name|broker
operator|+
literal|"' browsed "
operator|+
name|totalCount
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Exception browsing "
operator|+
name|e
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
try|try
block|{
if|if
condition|(
name|browser
operator|!=
literal|null
condition|)
block|{
name|browser
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|consumer
operator|!=
literal|null
condition|)
block|{
name|consumer
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Exception closing browser "
operator|+
name|e
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
specifier|public
name|int
name|getTotalCount
parameter_list|()
block|{
return|return
name|totalCount
return|;
block|}
block|}
specifier|protected
name|NetworkConnector
name|bridgeBrokersWithIncludedDestination
parameter_list|(
name|String
name|localBrokerName
parameter_list|,
name|String
name|remoteBrokerName
parameter_list|,
name|ActiveMQDestination
name|included
parameter_list|,
name|ActiveMQDestination
name|excluded
parameter_list|)
throws|throws
name|Exception
block|{
name|NetworkConnector
name|nc
init|=
name|bridgeBrokers
argument_list|(
name|localBrokerName
argument_list|,
name|remoteBrokerName
argument_list|,
literal|false
argument_list|,
literal|4
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|nc
operator|.
name|addStaticallyIncludedDestination
argument_list|(
name|included
argument_list|)
expr_stmt|;
if|if
condition|(
name|excluded
operator|!=
literal|null
condition|)
block|{
name|nc
operator|.
name|addExcludedDestination
argument_list|(
name|excluded
argument_list|)
expr_stmt|;
block|}
name|nc
operator|.
name|setPrefetchSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
return|return
name|nc
return|;
block|}
specifier|public
name|void
name|testMultipleBrowsers
parameter_list|()
throws|throws
name|Exception
block|{
name|createBroker
argument_list|(
operator|new
name|URI
argument_list|(
literal|"broker:(tcp://localhost:61616)/BrokerA?persistent=false&useJmx=false&brokerId=BrokerA"
argument_list|)
argument_list|)
expr_stmt|;
name|createBroker
argument_list|(
operator|new
name|URI
argument_list|(
literal|"broker:(tcp://localhost:61617)/BrokerB?persistent=false&useJmx=false&brokerId=BrokerB"
argument_list|)
argument_list|)
expr_stmt|;
name|createBroker
argument_list|(
operator|new
name|URI
argument_list|(
literal|"broker:(tcp://localhost:61618)/BrokerC?persistent=false&useJmx=false&brokerId=BrokerC"
argument_list|)
argument_list|)
expr_stmt|;
name|createBroker
argument_list|(
operator|new
name|URI
argument_list|(
literal|"broker:(tcp://localhost:61619)/BrokerD?persistent=false&useJmx=false&brokerId=BrokerD"
argument_list|)
argument_list|)
expr_stmt|;
name|Destination
name|composite
init|=
name|createDestination
argument_list|(
literal|"TEST.FOO,TEST.BAR"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|Destination
name|dest1
init|=
name|createDestination
argument_list|(
literal|"TEST.FOO"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|Destination
name|dest2
init|=
name|createDestination
argument_list|(
literal|"TEST.BAR"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|bridgeBrokersWithIncludedDestination
argument_list|(
literal|"BrokerA"
argument_list|,
literal|"BrokerC"
argument_list|,
operator|(
name|ActiveMQDestination
operator|)
name|composite
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|bridgeBrokersWithIncludedDestination
argument_list|(
literal|"BrokerA"
argument_list|,
literal|"BrokerB"
argument_list|,
operator|(
name|ActiveMQDestination
operator|)
name|composite
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|bridgeBrokersWithIncludedDestination
argument_list|(
literal|"BrokerA"
argument_list|,
literal|"BrokerD"
argument_list|,
operator|(
name|ActiveMQDestination
operator|)
name|composite
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|bridgeBrokersWithIncludedDestination
argument_list|(
literal|"BrokerB"
argument_list|,
literal|"BrokerA"
argument_list|,
operator|(
name|ActiveMQDestination
operator|)
name|composite
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|bridgeBrokersWithIncludedDestination
argument_list|(
literal|"BrokerB"
argument_list|,
literal|"BrokerC"
argument_list|,
operator|(
name|ActiveMQDestination
operator|)
name|composite
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|bridgeBrokersWithIncludedDestination
argument_list|(
literal|"BrokerB"
argument_list|,
literal|"BrokerD"
argument_list|,
operator|(
name|ActiveMQDestination
operator|)
name|composite
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|bridgeBrokersWithIncludedDestination
argument_list|(
literal|"BrokerC"
argument_list|,
literal|"BrokerA"
argument_list|,
operator|(
name|ActiveMQDestination
operator|)
name|dest2
argument_list|,
operator|(
name|ActiveMQDestination
operator|)
name|dest1
argument_list|)
expr_stmt|;
name|bridgeBrokersWithIncludedDestination
argument_list|(
literal|"BrokerC"
argument_list|,
literal|"BrokerB"
argument_list|,
operator|(
name|ActiveMQDestination
operator|)
name|dest2
argument_list|,
operator|(
name|ActiveMQDestination
operator|)
name|dest1
argument_list|)
expr_stmt|;
name|bridgeBrokersWithIncludedDestination
argument_list|(
literal|"BrokerC"
argument_list|,
literal|"BrokerD"
argument_list|,
operator|(
name|ActiveMQDestination
operator|)
name|dest2
argument_list|,
operator|(
name|ActiveMQDestination
operator|)
name|dest1
argument_list|)
expr_stmt|;
name|bridgeBrokersWithIncludedDestination
argument_list|(
literal|"BrokerD"
argument_list|,
literal|"BrokerA"
argument_list|,
operator|(
name|ActiveMQDestination
operator|)
name|dest1
argument_list|,
operator|(
name|ActiveMQDestination
operator|)
name|dest2
argument_list|)
expr_stmt|;
name|bridgeBrokersWithIncludedDestination
argument_list|(
literal|"BrokerD"
argument_list|,
literal|"BrokerB"
argument_list|,
operator|(
name|ActiveMQDestination
operator|)
name|dest1
argument_list|,
operator|(
name|ActiveMQDestination
operator|)
name|dest2
argument_list|)
expr_stmt|;
name|bridgeBrokersWithIncludedDestination
argument_list|(
literal|"BrokerD"
argument_list|,
literal|"BrokerC"
argument_list|,
operator|(
name|ActiveMQDestination
operator|)
name|dest1
argument_list|,
operator|(
name|ActiveMQDestination
operator|)
name|dest2
argument_list|)
expr_stmt|;
name|startAllBrokers
argument_list|()
expr_stmt|;
name|brokers
operator|.
name|get
argument_list|(
literal|"BrokerA"
argument_list|)
operator|.
name|broker
operator|.
name|waitUntilStarted
argument_list|()
expr_stmt|;
name|brokers
operator|.
name|get
argument_list|(
literal|"BrokerC"
argument_list|)
operator|.
name|broker
operator|.
name|waitUntilStarted
argument_list|()
expr_stmt|;
name|brokers
operator|.
name|get
argument_list|(
literal|"BrokerD"
argument_list|)
operator|.
name|broker
operator|.
name|waitUntilStarted
argument_list|()
expr_stmt|;
name|Browser
name|browser1
init|=
operator|new
name|Browser
argument_list|(
literal|"BrokerC"
argument_list|,
name|composite
argument_list|)
decl_stmt|;
name|browser1
operator|.
name|start
argument_list|()
expr_stmt|;
name|Browser
name|browser2
init|=
operator|new
name|Browser
argument_list|(
literal|"BrokerD"
argument_list|,
name|composite
argument_list|)
decl_stmt|;
name|browser2
operator|.
name|start
argument_list|()
expr_stmt|;
name|sendMessages
argument_list|(
literal|"BrokerA"
argument_list|,
name|composite
argument_list|,
name|MESSAGE_COUNT
argument_list|)
expr_stmt|;
name|browser1
operator|.
name|join
argument_list|()
expr_stmt|;
name|browser2
operator|.
name|join
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|MESSAGE_COUNT
operator|*
literal|2
argument_list|,
name|browser1
operator|.
name|getTotalCount
argument_list|()
operator|+
name|browser2
operator|.
name|getTotalCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testAMQ3020
parameter_list|()
throws|throws
name|Exception
block|{
name|createBroker
argument_list|(
operator|new
name|ClassPathResource
argument_list|(
literal|"org/apache/activemq/usecases/browse-broker1A.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|createBroker
argument_list|(
operator|new
name|ClassPathResource
argument_list|(
literal|"org/apache/activemq/usecases/browse-broker1B.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|createBroker
argument_list|(
operator|new
name|ClassPathResource
argument_list|(
literal|"org/apache/activemq/usecases/browse-broker2A.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|createBroker
argument_list|(
operator|new
name|ClassPathResource
argument_list|(
literal|"org/apache/activemq/usecases/browse-broker2B.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|createBroker
argument_list|(
operator|new
name|ClassPathResource
argument_list|(
literal|"org/apache/activemq/usecases/browse-broker3A.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|createBroker
argument_list|(
operator|new
name|ClassPathResource
argument_list|(
literal|"org/apache/activemq/usecases/browse-broker3B.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|brokers
operator|.
name|get
argument_list|(
literal|"broker-1A"
argument_list|)
operator|.
name|broker
operator|.
name|waitUntilStarted
argument_list|()
expr_stmt|;
name|brokers
operator|.
name|get
argument_list|(
literal|"broker-2A"
argument_list|)
operator|.
name|broker
operator|.
name|waitUntilStarted
argument_list|()
expr_stmt|;
name|brokers
operator|.
name|get
argument_list|(
literal|"broker-3A"
argument_list|)
operator|.
name|broker
operator|.
name|waitUntilStarted
argument_list|()
expr_stmt|;
name|Destination
name|composite
init|=
name|createDestination
argument_list|(
literal|"PROD.FUSESOURCE.3.A,PROD.FUSESOURCE.3.B"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|Browser
name|browser1
init|=
operator|new
name|Browser
argument_list|(
literal|"broker-3A"
argument_list|,
name|composite
argument_list|)
decl_stmt|;
name|browser1
operator|.
name|start
argument_list|()
expr_stmt|;
name|Browser
name|browser2
init|=
operator|new
name|Browser
argument_list|(
literal|"broker-3B"
argument_list|,
name|composite
argument_list|)
decl_stmt|;
name|browser2
operator|.
name|start
argument_list|()
expr_stmt|;
name|sendMessages
argument_list|(
literal|"broker-1A"
argument_list|,
name|composite
argument_list|,
name|MESSAGE_COUNT
argument_list|)
expr_stmt|;
name|browser1
operator|.
name|join
argument_list|()
expr_stmt|;
name|browser2
operator|.
name|join
argument_list|()
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"broker-3A browsed "
operator|+
name|browser1
operator|.
name|getTotalCount
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"broker-3B browsed "
operator|+
name|browser2
operator|.
name|getTotalCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MESSAGE_COUNT
operator|*
literal|2
argument_list|,
name|browser1
operator|.
name|getTotalCount
argument_list|()
operator|+
name|browser2
operator|.
name|getTotalCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|int
name|browseMessages
parameter_list|(
name|QueueBrowser
name|browser
parameter_list|,
name|String
name|name
parameter_list|)
throws|throws
name|Exception
block|{
name|Enumeration
name|msgs
init|=
name|browser
operator|.
name|getEnumeration
argument_list|()
decl_stmt|;
name|int
name|browsedMessage
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|msgs
operator|.
name|hasMoreElements
argument_list|()
condition|)
block|{
name|browsedMessage
operator|++
expr_stmt|;
name|ActiveMQTextMessage
name|message
init|=
operator|(
name|ActiveMQTextMessage
operator|)
name|msgs
operator|.
name|nextElement
argument_list|()
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
name|name
operator|+
literal|" browsed: "
operator|+
name|message
operator|.
name|getText
argument_list|()
operator|+
literal|" "
operator|+
name|message
operator|.
name|getDestination
argument_list|()
operator|+
literal|" "
operator|+
name|message
operator|.
name|getMessageId
argument_list|()
operator|+
literal|" "
operator|+
name|Arrays
operator|.
name|toString
argument_list|(
name|message
operator|.
name|getBrokerPath
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|browsedMessage
return|;
block|}
specifier|protected
name|int
name|browseMessages
parameter_list|(
name|String
name|broker
parameter_list|,
name|Destination
name|dest
parameter_list|)
throws|throws
name|Exception
block|{
name|QueueBrowser
name|browser
init|=
name|createBrowser
argument_list|(
name|broker
argument_list|,
name|dest
argument_list|)
decl_stmt|;
name|int
name|browsedMessage
init|=
name|browseMessages
argument_list|(
name|browser
argument_list|,
literal|"browser"
argument_list|)
decl_stmt|;
name|browser
operator|.
name|close
argument_list|()
expr_stmt|;
return|return
name|browsedMessage
return|;
block|}
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setAutoFail
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

