begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activeio
operator|.
name|journal
operator|.
name|howl
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activeio
operator|.
name|journal
operator|.
name|RecordLocation
import|;
end_import

begin_comment
comment|/**  * Provides a RecordLocation implementation for the long based  * location pointers that HOWL uses.  *   * @version $Revision: 1.1 $  */
end_comment

begin_class
specifier|public
class|class
name|LongRecordLocation
implements|implements
name|RecordLocation
block|{
specifier|final
specifier|private
name|long
name|location
decl_stmt|;
specifier|public
name|LongRecordLocation
parameter_list|(
name|long
name|l
parameter_list|)
block|{
name|this
operator|.
name|location
operator|=
name|l
expr_stmt|;
block|}
comment|/** 	 * @see java.lang.Comparable#compareTo(java.lang.Object) 	 */
specifier|public
name|int
name|compareTo
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
return|return
call|(
name|int
call|)
argument_list|(
name|location
operator|-
operator|(
operator|(
name|LongRecordLocation
operator|)
name|o
operator|)
operator|.
name|location
argument_list|)
return|;
block|}
comment|/** 	 * @return the original long location provided by HOWL 	 */
specifier|public
name|long
name|getLongLocation
parameter_list|()
block|{
return|return
name|location
return|;
block|}
comment|/** 	 * @see java.lang.Object#hashCode() 	 */
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
name|int
name|lowPart
init|=
call|(
name|int
call|)
argument_list|(
literal|0xFFFFFFFF
operator|&
name|location
argument_list|)
decl_stmt|;
name|int
name|highPart
init|=
call|(
name|int
call|)
argument_list|(
literal|0xFFFFFFFF
operator|&
operator|(
name|location
operator|>>
literal|4
operator|)
argument_list|)
decl_stmt|;
return|return
name|lowPart
operator|^
name|highPart
return|;
block|}
comment|/** 	 * @see java.lang.Object#equals(java.lang.Object) 	 */
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
name|o
operator|.
name|getClass
argument_list|()
operator|!=
name|LongRecordLocation
operator|.
name|class
condition|)
return|return
literal|false
return|;
return|return
operator|(
operator|(
name|LongRecordLocation
operator|)
name|o
operator|)
operator|.
name|location
operator|==
name|location
return|;
block|}
comment|/** 	 * @see java.lang.Object#toString() 	 */
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"0x"
operator|+
name|Long
operator|.
name|toHexString
argument_list|(
name|location
argument_list|)
return|;
block|}
block|}
end_class

end_unit

