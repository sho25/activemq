begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|bugs
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageProducer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ActiveMQQueue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadb
operator|.
name|KahaDBPersistenceAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadb
operator|.
name|KahaDBStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|util
operator|.
name|DefaultIOExceptionHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_class
specifier|public
class|class
name|AMQ2736Test
block|{
name|BrokerService
name|broker
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|testRollbackOnRecover
parameter_list|()
throws|throws
name|Exception
block|{
name|broker
operator|=
name|createAndStartBroker
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|DefaultIOExceptionHandler
name|ignoreAllExceptionsIOExHandler
init|=
operator|new
name|DefaultIOExceptionHandler
argument_list|()
decl_stmt|;
name|ignoreAllExceptionsIOExHandler
operator|.
name|setIgnoreAllErrors
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|broker
operator|.
name|setIoExceptionHandler
argument_list|(
name|ignoreAllExceptionsIOExHandler
argument_list|)
expr_stmt|;
name|ActiveMQConnectionFactory
name|f
init|=
operator|new
name|ActiveMQConnectionFactory
argument_list|(
literal|"vm://localhost?async=false"
argument_list|)
decl_stmt|;
name|f
operator|.
name|setAlwaysSyncSend
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Connection
name|c
init|=
name|f
operator|.
name|createConnection
argument_list|()
decl_stmt|;
name|c
operator|.
name|start
argument_list|()
expr_stmt|;
name|Session
name|s
init|=
name|c
operator|.
name|createSession
argument_list|(
literal|true
argument_list|,
name|Session
operator|.
name|SESSION_TRANSACTED
argument_list|)
decl_stmt|;
name|MessageProducer
name|p
init|=
name|s
operator|.
name|createProducer
argument_list|(
operator|new
name|ActiveMQQueue
argument_list|(
literal|"Tx"
argument_list|)
argument_list|)
decl_stmt|;
name|p
operator|.
name|send
argument_list|(
name|s
operator|.
name|createTextMessage
argument_list|(
literal|"aa"
argument_list|)
argument_list|)
expr_stmt|;
comment|// kill journal without commit
name|KahaDBPersistenceAdapter
name|pa
init|=
operator|(
name|KahaDBPersistenceAdapter
operator|)
name|broker
operator|.
name|getPersistenceAdapter
argument_list|()
decl_stmt|;
name|KahaDBStore
name|store
init|=
name|pa
operator|.
name|getStore
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"last tx location is present "
operator|+
name|store
operator|.
name|getFirstInProgressTxLocation
argument_list|()
argument_list|)
expr_stmt|;
comment|// test hack, close the journal to ensure no further journal updates when broker stops
comment|// mimic kill -9 in terms of no normal shutdown sequence
name|store
operator|.
name|getJournalManager
argument_list|()
operator|.
name|close
argument_list|()
expr_stmt|;
try|try
block|{
name|store
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|expectedLotsAsJournalBorked
parameter_list|)
block|{         }
name|store
operator|.
name|getLockFile
argument_list|()
operator|.
name|unlock
argument_list|()
expr_stmt|;
name|broker
operator|.
name|stop
argument_list|()
expr_stmt|;
name|broker
operator|.
name|waitUntilStopped
argument_list|()
expr_stmt|;
comment|// restart with recovery
name|broker
operator|=
name|createAndStartBroker
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|pa
operator|=
operator|(
name|KahaDBPersistenceAdapter
operator|)
name|broker
operator|.
name|getPersistenceAdapter
argument_list|()
expr_stmt|;
name|store
operator|=
name|pa
operator|.
name|getStore
argument_list|()
expr_stmt|;
comment|// inflight non xa tx should be rolledback on recovery
name|assertNull
argument_list|(
literal|"in progress tx location is present "
argument_list|,
name|store
operator|.
name|getFirstInProgressTxLocation
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|stopBroker
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|broker
operator|!=
literal|null
condition|)
block|{
name|broker
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|BrokerService
name|createAndStartBroker
parameter_list|(
name|boolean
name|deleteAll
parameter_list|)
throws|throws
name|Exception
block|{
name|BrokerService
name|broker
init|=
operator|new
name|BrokerService
argument_list|()
decl_stmt|;
name|broker
operator|.
name|setDeleteAllMessagesOnStartup
argument_list|(
name|deleteAll
argument_list|)
expr_stmt|;
name|broker
operator|.
name|setUseJmx
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|broker
operator|.
name|getManagementContext
argument_list|()
operator|.
name|setCreateConnector
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|broker
operator|.
name|start
argument_list|()
expr_stmt|;
return|return
name|broker
return|;
block|}
block|}
end_class

end_unit

