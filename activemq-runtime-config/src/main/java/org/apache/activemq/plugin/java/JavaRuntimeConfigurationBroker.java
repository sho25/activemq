begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|plugin
operator|.
name|java
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|Broker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|Destination
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|DestinationFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|Queue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|RegionBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|Topic
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|policy
operator|.
name|PolicyEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|policy
operator|.
name|PolicyMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|virtual
operator|.
name|VirtualDestination
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ActiveMQDestination
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|network
operator|.
name|DiscoveryNetworkConnector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|plugin
operator|.
name|AbstractRuntimeConfigurationBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|plugin
operator|.
name|UpdateVirtualDestinationsTask
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|security
operator|.
name|AuthorizationBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|security
operator|.
name|AuthorizationMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|security
operator|.
name|SimpleAuthenticationBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|security
operator|.
name|SimpleAuthenticationPlugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
specifier|public
class|class
name|JavaRuntimeConfigurationBroker
extends|extends
name|AbstractRuntimeConfigurationBroker
block|{
comment|/**      * @param next      */
specifier|public
name|JavaRuntimeConfigurationBroker
parameter_list|(
name|Broker
name|next
parameter_list|)
block|{
name|super
argument_list|(
name|next
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|JavaRuntimeConfigurationBroker
operator|.
name|class
argument_list|)
decl_stmt|;
comment|//Virtual Destinations
specifier|public
name|void
name|setVirtualDestinations
parameter_list|(
specifier|final
name|VirtualDestination
index|[]
name|virtualDestinations
parameter_list|)
block|{
name|this
operator|.
name|addDestinationWork
operator|.
name|add
argument_list|(
operator|new
name|UpdateVirtualDestinationsTask
argument_list|(
name|this
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|VirtualDestination
index|[]
name|getVirtualDestinations
parameter_list|()
block|{
return|return
name|virtualDestinations
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
comment|//New Destinations
specifier|public
name|void
name|setDestinations
parameter_list|(
specifier|final
name|ActiveMQDestination
index|[]
name|destinations
parameter_list|)
block|{
for|for
control|(
name|ActiveMQDestination
name|destination
range|:
name|destinations
control|)
block|{
try|try
block|{
if|if
condition|(
operator|!
name|containsDestination
argument_list|(
name|destination
argument_list|)
condition|)
block|{
name|this
operator|.
name|addDestination
argument_list|(
name|this
operator|.
name|getBrokerService
argument_list|()
operator|.
name|getAdminConnectionContext
argument_list|()
argument_list|,
name|destination
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|this
operator|.
name|info
argument_list|(
literal|"Added destination "
operator|+
name|destination
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|this
operator|.
name|info
argument_list|(
literal|"Failed to add a new destination for: "
operator|+
name|destination
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|protected
name|boolean
name|containsDestination
parameter_list|(
name|ActiveMQDestination
name|destination
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|this
operator|.
name|getBrokerService
argument_list|()
operator|.
name|getRegionBroker
argument_list|()
operator|.
name|getDestinations
argument_list|()
argument_list|)
operator|.
name|contains
argument_list|(
name|destination
argument_list|)
return|;
block|}
specifier|public
name|void
name|addNewDestination
parameter_list|(
name|ActiveMQDestination
name|destination
parameter_list|)
block|{
try|try
block|{
name|this
operator|.
name|addDestination
argument_list|(
name|this
operator|.
name|getBrokerService
argument_list|()
operator|.
name|getAdminConnectionContext
argument_list|()
argument_list|,
name|destination
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|this
operator|.
name|info
argument_list|(
literal|"Added destination "
operator|+
name|destination
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|this
operator|.
name|info
argument_list|(
literal|"Failed to add a new destination for: "
operator|+
name|destination
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
comment|//Network Connectors
specifier|public
name|void
name|addNetworkConnector
parameter_list|(
specifier|final
name|DiscoveryNetworkConnector
name|nc
parameter_list|)
block|{
try|try
block|{
if|if
condition|(
operator|!
name|getBrokerService
argument_list|()
operator|.
name|getNetworkConnectors
argument_list|()
operator|.
name|contains
argument_list|(
name|nc
argument_list|)
condition|)
block|{
name|getBrokerService
argument_list|()
operator|.
name|addNetworkConnector
argument_list|(
name|nc
argument_list|)
expr_stmt|;
name|nc
operator|.
name|start
argument_list|()
expr_stmt|;
name|info
argument_list|(
literal|"started new network connector: "
operator|+
name|nc
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|info
argument_list|(
literal|"skipping network connector add, already exists: "
operator|+
name|nc
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|info
argument_list|(
literal|"Failed to add new networkConnector "
operator|+
name|nc
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|updateNetworkConnector
parameter_list|(
specifier|final
name|DiscoveryNetworkConnector
name|nc
parameter_list|)
block|{
name|removeNetworkConnector
argument_list|(
name|nc
argument_list|)
expr_stmt|;
name|addNetworkConnector
argument_list|(
name|nc
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|removeNetworkConnector
parameter_list|(
specifier|final
name|DiscoveryNetworkConnector
name|existingCandidate
parameter_list|)
block|{
if|if
condition|(
name|getBrokerService
argument_list|()
operator|.
name|removeNetworkConnector
argument_list|(
name|existingCandidate
argument_list|)
condition|)
block|{
try|try
block|{
name|existingCandidate
operator|.
name|stop
argument_list|()
expr_stmt|;
name|info
argument_list|(
literal|"stopped and removed networkConnector: "
operator|+
name|existingCandidate
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|info
argument_list|(
literal|"Failed to stop removed network connector: "
operator|+
name|existingCandidate
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|//Policy entries
specifier|public
name|void
name|addNewPolicyEntry
parameter_list|(
name|PolicyEntry
name|addition
parameter_list|)
block|{
name|PolicyMap
name|existingMap
init|=
name|getBrokerService
argument_list|()
operator|.
name|getDestinationPolicy
argument_list|()
decl_stmt|;
name|existingMap
operator|.
name|put
argument_list|(
name|addition
operator|.
name|getDestination
argument_list|()
argument_list|,
name|addition
argument_list|)
expr_stmt|;
name|applyRetrospectively
argument_list|(
name|addition
argument_list|)
expr_stmt|;
name|info
argument_list|(
literal|"added policy for: "
operator|+
name|addition
operator|.
name|getDestination
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|modifyPolicyEntry
parameter_list|(
name|PolicyEntry
name|existing
parameter_list|)
block|{
name|PolicyMap
name|existingMap
init|=
name|this
operator|.
name|getBrokerService
argument_list|()
operator|.
name|getDestinationPolicy
argument_list|()
decl_stmt|;
name|Set
argument_list|<
name|?
argument_list|>
name|existingEntry
init|=
name|existingMap
operator|.
name|get
argument_list|(
name|existing
operator|.
name|getDestination
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|existingEntry
operator|.
name|size
argument_list|()
operator|==
literal|1
condition|)
block|{
name|applyRetrospectively
argument_list|(
name|existing
argument_list|)
expr_stmt|;
name|this
operator|.
name|info
argument_list|(
literal|"updated policy for: "
operator|+
name|existing
operator|.
name|getDestination
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|info
argument_list|(
literal|"cannot modify policy matching multiple destinations: "
operator|+
name|existingEntry
operator|+
literal|", destination:"
operator|+
name|existing
operator|.
name|getDestination
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|applyRetrospectively
parameter_list|(
name|PolicyEntry
name|updatedEntry
parameter_list|)
block|{
name|RegionBroker
name|regionBroker
init|=
operator|(
name|RegionBroker
operator|)
name|this
operator|.
name|getBrokerService
argument_list|()
operator|.
name|getRegionBroker
argument_list|()
decl_stmt|;
for|for
control|(
name|Destination
name|destination
range|:
name|regionBroker
operator|.
name|getDestinations
argument_list|(
name|updatedEntry
operator|.
name|getDestination
argument_list|()
argument_list|)
control|)
block|{
name|Destination
name|target
init|=
name|destination
decl_stmt|;
if|if
condition|(
name|destination
operator|instanceof
name|DestinationFilter
condition|)
block|{
name|target
operator|=
operator|(
operator|(
name|DestinationFilter
operator|)
name|destination
operator|)
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|target
operator|.
name|getActiveMQDestination
argument_list|()
operator|.
name|isQueue
argument_list|()
condition|)
block|{
name|updatedEntry
operator|.
name|update
argument_list|(
operator|(
name|Queue
operator|)
name|target
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|target
operator|.
name|getActiveMQDestination
argument_list|()
operator|.
name|isTopic
argument_list|()
condition|)
block|{
name|updatedEntry
operator|.
name|update
argument_list|(
operator|(
name|Topic
operator|)
name|target
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|debug
argument_list|(
literal|"applied update to:"
operator|+
name|target
argument_list|)
expr_stmt|;
block|}
block|}
comment|//authentication plugin
specifier|public
name|void
name|updateSimpleAuthenticationPlugin
parameter_list|(
specifier|final
name|SimpleAuthenticationPlugin
name|updatedPlugin
parameter_list|)
block|{
try|try
block|{
specifier|final
name|SimpleAuthenticationBroker
name|authenticationBroker
init|=
operator|(
name|SimpleAuthenticationBroker
operator|)
name|getBrokerService
argument_list|()
operator|.
name|getBroker
argument_list|()
operator|.
name|getAdaptor
argument_list|(
name|SimpleAuthenticationBroker
operator|.
name|class
argument_list|)
decl_stmt|;
name|addConnectionWork
operator|.
name|add
argument_list|(
operator|new
name|Runnable
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
name|authenticationBroker
operator|.
name|setUserGroups
argument_list|(
name|updatedPlugin
operator|.
name|getUserGroups
argument_list|()
argument_list|)
expr_stmt|;
name|authenticationBroker
operator|.
name|setUserPasswords
argument_list|(
name|updatedPlugin
operator|.
name|getUserPasswords
argument_list|()
argument_list|)
expr_stmt|;
name|authenticationBroker
operator|.
name|setAnonymousAccessAllowed
argument_list|(
name|updatedPlugin
operator|.
name|isAnonymousAccessAllowed
argument_list|()
argument_list|)
expr_stmt|;
name|authenticationBroker
operator|.
name|setAnonymousUser
argument_list|(
name|updatedPlugin
operator|.
name|getAnonymousUser
argument_list|()
argument_list|)
expr_stmt|;
name|authenticationBroker
operator|.
name|setAnonymousGroup
argument_list|(
name|updatedPlugin
operator|.
name|getAnonymousGroup
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|info
argument_list|(
literal|"failed to apply SimpleAuthenticationPlugin modifications to SimpleAuthenticationBroker"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
comment|//authorization map
specifier|public
name|void
name|updateAuthorizationMap
parameter_list|(
specifier|final
name|AuthorizationMap
name|authorizationMap
parameter_list|)
block|{
try|try
block|{
comment|// replace authorization map - need exclusive write lock to total broker
name|AuthorizationBroker
name|authorizationBroker
init|=
operator|(
name|AuthorizationBroker
operator|)
name|getBrokerService
argument_list|()
operator|.
name|getBroker
argument_list|()
operator|.
name|getAdaptor
argument_list|(
name|AuthorizationBroker
operator|.
name|class
argument_list|)
decl_stmt|;
name|authorizationBroker
operator|.
name|setAuthorizationMap
argument_list|(
name|authorizationMap
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|info
argument_list|(
literal|"failed to apply modified AuthorizationMap to AuthorizationBroker"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

