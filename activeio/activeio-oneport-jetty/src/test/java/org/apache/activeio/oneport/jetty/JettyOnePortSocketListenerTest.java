begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Copyright 2005-2006 The Apache Software Foundation  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activeio
operator|.
name|oneport
operator|.
name|jetty
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activeio
operator|.
name|oneport
operator|.
name|OnePortAsyncChannelServerTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activeio
operator|.
name|oneport
operator|.
name|jetty
operator|.
name|JettyOnePortSocketListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mortbay
operator|.
name|http
operator|.
name|HttpContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mortbay
operator|.
name|http
operator|.
name|HttpServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mortbay
operator|.
name|jetty
operator|.
name|servlet
operator|.
name|ServletHandler
import|;
end_import

begin_import
import|import
name|edu
operator|.
name|emory
operator|.
name|mathcs
operator|.
name|backport
operator|.
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|BlockingQueue
import|;
end_import

begin_comment
comment|/**  *   */
end_comment

begin_class
specifier|public
class|class
name|JettyOnePortSocketListenerTest
extends|extends
name|OnePortAsyncChannelServerTest
block|{
specifier|static
specifier|public
name|BlockingQueue
name|staticResultSlot
decl_stmt|;
specifier|private
name|HttpServer
name|jetty
decl_stmt|;
specifier|protected
name|void
name|startHTTPServer
parameter_list|()
throws|throws
name|Exception
block|{
name|staticResultSlot
operator|=
name|resultSlot
expr_stmt|;
comment|// Create the server
name|jetty
operator|=
operator|new
name|HttpServer
argument_list|()
expr_stmt|;
comment|// Create a port listener
name|JettyOnePortSocketListener
name|listener
init|=
operator|new
name|JettyOnePortSocketListener
argument_list|(
name|server
argument_list|)
decl_stmt|;
name|jetty
operator|.
name|addListener
argument_list|(
name|listener
argument_list|)
expr_stmt|;
comment|// Create a context
name|HttpContext
name|context
init|=
operator|new
name|HttpContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|setContextPath
argument_list|(
literal|"/"
argument_list|)
expr_stmt|;
name|jetty
operator|.
name|addContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
comment|// Create a servlet container
name|ServletHandler
name|servlets
init|=
operator|new
name|ServletHandler
argument_list|()
decl_stmt|;
name|context
operator|.
name|addHandler
argument_list|(
name|servlets
argument_list|)
expr_stmt|;
comment|// Map a servlet onto the container
name|servlets
operator|.
name|addServlet
argument_list|(
literal|"Test"
argument_list|,
literal|"*"
argument_list|,
name|TestServlet
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
comment|// Start the http server
name|jetty
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|stopHTTPServer
parameter_list|()
throws|throws
name|InterruptedException
block|{
name|jetty
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

