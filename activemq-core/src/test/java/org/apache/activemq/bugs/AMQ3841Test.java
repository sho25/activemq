begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|bugs
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ActiveMQQueue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|PersistenceAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadb
operator|.
name|FilteredKahaDBPersistenceAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadb
operator|.
name|KahaDBPersistenceAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadb
operator|.
name|MultiKahaDBPersistenceAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|util
operator|.
name|Wait
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
specifier|public
class|class
name|AMQ3841Test
block|{
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|AMQ3841Test
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|int
name|maxFileLength
init|=
literal|1024
operator|*
literal|1024
operator|*
literal|32
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|destinationName
init|=
literal|"TEST.QUEUE"
decl_stmt|;
name|BrokerService
name|broker
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|prepareBrokerWithMultiStore
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|broker
operator|.
name|start
argument_list|()
expr_stmt|;
name|broker
operator|.
name|waitUntilStarted
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|broker
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|BrokerService
name|createBroker
parameter_list|(
name|PersistenceAdapter
name|kaha
parameter_list|)
throws|throws
name|Exception
block|{
name|BrokerService
name|broker
init|=
operator|new
name|BrokerService
argument_list|()
decl_stmt|;
name|broker
operator|.
name|setUseJmx
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|broker
operator|.
name|setBrokerName
argument_list|(
literal|"localhost"
argument_list|)
expr_stmt|;
name|broker
operator|.
name|setPersistenceAdapter
argument_list|(
name|kaha
argument_list|)
expr_stmt|;
return|return
name|broker
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRestartAfterQueueDelete
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Ensure we have an Admin View.
name|assertTrue
argument_list|(
literal|"Broker doesn't have an Admin View."
argument_list|,
name|Wait
operator|.
name|waitFor
argument_list|(
operator|new
name|Wait
operator|.
name|Condition
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|isSatisified
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|(
name|broker
operator|.
name|getAdminView
argument_list|()
operator|)
operator|!=
literal|null
return|;
block|}
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|broker
operator|.
name|getAdminView
argument_list|()
operator|.
name|addQueue
argument_list|(
name|destinationName
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|broker
operator|.
name|getDestination
argument_list|(
operator|new
name|ActiveMQQueue
argument_list|(
name|destinationName
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|broker
operator|.
name|getAdminView
argument_list|()
operator|.
name|removeQueue
argument_list|(
name|destinationName
argument_list|)
expr_stmt|;
name|broker
operator|.
name|stop
argument_list|()
expr_stmt|;
name|broker
operator|.
name|waitUntilStopped
argument_list|()
expr_stmt|;
name|prepareBrokerWithMultiStore
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|broker
operator|.
name|start
argument_list|()
expr_stmt|;
name|broker
operator|.
name|getAdminView
argument_list|()
operator|.
name|addQueue
argument_list|(
name|destinationName
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|broker
operator|.
name|getDestination
argument_list|(
operator|new
name|ActiveMQQueue
argument_list|(
name|destinationName
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|KahaDBPersistenceAdapter
name|createStore
parameter_list|(
name|boolean
name|delete
parameter_list|)
throws|throws
name|IOException
block|{
name|KahaDBPersistenceAdapter
name|kaha
init|=
operator|new
name|KahaDBPersistenceAdapter
argument_list|()
decl_stmt|;
name|kaha
operator|.
name|setJournalMaxFileLength
argument_list|(
name|maxFileLength
argument_list|)
expr_stmt|;
name|kaha
operator|.
name|setCleanupInterval
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
if|if
condition|(
name|delete
condition|)
block|{
name|kaha
operator|.
name|deleteAllMessages
argument_list|()
expr_stmt|;
block|}
return|return
name|kaha
return|;
block|}
specifier|public
name|void
name|prepareBrokerWithMultiStore
parameter_list|(
name|boolean
name|deleteAllMessages
parameter_list|)
throws|throws
name|Exception
block|{
name|MultiKahaDBPersistenceAdapter
name|multiKahaDBPersistenceAdapter
init|=
operator|new
name|MultiKahaDBPersistenceAdapter
argument_list|()
decl_stmt|;
if|if
condition|(
name|deleteAllMessages
condition|)
block|{
name|multiKahaDBPersistenceAdapter
operator|.
name|deleteAllMessages
argument_list|()
expr_stmt|;
block|}
name|ArrayList
argument_list|<
name|FilteredKahaDBPersistenceAdapter
argument_list|>
name|adapters
init|=
operator|new
name|ArrayList
argument_list|<
name|FilteredKahaDBPersistenceAdapter
argument_list|>
argument_list|()
decl_stmt|;
name|FilteredKahaDBPersistenceAdapter
name|template
init|=
operator|new
name|FilteredKahaDBPersistenceAdapter
argument_list|()
decl_stmt|;
name|template
operator|.
name|setPersistenceAdapter
argument_list|(
name|createStore
argument_list|(
name|deleteAllMessages
argument_list|)
argument_list|)
expr_stmt|;
name|template
operator|.
name|setPerDestination
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|adapters
operator|.
name|add
argument_list|(
name|template
argument_list|)
expr_stmt|;
name|multiKahaDBPersistenceAdapter
operator|.
name|setFilteredPersistenceAdapters
argument_list|(
name|adapters
argument_list|)
expr_stmt|;
name|broker
operator|=
name|createBroker
argument_list|(
name|multiKahaDBPersistenceAdapter
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

