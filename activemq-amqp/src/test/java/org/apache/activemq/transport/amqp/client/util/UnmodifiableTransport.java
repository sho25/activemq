begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|amqp
operator|.
name|client
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|qpid
operator|.
name|proton
operator|.
name|amqp
operator|.
name|transport
operator|.
name|ErrorCondition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|qpid
operator|.
name|proton
operator|.
name|engine
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|qpid
operator|.
name|proton
operator|.
name|engine
operator|.
name|EndpointState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|qpid
operator|.
name|proton
operator|.
name|engine
operator|.
name|Record
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|qpid
operator|.
name|proton
operator|.
name|engine
operator|.
name|Sasl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|qpid
operator|.
name|proton
operator|.
name|engine
operator|.
name|Ssl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|qpid
operator|.
name|proton
operator|.
name|engine
operator|.
name|SslDomain
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|qpid
operator|.
name|proton
operator|.
name|engine
operator|.
name|SslPeerDetails
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|qpid
operator|.
name|proton
operator|.
name|engine
operator|.
name|Transport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|qpid
operator|.
name|proton
operator|.
name|engine
operator|.
name|TransportException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|qpid
operator|.
name|proton
operator|.
name|engine
operator|.
name|TransportResult
import|;
end_import

begin_comment
comment|/**  * Unmodifiable Transport wrapper used to prevent test code from accidentally  * modifying Transport state.  */
end_comment

begin_class
specifier|public
class|class
name|UnmodifiableTransport
implements|implements
name|Transport
block|{
specifier|private
specifier|final
name|Transport
name|transport
decl_stmt|;
specifier|public
name|UnmodifiableTransport
parameter_list|(
name|Transport
name|transport
parameter_list|)
block|{
name|this
operator|.
name|transport
operator|=
name|transport
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Transport"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|free
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Transport"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Object
name|getContext
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|EndpointState
name|getLocalState
parameter_list|()
block|{
return|return
name|transport
operator|.
name|getLocalState
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|ErrorCondition
name|getRemoteCondition
parameter_list|()
block|{
return|return
name|transport
operator|.
name|getRemoteCondition
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|EndpointState
name|getRemoteState
parameter_list|()
block|{
return|return
name|transport
operator|.
name|getRemoteState
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|open
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Transport"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setCondition
parameter_list|(
name|ErrorCondition
name|arg0
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Transport"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setContext
parameter_list|(
name|Object
name|arg0
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Transport"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|bind
parameter_list|(
name|Connection
name|arg0
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Transport"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|capacity
parameter_list|()
block|{
return|return
name|transport
operator|.
name|capacity
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|close_head
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Transport"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|close_tail
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Transport"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getChannelMax
parameter_list|()
block|{
return|return
name|transport
operator|.
name|getChannelMax
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|ErrorCondition
name|getCondition
parameter_list|()
block|{
return|return
name|transport
operator|.
name|getCondition
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getIdleTimeout
parameter_list|()
block|{
return|return
name|transport
operator|.
name|getIdleTimeout
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|ByteBuffer
name|getInputBuffer
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getMaxFrameSize
parameter_list|()
block|{
return|return
name|transport
operator|.
name|getMaxFrameSize
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|ByteBuffer
name|getOutputBuffer
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getRemoteChannelMax
parameter_list|()
block|{
return|return
name|transport
operator|.
name|getRemoteChannelMax
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getRemoteIdleTimeout
parameter_list|()
block|{
return|return
name|transport
operator|.
name|getRemoteIdleTimeout
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getRemoteMaxFrameSize
parameter_list|()
block|{
return|return
name|transport
operator|.
name|getRemoteMaxFrameSize
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|ByteBuffer
name|head
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|input
parameter_list|(
name|byte
index|[]
name|arg0
parameter_list|,
name|int
name|arg1
parameter_list|,
name|int
name|arg2
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Transport"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isClosed
parameter_list|()
block|{
return|return
name|transport
operator|.
name|isClosed
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|output
parameter_list|(
name|byte
index|[]
name|arg0
parameter_list|,
name|int
name|arg1
parameter_list|,
name|int
name|arg2
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Transport"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|outputConsumed
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Transport"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|pending
parameter_list|()
block|{
return|return
name|transport
operator|.
name|pending
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|pop
parameter_list|(
name|int
name|arg0
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Transport"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|()
throws|throws
name|TransportException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Transport"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|TransportResult
name|processInput
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Transport"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Sasl
name|sasl
parameter_list|()
throws|throws
name|IllegalStateException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Transport"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setChannelMax
parameter_list|(
name|int
name|arg0
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Transport"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setIdleTimeout
parameter_list|(
name|int
name|arg0
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Transport"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setMaxFrameSize
parameter_list|(
name|int
name|arg0
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Transport"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Ssl
name|ssl
parameter_list|(
name|SslDomain
name|arg0
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Transport"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Ssl
name|ssl
parameter_list|(
name|SslDomain
name|arg0
parameter_list|,
name|SslPeerDetails
name|arg1
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Transport"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|ByteBuffer
name|tail
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|tick
parameter_list|(
name|long
name|arg0
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Transport"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|trace
parameter_list|(
name|int
name|arg0
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Transport"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|unbind
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Transport"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Record
name|attachments
parameter_list|()
block|{
return|return
name|transport
operator|.
name|attachments
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getFramesInput
parameter_list|()
block|{
return|return
name|transport
operator|.
name|getFramesInput
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getFramesOutput
parameter_list|()
block|{
return|return
name|transport
operator|.
name|getFramesOutput
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setEmitFlowEventOnSend
parameter_list|(
name|boolean
name|emitFlowEventOnSend
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Transport"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isEmitFlowEventOnSend
parameter_list|()
block|{
return|return
name|transport
operator|.
name|isEmitFlowEventOnSend
argument_list|()
return|;
block|}
block|}
end_class

end_unit

