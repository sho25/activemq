begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|partition
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|Connector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|ConnectionStatistics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|Command
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ConnectionControl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * A Connection implementation that proxies all Connection invocation to  * a delegate connection.  */
end_comment

begin_class
specifier|public
class|class
name|ConnectionProxy
implements|implements
name|Connection
block|{
specifier|final
name|Connection
name|next
decl_stmt|;
specifier|public
name|ConnectionProxy
parameter_list|(
name|Connection
name|next
parameter_list|)
block|{
name|this
operator|.
name|next
operator|=
name|next
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|dispatchAsync
parameter_list|(
name|Command
name|command
parameter_list|)
block|{
name|next
operator|.
name|dispatchAsync
argument_list|(
name|command
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|dispatchSync
parameter_list|(
name|Command
name|message
parameter_list|)
block|{
name|next
operator|.
name|dispatchSync
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getConnectionId
parameter_list|()
block|{
return|return
name|next
operator|.
name|getConnectionId
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Connector
name|getConnector
parameter_list|()
block|{
return|return
name|next
operator|.
name|getConnector
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getDispatchQueueSize
parameter_list|()
block|{
return|return
name|next
operator|.
name|getDispatchQueueSize
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getRemoteAddress
parameter_list|()
block|{
return|return
name|next
operator|.
name|getRemoteAddress
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|ConnectionStatistics
name|getStatistics
parameter_list|()
block|{
return|return
name|next
operator|.
name|getStatistics
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isActive
parameter_list|()
block|{
return|return
name|next
operator|.
name|isActive
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isBlocked
parameter_list|()
block|{
return|return
name|next
operator|.
name|isBlocked
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isConnected
parameter_list|()
block|{
return|return
name|next
operator|.
name|isConnected
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isFaultTolerantConnection
parameter_list|()
block|{
return|return
name|next
operator|.
name|isFaultTolerantConnection
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isManageable
parameter_list|()
block|{
return|return
name|next
operator|.
name|isManageable
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isNetworkConnection
parameter_list|()
block|{
return|return
name|next
operator|.
name|isNetworkConnection
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isSlow
parameter_list|()
block|{
return|return
name|next
operator|.
name|isSlow
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Response
name|service
parameter_list|(
name|Command
name|command
parameter_list|)
block|{
return|return
name|next
operator|.
name|service
argument_list|(
name|command
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|serviceException
parameter_list|(
name|Throwable
name|error
parameter_list|)
block|{
name|next
operator|.
name|serviceException
argument_list|(
name|error
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|serviceExceptionAsync
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|next
operator|.
name|serviceExceptionAsync
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|start
parameter_list|()
throws|throws
name|Exception
block|{
name|next
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|stop
parameter_list|()
throws|throws
name|Exception
block|{
name|next
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateClient
parameter_list|(
name|ConnectionControl
name|control
parameter_list|)
block|{
name|next
operator|.
name|updateClient
argument_list|(
name|control
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

