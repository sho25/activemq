begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|maven
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|MalformedURLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_comment
comment|/**  * Helper to convert relative paths to XBean description files to URL-compliant absolute paths.  *   * @author Marc CARRE<carre.marc@gmail.com>  */
end_comment

begin_class
specifier|public
class|class
name|XBeanFileResolver
block|{
specifier|private
specifier|static
specifier|final
name|String
name|XBEAN_FILE
init|=
literal|"xbean:file:"
decl_stmt|;
comment|/**      * Check if the provided path is an URL to a XBean file (xbean:file:<path/to/file>)      */
specifier|public
name|boolean
name|isXBeanFile
parameter_list|(
specifier|final
name|String
name|configUri
parameter_list|)
block|{
return|return
name|configUri
operator|.
name|startsWith
argument_list|(
name|XBEAN_FILE
argument_list|)
return|;
block|}
comment|/**      * Convert provided path into a URL-style absolute path. See also:      * http://maven.apache.org/plugin-developers/common-bugs.html# Converting_between_URLs_and_Filesystem_Paths      */
specifier|public
name|String
name|toUrlCompliantAbsolutePath
parameter_list|(
specifier|final
name|String
name|configUri
parameter_list|)
block|{
if|if
condition|(
operator|!
name|isXBeanFile
argument_list|(
name|configUri
argument_list|)
condition|)
return|return
name|configUri
return|;
name|String
name|filePath
init|=
name|extractFilePath
argument_list|(
name|configUri
argument_list|)
decl_stmt|;
return|return
name|XBEAN_FILE
operator|+
name|toAbsolutePath
argument_list|(
name|filePath
argument_list|)
return|;
block|}
specifier|private
name|String
name|extractFilePath
parameter_list|(
specifier|final
name|String
name|configUri
parameter_list|)
block|{
return|return
name|configUri
operator|.
name|substring
argument_list|(
name|getIndexFilePath
argument_list|(
name|configUri
argument_list|)
argument_list|,
name|configUri
operator|.
name|length
argument_list|()
argument_list|)
return|;
block|}
specifier|private
name|int
name|getIndexFilePath
parameter_list|(
specifier|final
name|String
name|configUri
parameter_list|)
block|{
return|return
name|configUri
operator|.
name|indexOf
argument_list|(
name|XBEAN_FILE
argument_list|)
operator|+
name|XBEAN_FILE
operator|.
name|length
argument_list|()
return|;
block|}
specifier|private
name|String
name|toAbsolutePath
parameter_list|(
specifier|final
name|String
name|path
parameter_list|)
block|{
try|try
block|{
specifier|final
name|URL
name|url
init|=
operator|new
name|File
argument_list|(
name|path
argument_list|)
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
decl_stmt|;
return|return
name|toFilePath
argument_list|(
name|url
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|MalformedURLException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Failed to resolve relative path for: "
operator|+
name|path
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|private
name|String
name|toFilePath
parameter_list|(
specifier|final
name|URL
name|url
parameter_list|)
block|{
name|String
name|filePath
init|=
name|url
operator|.
name|getFile
argument_list|()
decl_stmt|;
return|return
name|underWindows
argument_list|()
condition|?
name|removePrependingSlash
argument_list|(
name|filePath
argument_list|)
else|:
name|filePath
return|;
block|}
specifier|private
name|String
name|removePrependingSlash
parameter_list|(
name|String
name|filePath
parameter_list|)
block|{
comment|// Remove prepending '/' because path would be /C:/temp/file.txt, as URL would be file:/C:/temp/file.txt
return|return
name|filePath
operator|.
name|substring
argument_list|(
literal|1
argument_list|,
name|filePath
operator|.
name|length
argument_list|()
argument_list|)
return|;
block|}
specifier|private
name|boolean
name|underWindows
parameter_list|()
block|{
name|String
name|os
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"os.name"
argument_list|)
operator|.
name|toLowerCase
argument_list|()
decl_stmt|;
return|return
operator|(
name|os
operator|.
name|indexOf
argument_list|(
literal|"win"
argument_list|)
operator|>=
literal|0
operator|)
return|;
block|}
block|}
end_class

end_unit

