begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadb
operator|.
name|disk
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadb
operator|.
name|disk
operator|.
name|journal
operator|.
name|Location
import|;
end_import

begin_class
specifier|public
class|class
name|LocationMarshaller
implements|implements
name|Marshaller
argument_list|<
name|Location
argument_list|>
block|{
specifier|public
specifier|final
specifier|static
name|LocationMarshaller
name|INSTANCE
init|=
operator|new
name|LocationMarshaller
argument_list|()
decl_stmt|;
specifier|public
name|Location
name|readPayload
parameter_list|(
name|DataInput
name|dataIn
parameter_list|)
throws|throws
name|IOException
block|{
name|Location
name|rc
init|=
operator|new
name|Location
argument_list|()
decl_stmt|;
name|rc
operator|.
name|setDataFileId
argument_list|(
name|dataIn
operator|.
name|readInt
argument_list|()
argument_list|)
expr_stmt|;
name|rc
operator|.
name|setOffset
argument_list|(
name|dataIn
operator|.
name|readInt
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|rc
return|;
block|}
specifier|public
name|void
name|writePayload
parameter_list|(
name|Location
name|object
parameter_list|,
name|DataOutput
name|dataOut
parameter_list|)
throws|throws
name|IOException
block|{
name|dataOut
operator|.
name|writeInt
argument_list|(
name|object
operator|.
name|getDataFileId
argument_list|()
argument_list|)
expr_stmt|;
name|dataOut
operator|.
name|writeInt
argument_list|(
name|object
operator|.
name|getOffset
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getFixedSize
parameter_list|()
block|{
return|return
literal|8
return|;
block|}
specifier|public
name|Location
name|deepCopy
parameter_list|(
name|Location
name|source
parameter_list|)
block|{
return|return
operator|new
name|Location
argument_list|(
name|source
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|isDeepCopySupported
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
block|}
end_class

end_unit

