begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *   * Copyright 2005 LogicBlaze, Inc. http://www.logicblaze.com  *   * Licensed under the Apache License, Version 2.0 (the "License");   * you may not use this file except in compliance with the License.   * You may obtain a copy of the License at   *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   * See the License for the specific language governing permissions and   * limitations under the License.   *   **/
end_comment

begin_package
package|package
name|org
operator|.
name|activemq
operator|.
name|transport
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_comment
comment|/**  * A useful base class for implementations of {@link TransportServer}  *   * @version $Revision: 1.1 $  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|TransportServerSupport
implements|implements
name|TransportServer
block|{
specifier|private
name|URI
name|location
decl_stmt|;
specifier|private
name|TransportAcceptListener
name|acceptListener
decl_stmt|;
specifier|public
name|TransportServerSupport
parameter_list|()
block|{     }
specifier|public
name|TransportServerSupport
parameter_list|(
name|URI
name|location
parameter_list|)
block|{
name|this
operator|.
name|location
operator|=
name|location
expr_stmt|;
block|}
specifier|public
name|URI
name|getConnectURI
parameter_list|()
block|{
return|return
name|location
return|;
block|}
comment|/**      * @return Returns the acceptListener.      */
specifier|public
name|TransportAcceptListener
name|getAcceptListener
parameter_list|()
block|{
return|return
name|acceptListener
return|;
block|}
comment|/**      * Registers an accept listener      *       * @param acceptListener      */
specifier|public
name|void
name|setAcceptListener
parameter_list|(
name|TransportAcceptListener
name|acceptListener
parameter_list|)
block|{
name|this
operator|.
name|acceptListener
operator|=
name|acceptListener
expr_stmt|;
block|}
comment|/**      * @return Returns the location.      */
specifier|public
name|URI
name|getLocation
parameter_list|()
block|{
return|return
name|location
return|;
block|}
comment|/**      * @param location      *            The location to set.      */
specifier|public
name|void
name|setLocation
parameter_list|(
name|URI
name|location
parameter_list|)
block|{
name|this
operator|.
name|location
operator|=
name|location
expr_stmt|;
block|}
specifier|protected
name|void
name|onAcceptError
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
if|if
condition|(
name|acceptListener
operator|!=
literal|null
condition|)
block|{
name|acceptListener
operator|.
name|onAcceptError
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

