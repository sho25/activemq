begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|security
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CopyOnWriteArrayList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|Broker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|ConnectionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ActiveMQDestination
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ConnectionInfo
import|;
end_import

begin_class
specifier|public
class|class
name|AbstractAuthenticationBroker
extends|extends
name|BrokerFilter
block|{
specifier|protected
specifier|final
name|CopyOnWriteArrayList
argument_list|<
name|SecurityContext
argument_list|>
name|securityContexts
init|=
operator|new
name|CopyOnWriteArrayList
argument_list|<
name|SecurityContext
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|AbstractAuthenticationBroker
parameter_list|(
name|Broker
name|next
parameter_list|)
block|{
name|super
argument_list|(
name|next
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|removeDestination
parameter_list|(
name|ConnectionContext
name|context
parameter_list|,
name|ActiveMQDestination
name|destination
parameter_list|,
name|long
name|timeout
parameter_list|)
throws|throws
name|Exception
block|{
name|next
operator|.
name|removeDestination
argument_list|(
name|context
argument_list|,
name|destination
argument_list|,
name|timeout
argument_list|)
expr_stmt|;
for|for
control|(
name|SecurityContext
name|sc
range|:
name|securityContexts
control|)
block|{
name|sc
operator|.
name|getAuthorizedReadDests
argument_list|()
operator|.
name|remove
argument_list|(
name|destination
argument_list|)
expr_stmt|;
name|sc
operator|.
name|getAuthorizedWriteDests
argument_list|()
operator|.
name|remove
argument_list|(
name|destination
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|removeConnection
parameter_list|(
name|ConnectionContext
name|context
parameter_list|,
name|ConnectionInfo
name|info
parameter_list|,
name|Throwable
name|error
parameter_list|)
throws|throws
name|Exception
block|{
name|super
operator|.
name|removeConnection
argument_list|(
name|context
argument_list|,
name|info
argument_list|,
name|error
argument_list|)
expr_stmt|;
if|if
condition|(
name|securityContexts
operator|.
name|remove
argument_list|(
name|context
operator|.
name|getSecurityContext
argument_list|()
argument_list|)
condition|)
block|{
name|context
operator|.
name|setSecurityContext
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * Previously logged in users may no longer have the same access anymore.      * Refresh all the logged into users.      */
specifier|public
name|void
name|refresh
parameter_list|()
block|{
for|for
control|(
name|SecurityContext
name|sc
range|:
name|securityContexts
control|)
block|{
name|sc
operator|.
name|getAuthorizedReadDests
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
name|sc
operator|.
name|getAuthorizedWriteDests
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

