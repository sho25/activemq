begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Copyright 2005-2006 The Apache Software Foundation  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activeio
operator|.
name|journal
operator|.
name|Journal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activeio
operator|.
name|journal
operator|.
name|active
operator|.
name|JournalImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|jdbc
operator|.
name|DataSourceSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|jdbc
operator|.
name|JDBCAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|jdbc
operator|.
name|JDBCPersistenceAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|jdbc
operator|.
name|Statements
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|journal
operator|.
name|JournalPersistenceAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|journal
operator|.
name|QuickJournalPersistenceAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|thread
operator|.
name|TaskRunnerFactory
import|;
end_import

begin_comment
comment|/**  * Factory class that can create PersistenceAdapter objects.  *  * @version $Revision: 1.4 $  */
end_comment

begin_class
specifier|public
class|class
name|DefaultPersistenceAdapterFactory
extends|extends
name|DataSourceSupport
implements|implements
name|PersistenceAdapterFactory
block|{
specifier|private
name|int
name|journalLogFileSize
init|=
literal|1024
operator|*
literal|1024
operator|*
literal|20
decl_stmt|;
specifier|private
name|int
name|journalLogFiles
init|=
literal|2
decl_stmt|;
specifier|private
name|TaskRunnerFactory
name|taskRunnerFactory
decl_stmt|;
specifier|private
name|Journal
name|journal
decl_stmt|;
specifier|private
name|boolean
name|useJournal
init|=
literal|true
decl_stmt|;
specifier|private
name|boolean
name|useQuickJournal
init|=
literal|false
decl_stmt|;
specifier|private
name|File
name|journalArchiveDirectory
decl_stmt|;
specifier|private
name|JDBCPersistenceAdapter
name|jdbcPersistenceAdapter
init|=
operator|new
name|JDBCPersistenceAdapter
argument_list|()
decl_stmt|;
specifier|public
name|PersistenceAdapter
name|createPersistenceAdapter
parameter_list|()
throws|throws
name|IOException
block|{
name|jdbcPersistenceAdapter
operator|.
name|setDataSource
argument_list|(
name|getDataSource
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|useJournal
condition|)
block|{
return|return
name|jdbcPersistenceAdapter
return|;
block|}
comment|// Setup the Journal
if|if
condition|(
name|useQuickJournal
condition|)
block|{
return|return
operator|new
name|QuickJournalPersistenceAdapter
argument_list|(
name|getJournal
argument_list|()
argument_list|,
name|jdbcPersistenceAdapter
argument_list|,
name|getTaskRunnerFactory
argument_list|()
argument_list|)
return|;
block|}
else|else
block|{
return|return
operator|new
name|JournalPersistenceAdapter
argument_list|(
name|getJournal
argument_list|()
argument_list|,
name|jdbcPersistenceAdapter
argument_list|,
name|getTaskRunnerFactory
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|public
name|int
name|getJournalLogFiles
parameter_list|()
block|{
return|return
name|journalLogFiles
return|;
block|}
specifier|public
name|void
name|setJournalLogFiles
parameter_list|(
name|int
name|journalLogFiles
parameter_list|)
block|{
name|this
operator|.
name|journalLogFiles
operator|=
name|journalLogFiles
expr_stmt|;
block|}
specifier|public
name|int
name|getJournalLogFileSize
parameter_list|()
block|{
return|return
name|journalLogFileSize
return|;
block|}
specifier|public
name|void
name|setJournalLogFileSize
parameter_list|(
name|int
name|journalLogFileSize
parameter_list|)
block|{
name|this
operator|.
name|journalLogFileSize
operator|=
name|journalLogFileSize
expr_stmt|;
block|}
specifier|public
name|JDBCPersistenceAdapter
name|getJdbcAdapter
parameter_list|()
block|{
return|return
name|jdbcPersistenceAdapter
return|;
block|}
specifier|public
name|void
name|setJdbcAdapter
parameter_list|(
name|JDBCPersistenceAdapter
name|jdbcAdapter
parameter_list|)
block|{
name|this
operator|.
name|jdbcPersistenceAdapter
operator|=
name|jdbcAdapter
expr_stmt|;
block|}
specifier|public
name|boolean
name|isUseJournal
parameter_list|()
block|{
return|return
name|useJournal
return|;
block|}
specifier|public
name|void
name|setUseJournal
parameter_list|(
name|boolean
name|useJournal
parameter_list|)
block|{
name|this
operator|.
name|useJournal
operator|=
name|useJournal
expr_stmt|;
block|}
specifier|public
name|TaskRunnerFactory
name|getTaskRunnerFactory
parameter_list|()
block|{
if|if
condition|(
name|taskRunnerFactory
operator|==
literal|null
condition|)
block|{
name|taskRunnerFactory
operator|=
operator|new
name|TaskRunnerFactory
argument_list|()
expr_stmt|;
block|}
return|return
name|taskRunnerFactory
return|;
block|}
specifier|public
name|void
name|setTaskRunnerFactory
parameter_list|(
name|TaskRunnerFactory
name|taskRunnerFactory
parameter_list|)
block|{
name|this
operator|.
name|taskRunnerFactory
operator|=
name|taskRunnerFactory
expr_stmt|;
block|}
specifier|public
name|Journal
name|getJournal
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
name|journal
operator|==
literal|null
condition|)
block|{
name|createJournal
argument_list|()
expr_stmt|;
block|}
return|return
name|journal
return|;
block|}
specifier|public
name|void
name|setJournal
parameter_list|(
name|Journal
name|journal
parameter_list|)
block|{
name|this
operator|.
name|journal
operator|=
name|journal
expr_stmt|;
block|}
specifier|public
name|File
name|getJournalArchiveDirectory
parameter_list|()
block|{
if|if
condition|(
name|journalArchiveDirectory
operator|==
literal|null
operator|&&
name|useQuickJournal
condition|)
block|{
name|journalArchiveDirectory
operator|=
operator|new
name|File
argument_list|(
name|getDataDirectory
argument_list|()
argument_list|,
literal|"journal"
argument_list|)
expr_stmt|;
block|}
return|return
name|journalArchiveDirectory
return|;
block|}
specifier|public
name|void
name|setJournalArchiveDirectory
parameter_list|(
name|File
name|journalArchiveDirectory
parameter_list|)
block|{
name|this
operator|.
name|journalArchiveDirectory
operator|=
name|journalArchiveDirectory
expr_stmt|;
block|}
specifier|public
name|boolean
name|isUseQuickJournal
parameter_list|()
block|{
return|return
name|useQuickJournal
return|;
block|}
specifier|public
name|void
name|setUseQuickJournal
parameter_list|(
name|boolean
name|useQuickJournal
parameter_list|)
block|{
name|this
operator|.
name|useQuickJournal
operator|=
name|useQuickJournal
expr_stmt|;
block|}
specifier|public
name|JDBCAdapter
name|getAdapter
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|jdbcPersistenceAdapter
operator|.
name|getAdapter
argument_list|()
return|;
block|}
specifier|public
name|void
name|setAdapter
parameter_list|(
name|JDBCAdapter
name|adapter
parameter_list|)
block|{
name|jdbcPersistenceAdapter
operator|.
name|setAdapter
argument_list|(
name|adapter
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Statements
name|getStatements
parameter_list|()
block|{
return|return
name|jdbcPersistenceAdapter
operator|.
name|getStatements
argument_list|()
return|;
block|}
specifier|public
name|void
name|setStatements
parameter_list|(
name|Statements
name|statements
parameter_list|)
block|{
name|jdbcPersistenceAdapter
operator|.
name|setStatements
argument_list|(
name|statements
argument_list|)
expr_stmt|;
block|}
comment|/**      * @throws IOException      */
specifier|protected
name|void
name|createJournal
parameter_list|()
throws|throws
name|IOException
block|{
name|File
name|journalDir
init|=
operator|new
name|File
argument_list|(
name|getDataDirectory
argument_list|()
argument_list|,
literal|"journal"
argument_list|)
operator|.
name|getCanonicalFile
argument_list|()
decl_stmt|;
name|journal
operator|=
operator|new
name|JournalImpl
argument_list|(
name|journalDir
argument_list|,
name|journalLogFiles
argument_list|,
name|journalLogFileSize
argument_list|,
name|getJournalArchiveDirectory
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

