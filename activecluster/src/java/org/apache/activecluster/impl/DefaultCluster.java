begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Copyright 2004 The Apache Software Foundation  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   * See the License for the specific language governing permissions and   * limitations under the License.   *   **/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activecluster
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Timer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|BytesMessage
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Destination
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|JMSException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MapMessage
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageConsumer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageProducer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|ObjectMessage
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|StreamMessage
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|TextMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activecluster
operator|.
name|Cluster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activecluster
operator|.
name|ClusterListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activecluster
operator|.
name|DestinationMarshaller
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activecluster
operator|.
name|LocalNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activecluster
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activecluster
operator|.
name|election
operator|.
name|ElectionStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|edu
operator|.
name|emory
operator|.
name|mathcs
operator|.
name|backport
operator|.
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * A default implementation of ActiveCluster which uses standard JMS operations  *  * @version $Revision: 1.6 $  */
end_comment

begin_class
specifier|public
class|class
name|DefaultCluster
implements|implements
name|Cluster
block|{
specifier|private
specifier|final
specifier|static
name|Log
name|log
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|DefaultCluster
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|StateServiceImpl
name|stateService
decl_stmt|;
specifier|private
name|LocalNode
name|localNode
decl_stmt|;
specifier|private
name|Destination
name|destination
decl_stmt|;
specifier|private
name|Connection
name|connection
decl_stmt|;
specifier|private
name|Session
name|session
decl_stmt|;
specifier|private
name|MessageProducer
name|producer
decl_stmt|;
specifier|private
name|MessageConsumer
name|consumer
decl_stmt|;
specifier|private
name|Timer
name|timer
decl_stmt|;
specifier|private
name|DestinationMarshaller
name|marshaller
decl_stmt|;
specifier|private
name|AtomicBoolean
name|started
init|=
operator|new
name|AtomicBoolean
argument_list|(
literal|false
argument_list|)
decl_stmt|;
specifier|private
name|Object
name|clusterLock
init|=
operator|new
name|Object
argument_list|()
decl_stmt|;
comment|/**      * Construct this beast      * @param localNode      * @param dataDestination      * @param destination      * @param marshaller      * @param connection      * @param session      * @param producer      * @param timer      * @param inactiveTime      * @throws JMSException      */
specifier|public
name|DefaultCluster
parameter_list|(
specifier|final
name|LocalNode
name|localNode
parameter_list|,
name|Destination
name|dataDestination
parameter_list|,
name|Destination
name|destination
parameter_list|,
name|DestinationMarshaller
name|marshaller
parameter_list|,
name|Connection
name|connection
parameter_list|,
name|Session
name|session
parameter_list|,
name|MessageProducer
name|producer
parameter_list|,
name|Timer
name|timer
parameter_list|,
name|long
name|inactiveTime
parameter_list|)
throws|throws
name|JMSException
block|{
name|this
operator|.
name|localNode
operator|=
name|localNode
expr_stmt|;
name|this
operator|.
name|destination
operator|=
name|destination
expr_stmt|;
name|this
operator|.
name|marshaller
operator|=
name|marshaller
expr_stmt|;
name|this
operator|.
name|connection
operator|=
name|connection
expr_stmt|;
name|this
operator|.
name|session
operator|=
name|session
expr_stmt|;
name|this
operator|.
name|producer
operator|=
name|producer
expr_stmt|;
name|this
operator|.
name|timer
operator|=
name|timer
expr_stmt|;
if|if
condition|(
name|producer
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"No producer specified!"
argument_list|)
throw|;
block|}
comment|// now lets subscribe the service to the updates from the data topic
name|consumer
operator|=
name|session
operator|.
name|createConsumer
argument_list|(
name|dataDestination
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"Creating data consumer on topic: "
operator|+
name|dataDestination
argument_list|)
expr_stmt|;
name|this
operator|.
name|stateService
operator|=
operator|new
name|StateServiceImpl
argument_list|(
name|this
argument_list|,
name|clusterLock
argument_list|,
operator|new
name|Runnable
argument_list|()
block|{
specifier|public
name|void
name|run
parameter_list|()
block|{
if|if
condition|(
name|localNode
operator|instanceof
name|ReplicatedLocalNode
condition|)
block|{
operator|(
operator|(
name|ReplicatedLocalNode
operator|)
name|localNode
operator|)
operator|.
name|pingRemoteNodes
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|,
name|timer
argument_list|,
name|inactiveTime
argument_list|)
expr_stmt|;
name|consumer
operator|.
name|setMessageListener
argument_list|(
operator|new
name|StateConsumer
argument_list|(
name|stateService
argument_list|,
name|marshaller
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addClusterListener
parameter_list|(
name|ClusterListener
name|listener
parameter_list|)
block|{
name|stateService
operator|.
name|addClusterListener
argument_list|(
name|listener
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|removeClusterListener
parameter_list|(
name|ClusterListener
name|listener
parameter_list|)
block|{
name|stateService
operator|.
name|removeClusterListener
argument_list|(
name|listener
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Destination
name|getDestination
parameter_list|()
block|{
return|return
name|destination
return|;
block|}
specifier|public
name|LocalNode
name|getLocalNode
parameter_list|()
block|{
return|return
name|localNode
return|;
block|}
specifier|public
name|Map
name|getNodes
parameter_list|()
block|{
return|return
name|stateService
operator|.
name|getNodes
argument_list|()
return|;
block|}
specifier|public
name|void
name|setElectionStrategy
parameter_list|(
name|ElectionStrategy
name|strategy
parameter_list|)
block|{
name|stateService
operator|.
name|setElectionStrategy
argument_list|(
name|strategy
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|send
parameter_list|(
name|Destination
name|replyTo
parameter_list|,
name|Message
name|message
parameter_list|)
throws|throws
name|JMSException
block|{
name|producer
operator|.
name|send
argument_list|(
name|replyTo
argument_list|,
name|message
argument_list|)
expr_stmt|;
block|}
specifier|public
name|MessageConsumer
name|createConsumer
parameter_list|(
name|Destination
name|destination
parameter_list|)
throws|throws
name|JMSException
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createConsumer
argument_list|(
name|destination
argument_list|)
return|;
block|}
specifier|public
name|MessageConsumer
name|createConsumer
parameter_list|(
name|Destination
name|destination
parameter_list|,
name|String
name|selector
parameter_list|)
throws|throws
name|JMSException
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createConsumer
argument_list|(
name|destination
argument_list|,
name|selector
argument_list|)
return|;
block|}
specifier|public
name|MessageConsumer
name|createConsumer
parameter_list|(
name|Destination
name|destination
parameter_list|,
name|String
name|selector
parameter_list|,
name|boolean
name|noLocal
parameter_list|)
throws|throws
name|JMSException
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createConsumer
argument_list|(
name|destination
argument_list|,
name|selector
argument_list|,
name|noLocal
argument_list|)
return|;
block|}
specifier|public
name|Message
name|createMessage
parameter_list|()
throws|throws
name|JMSException
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createMessage
argument_list|()
return|;
block|}
specifier|public
name|BytesMessage
name|createBytesMessage
parameter_list|()
throws|throws
name|JMSException
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createBytesMessage
argument_list|()
return|;
block|}
specifier|public
name|MapMessage
name|createMapMessage
parameter_list|()
throws|throws
name|JMSException
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createMapMessage
argument_list|()
return|;
block|}
specifier|public
name|ObjectMessage
name|createObjectMessage
parameter_list|()
throws|throws
name|JMSException
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createObjectMessage
argument_list|()
return|;
block|}
specifier|public
name|ObjectMessage
name|createObjectMessage
parameter_list|(
name|Serializable
name|object
parameter_list|)
throws|throws
name|JMSException
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createObjectMessage
argument_list|(
name|object
argument_list|)
return|;
block|}
specifier|public
name|StreamMessage
name|createStreamMessage
parameter_list|()
throws|throws
name|JMSException
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createStreamMessage
argument_list|()
return|;
block|}
specifier|public
name|TextMessage
name|createTextMessage
parameter_list|()
throws|throws
name|JMSException
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createTextMessage
argument_list|()
return|;
block|}
specifier|public
name|TextMessage
name|createTextMessage
parameter_list|(
name|String
name|text
parameter_list|)
throws|throws
name|JMSException
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createTextMessage
argument_list|(
name|text
argument_list|)
return|;
block|}
specifier|public
name|void
name|start
parameter_list|()
throws|throws
name|JMSException
block|{
if|if
condition|(
name|started
operator|.
name|compareAndSet
argument_list|(
literal|false
argument_list|,
literal|true
argument_list|)
condition|)
block|{
name|connection
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|stop
parameter_list|()
throws|throws
name|JMSException
block|{
try|try
block|{
if|if
condition|(
name|localNode
operator|instanceof
name|Service
condition|)
block|{
operator|(
operator|(
name|Service
operator|)
name|localNode
operator|)
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
name|timer
operator|.
name|cancel
argument_list|()
expr_stmt|;
name|session
operator|.
name|close
argument_list|()
expr_stmt|;
name|connection
operator|.
name|stop
argument_list|()
expr_stmt|;
name|connection
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|connection
operator|=
literal|null
expr_stmt|;
name|session
operator|=
literal|null
expr_stmt|;
block|}
block|}
specifier|public
name|boolean
name|waitForClusterToComplete
parameter_list|(
name|int
name|expectedCount
parameter_list|,
name|long
name|timeout
parameter_list|)
throws|throws
name|InterruptedException
block|{
name|timeout
operator|=
name|timeout
operator|>
literal|0
condition|?
name|timeout
else|:
name|Long
operator|.
name|MAX_VALUE
expr_stmt|;
name|long
name|increment
init|=
literal|500
decl_stmt|;
name|increment
operator|=
name|increment
operator|<
name|timeout
condition|?
name|increment
else|:
name|timeout
expr_stmt|;
name|long
name|waitTime
init|=
name|timeout
decl_stmt|;
name|long
name|start
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
synchronized|synchronized
init|(
name|clusterLock
init|)
block|{
while|while
condition|(
name|stateService
operator|.
name|getNodes
argument_list|()
operator|.
name|size
argument_list|()
operator|<
name|expectedCount
operator|&&
name|started
operator|.
name|get
argument_list|()
operator|&&
name|waitTime
operator|>
literal|0
condition|)
block|{
name|clusterLock
operator|.
name|wait
argument_list|(
name|increment
argument_list|)
expr_stmt|;
name|waitTime
operator|=
name|timeout
operator|-
operator|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|-
name|start
operator|)
expr_stmt|;
block|}
block|}
return|return
name|stateService
operator|.
name|getNodes
argument_list|()
operator|.
name|size
argument_list|()
operator|>=
name|expectedCount
return|;
block|}
specifier|protected
name|Session
name|getSession
parameter_list|()
throws|throws
name|JMSException
block|{
if|if
condition|(
name|session
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|JMSException
argument_list|(
literal|"Cannot perform operation, this cluster connection is now closed"
argument_list|)
throw|;
block|}
return|return
name|session
return|;
block|}
comment|/**      * Create a named Destination      * @param name      * @return the Destinatiion       * @throws JMSException      */
specifier|public
name|Destination
name|createDestination
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|JMSException
block|{
name|Destination
name|result
init|=
name|getSession
argument_list|()
operator|.
name|createTopic
argument_list|(
name|name
argument_list|)
decl_stmt|;
return|return
name|result
return|;
block|}
block|}
end_class

end_unit

