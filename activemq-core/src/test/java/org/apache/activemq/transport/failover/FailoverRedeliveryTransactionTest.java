begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|failover
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|PersistenceAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadb
operator|.
name|KahaDBPersistenceAdapter
import|;
end_import

begin_class
specifier|public
class|class
name|FailoverRedeliveryTransactionTest
extends|extends
name|FailoverTransactionTest
block|{
specifier|public
specifier|static
name|Test
name|suite
parameter_list|()
block|{
return|return
name|suite
argument_list|(
name|FailoverRedeliveryTransactionTest
operator|.
name|class
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|configureConnectionFactory
parameter_list|(
name|ActiveMQConnectionFactory
name|factory
parameter_list|)
block|{
name|super
operator|.
name|configureConnectionFactory
argument_list|(
name|factory
argument_list|)
expr_stmt|;
name|factory
operator|.
name|setImmediateAck
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|BrokerService
name|createBroker
parameter_list|(
name|boolean
name|deleteAllMessagesOnStartup
parameter_list|,
name|String
name|bindAddress
parameter_list|)
throws|throws
name|Exception
block|{
name|BrokerService
name|brokerService
init|=
name|super
operator|.
name|createBroker
argument_list|(
name|deleteAllMessagesOnStartup
argument_list|,
name|bindAddress
argument_list|)
decl_stmt|;
name|configurePersistenceAdapter
argument_list|(
name|brokerService
argument_list|)
expr_stmt|;
return|return
name|brokerService
return|;
block|}
specifier|private
name|void
name|configurePersistenceAdapter
parameter_list|(
name|BrokerService
name|brokerService
parameter_list|)
throws|throws
name|IOException
block|{
name|KahaDBPersistenceAdapter
name|kahaDBPersistenceAdapter
init|=
operator|(
name|KahaDBPersistenceAdapter
operator|)
name|brokerService
operator|.
name|getPersistenceAdapter
argument_list|()
decl_stmt|;
name|kahaDBPersistenceAdapter
operator|.
name|setRewriteOnRedelivery
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|PersistenceAdapter
name|setDefaultPersistenceAdapter
parameter_list|(
name|BrokerService
name|broker
parameter_list|)
throws|throws
name|IOException
block|{
name|PersistenceAdapter
name|persistenceAdapter
init|=
name|super
operator|.
name|setDefaultPersistenceAdapter
argument_list|(
name|broker
argument_list|)
decl_stmt|;
name|configurePersistenceAdapter
argument_list|(
name|broker
argument_list|)
expr_stmt|;
return|return
name|persistenceAdapter
return|;
block|}
comment|// no point rerunning these
annotation|@
name|Override
specifier|public
name|void
name|testFailoverProducerCloseBeforeTransaction
parameter_list|()
throws|throws
name|Exception
block|{     }
annotation|@
name|Override
specifier|public
name|void
name|initCombosForTestFailoverCommitReplyLost
parameter_list|()
block|{     }
annotation|@
name|Override
specifier|public
name|void
name|testFailoverCommitReplyLost
parameter_list|()
throws|throws
name|Exception
block|{     }
annotation|@
name|Override
specifier|public
name|void
name|initCombosForTestFailoverSendReplyLost
parameter_list|()
block|{     }
annotation|@
name|Override
specifier|public
name|void
name|testFailoverSendReplyLost
parameter_list|()
throws|throws
name|Exception
block|{     }
annotation|@
name|Override
specifier|public
name|void
name|initCombosForTestFailoverConnectionSendReplyLost
parameter_list|()
block|{     }
annotation|@
name|Override
specifier|public
name|void
name|testFailoverConnectionSendReplyLost
parameter_list|()
throws|throws
name|Exception
block|{     }
annotation|@
name|Override
specifier|public
name|void
name|testFailoverProducerCloseBeforeTransactionFailWhenDisabled
parameter_list|()
throws|throws
name|Exception
block|{     }
annotation|@
name|Override
specifier|public
name|void
name|testFailoverMultipleProducerCloseBeforeTransaction
parameter_list|()
throws|throws
name|Exception
block|{     }
block|}
end_class

end_unit

