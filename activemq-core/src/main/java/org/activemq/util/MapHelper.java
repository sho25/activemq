begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/** *<a href="http://activemq.org">ActiveMQ: The Open Source Message Fabric</a> * * Copyright 2005 (C) LogicBlaze, Inc. http://www.logicblaze.com * * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. * **/
end_comment

begin_package
package|package
name|org
operator|.
name|activemq
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * A bunch of utility methods for working with maps  *  * @version $Revision$  */
end_comment

begin_class
specifier|public
class|class
name|MapHelper
block|{
comment|/**      * Extracts the value from the map and coerces to a String      */
specifier|public
specifier|static
name|String
name|getString
parameter_list|(
name|Map
name|map
parameter_list|,
name|String
name|key
parameter_list|)
block|{
name|Object
name|answer
init|=
name|map
operator|.
name|get
argument_list|(
name|key
argument_list|)
decl_stmt|;
return|return
operator|(
name|answer
operator|!=
literal|null
operator|)
condition|?
name|answer
operator|.
name|toString
argument_list|()
else|:
literal|null
return|;
block|}
comment|/**      * Extracts the value from the map and coerces to an int value      * or returns a default value if one could not be found or coerced      */
specifier|public
specifier|static
name|int
name|getInt
parameter_list|(
name|Map
name|map
parameter_list|,
name|String
name|key
parameter_list|,
name|int
name|defaultValue
parameter_list|)
block|{
name|Object
name|value
init|=
name|map
operator|.
name|get
argument_list|(
name|key
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|instanceof
name|Number
condition|)
block|{
return|return
operator|(
operator|(
name|Number
operator|)
name|value
operator|)
operator|.
name|intValue
argument_list|()
return|;
block|}
elseif|else
if|if
condition|(
name|value
operator|instanceof
name|String
condition|)
block|{
return|return
name|Integer
operator|.
name|parseInt
argument_list|(
operator|(
name|String
operator|)
name|value
argument_list|)
return|;
block|}
return|return
name|defaultValue
return|;
block|}
block|}
end_class

end_unit

