begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|jaas
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_class
class|class
name|PrincipalProperties
block|{
specifier|private
specifier|final
name|Properties
name|principals
decl_stmt|;
specifier|private
specifier|final
name|long
name|reloadTime
decl_stmt|;
name|PrincipalProperties
parameter_list|(
specifier|final
name|String
name|type
parameter_list|,
specifier|final
name|File
name|source
parameter_list|,
specifier|final
name|Logger
name|log
parameter_list|)
block|{
name|Properties
name|props
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|long
name|reloadTime
init|=
literal|0
decl_stmt|;
try|try
block|{
name|load
argument_list|(
name|source
argument_list|,
name|props
argument_list|)
expr_stmt|;
name|reloadTime
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|log
operator|.
name|warn
argument_list|(
literal|"Unable to load "
operator|+
name|type
operator|+
literal|" properties file "
operator|+
name|source
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|reloadTime
operator|=
name|reloadTime
expr_stmt|;
name|this
operator|.
name|principals
operator|=
name|props
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"unchecked"
block|,
literal|"rawtypes"
block|}
argument_list|)
name|Set
argument_list|<
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|entries
parameter_list|()
block|{
return|return
operator|(
name|Set
operator|)
name|principals
operator|.
name|entrySet
argument_list|()
return|;
block|}
name|String
name|getProperty
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|principals
operator|.
name|getProperty
argument_list|(
name|name
argument_list|)
return|;
block|}
name|long
name|getReloadTime
parameter_list|()
block|{
return|return
name|reloadTime
return|;
block|}
specifier|private
name|void
name|load
parameter_list|(
specifier|final
name|File
name|source
parameter_list|,
name|Properties
name|props
parameter_list|)
throws|throws
name|FileNotFoundException
throws|,
name|IOException
block|{
name|FileInputStream
name|in
init|=
operator|new
name|FileInputStream
argument_list|(
name|source
argument_list|)
decl_stmt|;
try|try
block|{
name|props
operator|.
name|load
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|in
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
name|Properties
name|getPrincipals
parameter_list|()
block|{
return|return
name|principals
return|;
block|}
block|}
end_class

end_unit

