begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *   */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|kaha
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ListIterator
import|;
end_import

begin_comment
comment|/**  * @author rajdavies  *   */
end_comment

begin_class
specifier|public
class|class
name|ContainerListIterator
implements|implements
name|ListIterator
block|{
specifier|private
name|ListContainerImpl
name|container
decl_stmt|;
specifier|private
name|ListIterator
name|iterator
decl_stmt|;
specifier|private
name|LocatableItem
name|current
decl_stmt|;
specifier|protected
name|ContainerListIterator
parameter_list|(
name|ListContainerImpl
name|container
parameter_list|,
name|ListIterator
name|iterator
parameter_list|)
block|{
name|this
operator|.
name|container
operator|=
name|container
expr_stmt|;
name|this
operator|.
name|iterator
operator|=
name|iterator
expr_stmt|;
name|this
operator|.
name|current
operator|=
name|container
operator|.
name|internalGet
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
comment|/*      * (non-Javadoc)      *       * @see java.util.ListIterator#hasNext()      */
specifier|public
name|boolean
name|hasNext
parameter_list|()
block|{
return|return
name|iterator
operator|.
name|hasNext
argument_list|()
return|;
block|}
comment|/*      * (non-Javadoc)      *       * @see java.util.ListIterator#next()      */
specifier|public
name|Object
name|next
parameter_list|()
block|{
name|Object
name|result
init|=
literal|null
decl_stmt|;
name|current
operator|=
operator|(
name|LocatableItem
operator|)
name|iterator
operator|.
name|next
argument_list|()
expr_stmt|;
if|if
condition|(
name|current
operator|!=
literal|null
condition|)
block|{
name|result
operator|=
name|container
operator|.
name|getValue
argument_list|(
name|current
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
comment|/*      * (non-Javadoc)      *       * @see java.util.ListIterator#hasPrevious()      */
specifier|public
name|boolean
name|hasPrevious
parameter_list|()
block|{
return|return
name|iterator
operator|.
name|hasPrevious
argument_list|()
return|;
block|}
comment|/*      * (non-Javadoc)      *       * @see java.util.ListIterator#previous()      */
specifier|public
name|Object
name|previous
parameter_list|()
block|{
name|Object
name|result
init|=
literal|null
decl_stmt|;
name|current
operator|=
operator|(
name|LocatableItem
operator|)
name|iterator
operator|.
name|previous
argument_list|()
expr_stmt|;
if|if
condition|(
name|current
operator|!=
literal|null
condition|)
block|{
name|result
operator|=
name|container
operator|.
name|getValue
argument_list|(
name|current
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
comment|/*      * (non-Javadoc)      *       * @see java.util.ListIterator#nextIndex()      */
specifier|public
name|int
name|nextIndex
parameter_list|()
block|{
return|return
name|iterator
operator|.
name|nextIndex
argument_list|()
return|;
block|}
comment|/*      * (non-Javadoc)      *       * @see java.util.ListIterator#previousIndex()      */
specifier|public
name|int
name|previousIndex
parameter_list|()
block|{
return|return
name|iterator
operator|.
name|previousIndex
argument_list|()
return|;
block|}
comment|/*      * (non-Javadoc)      *       * @see java.util.ListIterator#remove()      */
specifier|public
name|void
name|remove
parameter_list|()
block|{
name|iterator
operator|.
name|remove
argument_list|()
expr_stmt|;
if|if
condition|(
name|current
operator|!=
literal|null
condition|)
block|{
name|container
operator|.
name|remove
argument_list|(
name|current
argument_list|)
expr_stmt|;
block|}
block|}
comment|/*      * (non-Javadoc)      *       * @see java.util.ListIterator#set(E)      */
specifier|public
name|void
name|set
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
name|LocatableItem
name|item
init|=
name|container
operator|.
name|internalSet
argument_list|(
name|previousIndex
argument_list|()
operator|+
literal|1
argument_list|,
name|o
argument_list|)
decl_stmt|;
name|iterator
operator|.
name|set
argument_list|(
name|item
argument_list|)
expr_stmt|;
block|}
comment|/*      * (non-Javadoc)      *       * @see java.util.ListIterator#add(E)      */
specifier|public
name|void
name|add
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
name|LocatableItem
name|item
init|=
name|container
operator|.
name|internalAdd
argument_list|(
name|previousIndex
argument_list|()
operator|+
literal|1
argument_list|,
name|o
argument_list|)
decl_stmt|;
name|iterator
operator|.
name|set
argument_list|(
name|item
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

