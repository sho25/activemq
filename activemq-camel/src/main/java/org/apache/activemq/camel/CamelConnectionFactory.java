begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|camel
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|management
operator|.
name|JMSStatsImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|spring
operator|.
name|ActiveMQConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|Transport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContextAware
import|;
end_import

begin_comment
comment|/**  * A JMS ConnectionFactory which resolves non-JMS destinations or instances of  * {@link CamelDestination} to use the {@link CamelContext} to perform smart routing etc  *  *   */
end_comment

begin_class
specifier|public
class|class
name|CamelConnectionFactory
extends|extends
name|ActiveMQConnectionFactory
implements|implements
name|CamelContextAware
block|{
specifier|private
name|CamelContext
name|camelContext
decl_stmt|;
specifier|public
name|CamelConnectionFactory
parameter_list|()
block|{     }
specifier|public
name|CamelContext
name|getCamelContext
parameter_list|()
block|{
return|return
name|camelContext
return|;
block|}
specifier|public
name|void
name|setCamelContext
parameter_list|(
name|CamelContext
name|camelContext
parameter_list|)
block|{
name|this
operator|.
name|camelContext
operator|=
name|camelContext
expr_stmt|;
block|}
comment|// Implementation methods
comment|//-----------------------------------------------------------------------
specifier|protected
name|CamelConnection
name|createActiveMQConnection
parameter_list|(
name|Transport
name|transport
parameter_list|,
name|JMSStatsImpl
name|stats
parameter_list|)
throws|throws
name|Exception
block|{
name|CamelConnection
name|connection
init|=
operator|new
name|CamelConnection
argument_list|(
name|transport
argument_list|,
name|getClientIdGenerator
argument_list|()
argument_list|,
name|getConnectionIdGenerator
argument_list|()
argument_list|,
name|stats
argument_list|)
decl_stmt|;
name|CamelContext
name|context
init|=
name|getCamelContext
argument_list|()
decl_stmt|;
if|if
condition|(
name|context
operator|!=
literal|null
condition|)
block|{
name|connection
operator|.
name|setCamelContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
return|return
name|connection
return|;
block|}
block|}
end_class

end_unit

