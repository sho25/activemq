begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|usecases
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQConnection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQMessageConsumer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|JmsMultipleBrokersTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ActiveMQQueue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|core
operator|.
name|io
operator|.
name|ClassPathResource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|ConnectionFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageProducer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|TemporaryQueue
import|;
end_import

begin_class
specifier|public
class|class
name|TwoSecureBrokerRequestReplyTest
extends|extends
name|JmsMultipleBrokersTestSupport
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|TwoSecureBrokerRequestReplyTest
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setAutoFail
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|createBroker
argument_list|(
operator|new
name|ClassPathResource
argument_list|(
literal|"org/apache/activemq/usecases/sender-secured.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|createBroker
argument_list|(
operator|new
name|ClassPathResource
argument_list|(
literal|"org/apache/activemq/usecases/receiver-secured.xml"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testRequestReply
parameter_list|()
throws|throws
name|Exception
block|{
name|ActiveMQQueue
name|requestReplyDest
init|=
operator|new
name|ActiveMQQueue
argument_list|(
literal|"RequestReply"
argument_list|)
decl_stmt|;
name|startAllBrokers
argument_list|()
expr_stmt|;
name|waitForBridgeFormation
argument_list|()
expr_stmt|;
name|waitForMinTopicRegionConsumerCount
argument_list|(
literal|"sender"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|waitForMinTopicRegionConsumerCount
argument_list|(
literal|"receiver"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|ConnectionFactory
name|factory
init|=
name|getConnectionFactory
argument_list|(
literal|"sender"
argument_list|)
decl_stmt|;
name|ActiveMQConnection
name|conn
init|=
operator|(
name|ActiveMQConnection
operator|)
name|factory
operator|.
name|createConnection
argument_list|(
literal|"system"
argument_list|,
literal|"manager"
argument_list|)
decl_stmt|;
name|conn
operator|.
name|setWatchTopicAdvisories
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|conn
operator|.
name|start
argument_list|()
expr_stmt|;
name|Session
name|session
init|=
name|conn
operator|.
name|createSession
argument_list|(
literal|false
argument_list|,
name|Session
operator|.
name|AUTO_ACKNOWLEDGE
argument_list|)
decl_stmt|;
name|ConnectionFactory
name|replyFactory
init|=
name|getConnectionFactory
argument_list|(
literal|"receiver"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2000
condition|;
name|i
operator|++
control|)
block|{
name|TemporaryQueue
name|tempDest
init|=
name|session
operator|.
name|createTemporaryQueue
argument_list|()
decl_stmt|;
name|MessageProducer
name|producer
init|=
name|session
operator|.
name|createProducer
argument_list|(
name|requestReplyDest
argument_list|)
decl_stmt|;
name|javax
operator|.
name|jms
operator|.
name|Message
name|message
init|=
name|session
operator|.
name|createTextMessage
argument_list|(
literal|"req-"
operator|+
name|i
argument_list|)
decl_stmt|;
name|message
operator|.
name|setJMSReplyTo
argument_list|(
name|tempDest
argument_list|)
expr_stmt|;
name|ActiveMQMessageConsumer
name|consumer
init|=
operator|(
name|ActiveMQMessageConsumer
operator|)
name|session
operator|.
name|createConsumer
argument_list|(
name|tempDest
argument_list|)
decl_stmt|;
name|producer
operator|.
name|send
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|ActiveMQConnection
name|replyConnection
init|=
operator|(
name|ActiveMQConnection
operator|)
name|replyFactory
operator|.
name|createConnection
argument_list|(
literal|"system"
argument_list|,
literal|"manager"
argument_list|)
decl_stmt|;
name|replyConnection
operator|.
name|setWatchTopicAdvisories
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|replyConnection
operator|.
name|start
argument_list|()
expr_stmt|;
name|Session
name|replySession
init|=
name|replyConnection
operator|.
name|createSession
argument_list|(
literal|false
argument_list|,
name|Session
operator|.
name|AUTO_ACKNOWLEDGE
argument_list|)
decl_stmt|;
name|ActiveMQMessageConsumer
name|replyConsumer
init|=
operator|(
name|ActiveMQMessageConsumer
operator|)
name|replySession
operator|.
name|createConsumer
argument_list|(
name|requestReplyDest
argument_list|)
decl_stmt|;
name|javax
operator|.
name|jms
operator|.
name|Message
name|msg
init|=
name|replyConsumer
operator|.
name|receive
argument_list|(
literal|10000
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"request message not null: "
operator|+
name|i
argument_list|,
name|msg
argument_list|)
expr_stmt|;
name|MessageProducer
name|replyProducer
init|=
name|replySession
operator|.
name|createProducer
argument_list|(
name|msg
operator|.
name|getJMSReplyTo
argument_list|()
argument_list|)
decl_stmt|;
name|replyProducer
operator|.
name|send
argument_list|(
name|session
operator|.
name|createTextMessage
argument_list|(
literal|"reply-"
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|replyConnection
operator|.
name|close
argument_list|()
expr_stmt|;
name|javax
operator|.
name|jms
operator|.
name|Message
name|reply
init|=
name|consumer
operator|.
name|receive
argument_list|(
literal|10000
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"reply message : "
operator|+
name|i
operator|+
literal|", to: "
operator|+
name|tempDest
operator|+
literal|", by consumer:"
operator|+
name|consumer
operator|.
name|getConsumerId
argument_list|()
argument_list|,
name|reply
argument_list|)
expr_stmt|;
name|consumer
operator|.
name|close
argument_list|()
expr_stmt|;
name|tempDest
operator|.
name|delete
argument_list|()
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"message #"
operator|+
name|i
operator|+
literal|" processed"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

