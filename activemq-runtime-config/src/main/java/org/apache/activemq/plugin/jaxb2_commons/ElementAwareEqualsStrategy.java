begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|plugin
operator|.
name|jaxb2_commons
package|;
end_package

begin_import
import|import
name|org
operator|.
name|jvnet
operator|.
name|jaxb2_commons
operator|.
name|lang
operator|.
name|JAXBEqualsStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jvnet
operator|.
name|jaxb2_commons
operator|.
name|locator
operator|.
name|ObjectLocator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_comment
comment|/**  * Ensure uparsed elements like spring beans referenced in the  * xml configuration (broker plugins for example) can be  * examined for equality  */
end_comment

begin_class
specifier|public
class|class
name|ElementAwareEqualsStrategy
extends|extends
name|JAXBEqualsStrategy
block|{
annotation|@
name|Override
specifier|protected
name|boolean
name|equalsInternal
parameter_list|(
name|ObjectLocator
name|leftLocator
parameter_list|,
name|ObjectLocator
name|rightLocator
parameter_list|,
name|Object
name|lhs
parameter_list|,
name|Object
name|rhs
parameter_list|)
block|{
if|if
condition|(
name|lhs
operator|instanceof
name|Element
operator|&&
name|rhs
operator|instanceof
name|Element
condition|)
block|{
specifier|final
name|Element
name|left
init|=
operator|(
name|Element
operator|)
name|lhs
decl_stmt|;
specifier|final
name|Element
name|right
init|=
operator|(
name|Element
operator|)
name|rhs
decl_stmt|;
return|return
name|left
operator|.
name|isEqualNode
argument_list|(
name|right
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|super
operator|.
name|equalsInternal
argument_list|(
name|leftLocator
argument_list|,
name|rightLocator
argument_list|,
name|lhs
argument_list|,
name|rhs
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

