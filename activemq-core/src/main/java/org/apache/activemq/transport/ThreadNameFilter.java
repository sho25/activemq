begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * The thread name filter, modifies the name of the thread during the invocation to a transport.  * It appends the remote address, so that a call stuck in a transport method such as socketWrite0  * will have the destination information in the thread name.  * This is extremely useful for thread dumps when debugging.  * To enable this transport, in the transport URI, simpley add<br/>  *<code>transport.threadName</code>.<br/>  * For example:</br>  *<pre><code>  *&lt;transportConnector   *     name=&quot;tcp1&quot;   *     uri=&quot;tcp://127.0.0.1:61616?transport.soTimeout=10000&amp;transport.threadName"  * /&gt;  *</code></pre>  * @author Filip Hanik  *  */
end_comment

begin_class
specifier|public
class|class
name|ThreadNameFilter
extends|extends
name|TransportFilter
block|{
specifier|public
name|ThreadNameFilter
parameter_list|(
name|Transport
name|next
parameter_list|)
block|{
name|super
argument_list|(
name|next
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|oneway
parameter_list|(
name|Object
name|command
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|address
init|=
operator|(
name|next
operator|!=
literal|null
condition|?
name|next
operator|.
name|getRemoteAddress
argument_list|()
else|:
literal|null
operator|)
decl_stmt|;
if|if
condition|(
name|address
operator|!=
literal|null
condition|)
block|{
name|String
name|name
init|=
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getName
argument_list|()
decl_stmt|;
try|try
block|{
name|String
name|sendname
init|=
name|name
operator|+
literal|" - SendTo:"
operator|+
name|address
decl_stmt|;
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|setName
argument_list|(
name|sendname
argument_list|)
expr_stmt|;
name|super
operator|.
name|oneway
argument_list|(
name|command
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|setName
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|super
operator|.
name|oneway
argument_list|(
name|command
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

