begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|spring
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|support
operator|.
name|ClassPathXmlApplicationContext
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_class
specifier|public
class|class
name|SpringTest
extends|extends
name|TestCase
block|{
comment|/**      * Make sure that brokers are being pooled properly.      *      * @throws Exception      */
specifier|public
name|void
name|testSenderWithSpringXmlEmbeddedPooledBrokerConfiguredViaXml
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|config
init|=
literal|"spring-embedded-pooled.xml"
decl_stmt|;
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|setContextClassLoader
argument_list|(
name|SpringTest
operator|.
name|class
operator|.
name|getClassLoader
argument_list|()
argument_list|)
expr_stmt|;
name|ClassPathXmlApplicationContext
name|context1
init|=
operator|new
name|ClassPathXmlApplicationContext
argument_list|(
name|config
argument_list|)
decl_stmt|;
name|BrokerService
name|bs1
init|=
operator|(
name|BrokerService
operator|)
name|context1
operator|.
name|getBean
argument_list|(
literal|"broker1"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|bs1
argument_list|)
expr_stmt|;
name|BrokerService
name|bs2
init|=
operator|(
name|BrokerService
operator|)
name|context1
operator|.
name|getBean
argument_list|(
literal|"broker2"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|bs1
argument_list|)
expr_stmt|;
comment|// It should be the same broker;
name|assertEquals
argument_list|(
name|bs1
argument_list|,
name|bs2
argument_list|)
expr_stmt|;
comment|// Even if we load up another context, it should still be the same broker.
name|ClassPathXmlApplicationContext
name|context2
init|=
operator|new
name|ClassPathXmlApplicationContext
argument_list|(
name|config
argument_list|)
decl_stmt|;
name|BrokerService
name|bs3
init|=
operator|(
name|BrokerService
operator|)
name|context2
operator|.
name|getBean
argument_list|(
literal|"broker1"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|bs3
argument_list|)
expr_stmt|;
name|BrokerService
name|bs4
init|=
operator|(
name|BrokerService
operator|)
name|context2
operator|.
name|getBean
argument_list|(
literal|"broker2"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|bs4
argument_list|)
expr_stmt|;
comment|// It should be the same broker;
name|assertEquals
argument_list|(
name|bs1
argument_list|,
name|bs3
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|bs1
argument_list|,
name|bs4
argument_list|)
expr_stmt|;
comment|// And it should be started.
name|assertTrue
argument_list|(
name|bs1
operator|.
name|isStarted
argument_list|()
argument_list|)
expr_stmt|;
comment|// should still be started asfter the 2nd context closes.
name|context2
operator|.
name|close
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|bs1
operator|.
name|isStarted
argument_list|()
argument_list|)
expr_stmt|;
comment|// Should stop once all contexts close.
name|context1
operator|.
name|close
argument_list|()
expr_stmt|;
name|assertFalse
argument_list|(
name|bs1
operator|.
name|isStarted
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

