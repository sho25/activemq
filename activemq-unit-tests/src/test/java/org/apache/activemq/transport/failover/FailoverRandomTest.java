begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|failover
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQConnection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerService
import|;
end_import

begin_class
specifier|public
class|class
name|FailoverRandomTest
extends|extends
name|TestCase
block|{
name|BrokerService
name|brokerA
decl_stmt|,
name|brokerB
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|brokerA
operator|=
name|createBroker
argument_list|(
literal|"A"
argument_list|)
expr_stmt|;
name|brokerB
operator|=
name|createBroker
argument_list|(
literal|"B"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|brokerA
operator|.
name|stop
argument_list|()
expr_stmt|;
name|brokerB
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|String
name|getBrokerUrl
parameter_list|()
block|{
return|return
literal|"tcp://localhost:0"
return|;
block|}
specifier|private
name|BrokerService
name|createBroker
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|Exception
block|{
name|BrokerService
name|broker
init|=
operator|new
name|BrokerService
argument_list|()
decl_stmt|;
name|broker
operator|.
name|setBrokerName
argument_list|(
literal|"Broker"
operator|+
name|name
argument_list|)
expr_stmt|;
name|broker
operator|.
name|addConnector
argument_list|(
name|getBrokerUrl
argument_list|()
argument_list|)
expr_stmt|;
name|broker
operator|.
name|getManagementContext
argument_list|()
operator|.
name|setCreateConnector
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|broker
operator|.
name|setPersistent
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|broker
operator|.
name|setUseJmx
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|broker
operator|.
name|start
argument_list|()
expr_stmt|;
return|return
name|broker
return|;
block|}
specifier|public
name|void
name|testRandomConnections
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|failoverUrl
init|=
literal|"failover:("
operator|+
name|brokerA
operator|.
name|getTransportConnectors
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getConnectUri
argument_list|()
operator|+
literal|","
operator|+
name|brokerB
operator|.
name|getTransportConnectors
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getConnectUri
argument_list|()
operator|+
literal|")"
decl_stmt|;
name|ActiveMQConnectionFactory
name|cf
init|=
operator|new
name|ActiveMQConnectionFactory
argument_list|(
name|failoverUrl
argument_list|)
decl_stmt|;
name|ActiveMQConnection
name|connection
init|=
operator|(
name|ActiveMQConnection
operator|)
name|cf
operator|.
name|createConnection
argument_list|()
decl_stmt|;
name|connection
operator|.
name|start
argument_list|()
expr_stmt|;
name|String
name|brokerName1
init|=
name|connection
operator|.
name|getBrokerName
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|brokerName1
argument_list|)
expr_stmt|;
name|connection
operator|.
name|close
argument_list|()
expr_stmt|;
name|String
name|brokerName2
init|=
name|brokerName1
decl_stmt|;
name|int
name|attempts
init|=
literal|40
decl_stmt|;
while|while
condition|(
name|brokerName1
operator|.
name|equals
argument_list|(
name|brokerName2
argument_list|)
operator|&&
name|attempts
operator|--
operator|>
literal|0
condition|)
block|{
name|connection
operator|=
operator|(
name|ActiveMQConnection
operator|)
name|cf
operator|.
name|createConnection
argument_list|()
expr_stmt|;
name|connection
operator|.
name|start
argument_list|()
expr_stmt|;
name|brokerName2
operator|=
name|connection
operator|.
name|getBrokerName
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|brokerName2
argument_list|)
expr_stmt|;
name|connection
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|brokerName1
operator|+
literal|"!="
operator|+
name|brokerName2
argument_list|,
operator|!
name|brokerName1
operator|.
name|equals
argument_list|(
name|brokerName2
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

