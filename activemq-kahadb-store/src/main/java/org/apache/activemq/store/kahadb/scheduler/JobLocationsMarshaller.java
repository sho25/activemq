begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadb
operator|.
name|scheduler
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadb
operator|.
name|disk
operator|.
name|util
operator|.
name|VariableMarshaller
import|;
end_import

begin_comment
comment|/**  * A VariableMarshaller instance that performs the read and write of a list of  * JobLocation objects using the JobLocation's built in read and write methods.  */
end_comment

begin_class
class|class
name|JobLocationsMarshaller
extends|extends
name|VariableMarshaller
argument_list|<
name|List
argument_list|<
name|JobLocation
argument_list|>
argument_list|>
block|{
specifier|static
name|JobLocationsMarshaller
name|INSTANCE
init|=
operator|new
name|JobLocationsMarshaller
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|JobLocation
argument_list|>
name|readPayload
parameter_list|(
name|DataInput
name|dataIn
parameter_list|)
throws|throws
name|IOException
block|{
name|List
argument_list|<
name|JobLocation
argument_list|>
name|result
init|=
operator|new
name|ArrayList
argument_list|<
name|JobLocation
argument_list|>
argument_list|()
decl_stmt|;
name|int
name|size
init|=
name|dataIn
operator|.
name|readInt
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|JobLocation
name|jobLocation
init|=
operator|new
name|JobLocation
argument_list|()
decl_stmt|;
name|jobLocation
operator|.
name|readExternal
argument_list|(
name|dataIn
argument_list|)
expr_stmt|;
name|result
operator|.
name|add
argument_list|(
name|jobLocation
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|writePayload
parameter_list|(
name|List
argument_list|<
name|JobLocation
argument_list|>
name|value
parameter_list|,
name|DataOutput
name|dataOut
parameter_list|)
throws|throws
name|IOException
block|{
name|dataOut
operator|.
name|writeInt
argument_list|(
name|value
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|JobLocation
name|jobLocation
range|:
name|value
control|)
block|{
name|jobLocation
operator|.
name|writeExternal
argument_list|(
name|dataOut
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

