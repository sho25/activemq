begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQConnectionFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|InvalidClientIDException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicBoolean
import|;
end_import

begin_class
specifier|public
class|class
name|LinkStealingTest
extends|extends
name|TestCase
block|{
specifier|protected
name|BrokerService
name|brokerService
decl_stmt|;
specifier|protected
name|int
name|timeOutInSeconds
init|=
literal|10
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|brokerService
operator|=
operator|new
name|BrokerService
argument_list|()
expr_stmt|;
name|brokerService
operator|.
name|setPersistent
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|brokerService
operator|!=
literal|null
condition|)
block|{
name|brokerService
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testStealLinkFails
parameter_list|()
throws|throws
name|Exception
block|{
name|brokerService
operator|.
name|addConnector
argument_list|(
name|ActiveMQConnectionFactory
operator|.
name|DEFAULT_BROKER_BIND_URL
argument_list|)
expr_stmt|;
name|brokerService
operator|.
name|start
argument_list|()
expr_stmt|;
specifier|final
name|String
name|clientID
init|=
literal|"ThisIsAClientId"
decl_stmt|;
name|ActiveMQConnectionFactory
name|factory
init|=
operator|new
name|ActiveMQConnectionFactory
argument_list|(
name|ActiveMQConnectionFactory
operator|.
name|DEFAULT_BROKER_BIND_URL
argument_list|)
decl_stmt|;
name|Connection
name|connection1
init|=
name|factory
operator|.
name|createConnection
argument_list|()
decl_stmt|;
name|connection1
operator|.
name|setClientID
argument_list|(
name|clientID
argument_list|)
expr_stmt|;
name|connection1
operator|.
name|start
argument_list|()
expr_stmt|;
name|AtomicBoolean
name|exceptionFlag
init|=
operator|new
name|AtomicBoolean
argument_list|()
decl_stmt|;
try|try
block|{
name|Connection
name|connection2
init|=
name|factory
operator|.
name|createConnection
argument_list|()
decl_stmt|;
name|connection2
operator|.
name|setClientID
argument_list|(
name|clientID
argument_list|)
expr_stmt|;
name|connection2
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InvalidClientIDException
name|e
parameter_list|)
block|{
name|exceptionFlag
operator|.
name|set
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|exceptionFlag
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testStealLinkSuccess
parameter_list|()
throws|throws
name|Exception
block|{
name|brokerService
operator|.
name|addConnector
argument_list|(
name|ActiveMQConnectionFactory
operator|.
name|DEFAULT_BROKER_BIND_URL
operator|+
literal|"?allowLinkStealing=true"
argument_list|)
expr_stmt|;
name|brokerService
operator|.
name|start
argument_list|()
expr_stmt|;
specifier|final
name|String
name|clientID
init|=
literal|"ThisIsAClientId"
decl_stmt|;
name|ActiveMQConnectionFactory
name|factory
init|=
operator|new
name|ActiveMQConnectionFactory
argument_list|(
name|ActiveMQConnectionFactory
operator|.
name|DEFAULT_BROKER_BIND_URL
argument_list|)
decl_stmt|;
name|Connection
name|connection1
init|=
name|factory
operator|.
name|createConnection
argument_list|()
decl_stmt|;
name|connection1
operator|.
name|setClientID
argument_list|(
name|clientID
argument_list|)
expr_stmt|;
name|connection1
operator|.
name|start
argument_list|()
expr_stmt|;
name|AtomicBoolean
name|exceptionFlag
init|=
operator|new
name|AtomicBoolean
argument_list|()
decl_stmt|;
try|try
block|{
name|Connection
name|connection2
init|=
name|factory
operator|.
name|createConnection
argument_list|()
decl_stmt|;
name|connection2
operator|.
name|setClientID
argument_list|(
name|clientID
argument_list|)
expr_stmt|;
name|connection2
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InvalidClientIDException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|exceptionFlag
operator|.
name|set
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
name|assertFalse
argument_list|(
name|exceptionFlag
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

