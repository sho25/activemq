begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|com
operator|.
name|panacya
operator|.
name|platform
operator|.
name|service
operator|.
name|bus
operator|.
name|mdb
package|;
end_package

begin_import
import|import
name|com
operator|.
name|panacya
operator|.
name|platform
operator|.
name|service
operator|.
name|bus
operator|.
name|sender
operator|.
name|SenderClient
import|;
end_import

begin_import
import|import
name|com
operator|.
name|panacya
operator|.
name|platform
operator|.
name|service
operator|.
name|bus
operator|.
name|sender
operator|.
name|SenderException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ejb
operator|.
name|CreateException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ejb
operator|.
name|MessageDrivenBean
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ejb
operator|.
name|MessageDrivenContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|JMSException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageListener
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|TextMessage
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|NamingException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|rmi
operator|.
name|RemoteException
import|;
end_import

begin_comment
comment|/**  * @author<a href="mailto:michael.gaffney@panacya.com">Michael Gaffney</a>  */
end_comment

begin_class
specifier|public
class|class
name|SimpleMessageReceiverBean
implements|implements
name|MessageDrivenBean
implements|,
name|MessageListener
block|{
specifier|private
specifier|static
specifier|final
name|String
name|SENDER_NAME
init|=
literal|"java:comp/env/ejb/Sender"
decl_stmt|;
specifier|private
name|Log
name|_log
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|SimpleMessageReceiverBean
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|MessageDrivenContext
name|context
decl_stmt|;
specifier|public
name|SimpleMessageReceiverBean
parameter_list|()
block|{
if|if
condition|(
name|_log
operator|.
name|isInfoEnabled
argument_list|()
condition|)
block|{
name|_log
operator|.
name|info
argument_list|(
literal|"SimpleMessageReceiverBean.SimpleMessageReceiverBean"
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|onMessage
parameter_list|(
name|Message
name|message
parameter_list|)
block|{
if|if
condition|(
name|_log
operator|.
name|isInfoEnabled
argument_list|()
condition|)
block|{
name|_log
operator|.
name|info
argument_list|(
literal|"SimpleMessageReceiverBean.onMessage"
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|handleMessage
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JMSException
name|e
parameter_list|)
block|{
name|_log
operator|.
name|error
argument_list|(
name|e
operator|.
name|toString
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NamingException
name|e
parameter_list|)
block|{
name|_log
operator|.
name|error
argument_list|(
name|e
operator|.
name|toString
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RemoteException
name|e
parameter_list|)
block|{
name|_log
operator|.
name|error
argument_list|(
name|e
operator|.
name|toString
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CreateException
name|e
parameter_list|)
block|{
name|_log
operator|.
name|error
argument_list|(
name|e
operator|.
name|toString
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SenderException
name|e
parameter_list|)
block|{
name|_log
operator|.
name|error
argument_list|(
name|e
operator|.
name|toString
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|handleMessage
parameter_list|(
name|Message
name|message
parameter_list|)
throws|throws
name|JMSException
throws|,
name|NamingException
throws|,
name|RemoteException
throws|,
name|SenderException
throws|,
name|CreateException
block|{
if|if
condition|(
name|message
operator|instanceof
name|TextMessage
condition|)
block|{
name|TextMessage
name|textMessage
init|=
operator|(
name|TextMessage
operator|)
name|message
decl_stmt|;
if|if
condition|(
name|_log
operator|.
name|isInfoEnabled
argument_list|()
condition|)
block|{
name|_log
operator|.
name|info
argument_list|(
literal|"Message received: "
operator|+
name|textMessage
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|send
argument_list|(
name|textMessage
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|_log
operator|.
name|isInfoEnabled
argument_list|()
condition|)
block|{
name|_log
operator|.
name|info
argument_list|(
literal|"Unknown message type received: "
operator|+
name|message
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|send
argument_list|(
literal|"Unknown message type: "
operator|+
name|message
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|ejbRemove
parameter_list|()
block|{
if|if
condition|(
name|_log
operator|.
name|isInfoEnabled
argument_list|()
condition|)
block|{
name|_log
operator|.
name|info
argument_list|(
literal|"SimpleMessageReceiverBean.ejbRemove"
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|setMessageDrivenContext
parameter_list|(
name|MessageDrivenContext
name|messageDrivenContext
parameter_list|)
block|{
if|if
condition|(
name|_log
operator|.
name|isInfoEnabled
argument_list|()
condition|)
block|{
name|_log
operator|.
name|info
argument_list|(
literal|"SimpleMessageReceiverBean.setMessageDrivenContext"
argument_list|)
expr_stmt|;
block|}
name|context
operator|=
name|messageDrivenContext
expr_stmt|;
block|}
specifier|public
name|void
name|ejbCreate
parameter_list|()
block|{
if|if
condition|(
name|_log
operator|.
name|isInfoEnabled
argument_list|()
condition|)
block|{
name|_log
operator|.
name|info
argument_list|(
literal|"SimpleMessageReceiverBean.ejbCreate"
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|send
parameter_list|(
name|String
name|recMessage
parameter_list|)
throws|throws
name|NamingException
throws|,
name|RemoteException
throws|,
name|CreateException
throws|,
name|SenderException
block|{
name|sendToEJB
argument_list|(
name|recMessage
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|sendToEJB
parameter_list|(
name|String
name|recMessage
parameter_list|)
throws|throws
name|NamingException
throws|,
name|RemoteException
throws|,
name|CreateException
throws|,
name|SenderException
block|{
name|SenderClient
name|senderClient
init|=
operator|new
name|SenderClient
argument_list|(
name|SENDER_NAME
argument_list|)
decl_stmt|;
name|senderClient
operator|.
name|sendMessage
argument_list|(
name|recMessage
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

