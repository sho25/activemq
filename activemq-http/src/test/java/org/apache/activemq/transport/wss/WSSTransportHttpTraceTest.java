begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|wss
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|http
operator|.
name|HttpTraceTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|ws
operator|.
name|WSTransportHttpTraceTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|util
operator|.
name|ssl
operator|.
name|SslContextFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|Parameterized
operator|.
name|class
argument_list|)
specifier|public
class|class
name|WSSTransportHttpTraceTest
extends|extends
name|WSTransportHttpTraceTest
block|{
specifier|public
name|WSSTransportHttpTraceTest
parameter_list|(
name|String
name|enableTraceParam
parameter_list|,
name|int
name|expectedStatus
parameter_list|)
block|{
name|super
argument_list|(
name|enableTraceParam
argument_list|,
name|expectedStatus
argument_list|)
expr_stmt|;
block|}
comment|/**      * This tests whether the TRACE method is enabled or not      * @throws Exception      */
annotation|@
name|Override
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|10000
argument_list|)
specifier|public
name|void
name|testHttpTraceEnabled
parameter_list|()
throws|throws
name|Exception
block|{
name|SslContextFactory
name|factory
init|=
operator|new
name|SslContextFactory
argument_list|()
decl_stmt|;
name|factory
operator|.
name|setSslContext
argument_list|(
name|broker
operator|.
name|getSslContext
argument_list|()
operator|.
name|getSSLContext
argument_list|()
argument_list|)
expr_stmt|;
name|HttpTraceTestSupport
operator|.
name|testHttpTraceEnabled
argument_list|(
literal|"https://127.0.0.1:61623"
argument_list|,
name|expectedStatus
argument_list|,
name|factory
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|String
name|getWSConnectorURI
parameter_list|()
block|{
name|String
name|uri
init|=
literal|"wss://127.0.0.1:61623?websocket.maxTextMessageSize=99999&transport.maxIdleTime=1001"
decl_stmt|;
name|uri
operator|=
name|enableTraceParam
operator|!=
literal|null
condition|?
name|uri
operator|+
literal|"&"
operator|+
name|enableTraceParam
else|:
name|uri
expr_stmt|;
return|return
name|uri
return|;
block|}
block|}
end_class

end_unit

