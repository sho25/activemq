begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|kahadb
operator|.
name|replication
operator|.
name|blaze
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CopyOnWriteArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicBoolean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activeblaze
operator|.
name|cluster
operator|.
name|BlazeClusterGroupChannel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activeblaze
operator|.
name|cluster
operator|.
name|BlazeClusterGroupChannelFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activeblaze
operator|.
name|cluster
operator|.
name|BlazeClusterGroupConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activeblaze
operator|.
name|cluster
operator|.
name|MasterChangedListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activeblaze
operator|.
name|group
operator|.
name|Member
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activeblaze
operator|.
name|group
operator|.
name|MemberChangedListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|kahadb
operator|.
name|replication
operator|.
name|ClusterListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|kahadb
operator|.
name|replication
operator|.
name|ClusterState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|kahadb
operator|.
name|replication
operator|.
name|ClusterStateManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|kahadb
operator|.
name|replication
operator|.
name|pb
operator|.
name|PBClusterNodeStatus
import|;
end_import

begin_comment
comment|/**  *   * @author rajdavies  * @org.apache.xbean.XBean element="blazeCluster"  */
end_comment

begin_class
specifier|public
class|class
name|BlazeClusterStateManager
extends|extends
name|BlazeClusterGroupConfiguration
implements|implements
name|ClusterStateManager
implements|,
name|MemberChangedListener
implements|,
name|MasterChangedListener
block|{
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|BlazeClusterStateManager
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|BlazeClusterGroupChannel
name|channel
decl_stmt|;
specifier|private
name|AtomicBoolean
name|started
init|=
operator|new
name|AtomicBoolean
argument_list|()
decl_stmt|;
specifier|private
name|ClusterState
name|clusterState
decl_stmt|;
specifier|private
name|String
name|localMemberName
decl_stmt|;
specifier|private
name|PBClusterNodeStatus
name|status
decl_stmt|;
specifier|final
specifier|private
name|List
argument_list|<
name|ClusterListener
argument_list|>
name|listeners
init|=
operator|new
name|CopyOnWriteArrayList
argument_list|<
name|ClusterListener
argument_list|>
argument_list|()
decl_stmt|;
comment|/**      * @param listener      * @see org.apache.kahadb.replication.ClusterStateManager#addListener(org.apache.kahadb.replication.ClusterListener)      */
specifier|public
name|void
name|addListener
parameter_list|(
name|ClusterListener
name|listener
parameter_list|)
block|{
name|this
operator|.
name|listeners
operator|.
name|add
argument_list|(
name|listener
argument_list|)
expr_stmt|;
name|initializeChannel
argument_list|()
expr_stmt|;
name|fireClusterChange
argument_list|()
expr_stmt|;
block|}
comment|/**      * @param node      * @see org.apache.kahadb.replication.ClusterStateManager#addMember(java.lang.String)      */
specifier|public
name|void
name|addMember
parameter_list|(
name|String
name|node
parameter_list|)
block|{
name|this
operator|.
name|localMemberName
operator|=
name|node
expr_stmt|;
name|initializeChannel
argument_list|()
expr_stmt|;
block|}
comment|/**      * @param listener      * @see org.apache.kahadb.replication.ClusterStateManager#removeListener(org.apache.kahadb.replication.ClusterListener)      */
specifier|public
name|void
name|removeListener
parameter_list|(
name|ClusterListener
name|listener
parameter_list|)
block|{
name|this
operator|.
name|listeners
operator|.
name|remove
argument_list|(
name|listener
argument_list|)
expr_stmt|;
block|}
comment|/**      * @param node      * @see org.apache.kahadb.replication.ClusterStateManager#removeMember(java.lang.String)      */
specifier|public
name|void
name|removeMember
parameter_list|(
name|String
name|node
parameter_list|)
block|{     }
comment|/**      * @param status      * @see org.apache.kahadb.replication.ClusterStateManager#setMemberStatus(org.apache.kahadb.replication.pb.PBClusterNodeStatus)      */
specifier|public
name|void
name|setMemberStatus
parameter_list|(
name|PBClusterNodeStatus
name|status
parameter_list|)
block|{
if|if
condition|(
name|status
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|status
operator|=
name|status
expr_stmt|;
name|setMasterWeight
argument_list|(
name|status
operator|.
name|getState
argument_list|()
operator|.
name|getNumber
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|channel
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|channel
operator|.
name|getConfiguration
argument_list|()
operator|.
name|setMasterWeight
argument_list|(
name|getMasterWeight
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|this
operator|.
name|channel
operator|.
name|waitForElection
argument_list|(
name|getAwaitGroupTimeout
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Wait for Election Failed"
argument_list|)
expr_stmt|;
block|}
block|}
name|processClusterStateChange
argument_list|()
expr_stmt|;
block|}
block|}
comment|/**      * @param arg0      * @see org.apache.activeblaze.group.MemberChangedListener#memberStarted(org.apache.activeblaze.group.Member)      */
specifier|public
name|void
name|memberStarted
parameter_list|(
name|Member
name|arg0
parameter_list|)
block|{
name|processClusterStateChange
argument_list|()
expr_stmt|;
block|}
comment|/**      * @param arg0      * @see org.apache.activeblaze.group.MemberChangedListener#memberStopped(org.apache.activeblaze.group.Member)      */
specifier|public
name|void
name|memberStopped
parameter_list|(
name|Member
name|arg0
parameter_list|)
block|{
name|processClusterStateChange
argument_list|()
expr_stmt|;
block|}
comment|/**      * @param arg0      * @see org.apache.activeblaze.cluster.MasterChangedListener#masterChanged(org.apache.activeblaze.group.Member)      */
specifier|public
name|void
name|masterChanged
parameter_list|(
name|Member
name|arg0
parameter_list|)
block|{
name|processClusterStateChange
argument_list|()
expr_stmt|;
block|}
comment|/**      * @throws Exception      * @see org.apache.activemq.Service#start()      */
specifier|public
name|void
name|start
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|this
operator|.
name|started
operator|.
name|compareAndSet
argument_list|(
literal|false
argument_list|,
literal|true
argument_list|)
condition|)
block|{
name|initializeChannel
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|started
operator|.
name|set
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
comment|/**      * @throws Exception      * @see org.apache.activemq.Service#stop()      */
specifier|public
name|void
name|stop
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|this
operator|.
name|started
operator|.
name|compareAndSet
argument_list|(
literal|true
argument_list|,
literal|false
argument_list|)
condition|)
block|{
if|if
condition|(
name|this
operator|.
name|channel
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|channel
operator|.
name|removeMemberChangedListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|this
operator|.
name|channel
operator|.
name|removeMasterChangedListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|this
operator|.
name|channel
operator|.
name|shutDown
argument_list|()
expr_stmt|;
name|this
operator|.
name|channel
operator|=
literal|null
expr_stmt|;
block|}
block|}
name|this
operator|.
name|started
operator|.
name|set
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|private
name|boolean
name|isStarted
parameter_list|()
block|{
return|return
name|this
operator|.
name|started
operator|.
name|get
argument_list|()
return|;
block|}
specifier|synchronized
specifier|private
name|void
name|updateClusterState
parameter_list|(
name|ClusterState
name|clusterState
parameter_list|)
block|{
name|this
operator|.
name|clusterState
operator|=
name|clusterState
expr_stmt|;
name|fireClusterChange
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|fireClusterChange
parameter_list|()
block|{
if|if
condition|(
name|isStarted
argument_list|()
operator|&&
operator|!
name|this
operator|.
name|listeners
operator|.
name|isEmpty
argument_list|()
operator|&&
name|this
operator|.
name|clusterState
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|ClusterListener
name|listener
range|:
name|this
operator|.
name|listeners
control|)
block|{
name|listener
operator|.
name|onClusterChange
argument_list|(
name|this
operator|.
name|clusterState
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|processClusterStateChange
parameter_list|()
block|{
if|if
condition|(
name|isStarted
argument_list|()
condition|)
block|{
try|try
block|{
name|ClusterState
name|state
init|=
operator|new
name|ClusterState
argument_list|()
decl_stmt|;
name|this
operator|.
name|channel
operator|.
name|waitForElection
argument_list|(
name|getAwaitGroupTimeout
argument_list|()
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|Member
argument_list|>
name|members
init|=
name|this
operator|.
name|channel
operator|.
name|getMembers
argument_list|()
decl_stmt|;
name|Member
name|master
init|=
name|this
operator|.
name|channel
operator|.
name|getMaster
argument_list|()
decl_stmt|;
if|if
condition|(
name|master
operator|!=
literal|null
condition|)
block|{
comment|// check we can be the master
if|if
condition|(
operator|!
name|this
operator|.
name|channel
operator|.
name|isMaster
argument_list|()
operator|||
operator|(
name|this
operator|.
name|status
operator|!=
literal|null
operator|)
condition|)
block|{
name|state
operator|.
name|setMaster
argument_list|(
name|master
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|members
operator|.
name|remove
argument_list|(
name|master
argument_list|)
expr_stmt|;
block|}
block|}
name|List
argument_list|<
name|String
argument_list|>
name|slaves
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Member
name|slave
range|:
name|members
control|)
block|{
name|slaves
operator|.
name|add
argument_list|(
name|slave
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|state
operator|.
name|setSlaves
argument_list|(
name|slaves
argument_list|)
expr_stmt|;
name|updateClusterState
argument_list|(
name|state
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Failed to process Cluster State Changed"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
specifier|synchronized
name|void
name|initializeChannel
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|localMemberName
operator|!=
literal|null
operator|&&
name|this
operator|.
name|channel
operator|==
literal|null
condition|)
block|{
try|try
block|{
name|BlazeClusterGroupChannelFactory
name|factory
init|=
operator|new
name|BlazeClusterGroupChannelFactory
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|this
operator|.
name|channel
operator|=
name|factory
operator|.
name|createChannel
argument_list|(
name|this
operator|.
name|localMemberName
argument_list|)
expr_stmt|;
name|this
operator|.
name|channel
operator|.
name|addMemberChangedListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|this
operator|.
name|channel
operator|.
name|addMasterChangedListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
if|if
condition|(
name|isStarted
argument_list|()
condition|)
block|{
name|this
operator|.
name|channel
operator|.
name|start
argument_list|()
expr_stmt|;
name|this
operator|.
name|channel
operator|.
name|waitForElection
argument_list|(
name|getAwaitGroupTimeout
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|processClusterStateChange
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Failed to create channel"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

