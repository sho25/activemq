begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|camel
operator|.
name|component
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ContextTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Endpoint
import|;
end_import

begin_comment
comment|/**  *   */
end_comment

begin_class
specifier|public
class|class
name|JournalConfigureTest
extends|extends
name|ContextTestSupport
block|{
specifier|public
name|void
name|testDefaltConfig
parameter_list|()
throws|throws
name|Exception
block|{
name|JournalEndpoint
name|endpoint
init|=
name|resolveMandatoryEndpoint
argument_list|(
literal|"activemq.journal:target/test"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"directory"
argument_list|,
operator|new
name|File
argument_list|(
literal|"target"
argument_list|,
literal|"test"
argument_list|)
argument_list|,
name|endpoint
operator|.
name|getDirectory
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"syncConsume"
argument_list|,
literal|false
argument_list|,
name|endpoint
operator|.
name|isSyncConsume
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"syncProduce"
argument_list|,
literal|true
argument_list|,
name|endpoint
operator|.
name|isSyncProduce
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testConfigViaOptions
parameter_list|()
throws|throws
name|Exception
block|{
name|JournalEndpoint
name|endpoint
init|=
name|resolveMandatoryEndpoint
argument_list|(
literal|"activemq.journal:target/test?syncConsume=true&syncProduce=false"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"directory"
argument_list|,
operator|new
name|File
argument_list|(
literal|"target"
argument_list|,
literal|"test"
argument_list|)
argument_list|,
name|endpoint
operator|.
name|getDirectory
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"syncConsume"
argument_list|,
literal|true
argument_list|,
name|endpoint
operator|.
name|isSyncConsume
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"syncProduce"
argument_list|,
literal|false
argument_list|,
name|endpoint
operator|.
name|isSyncProduce
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|JournalEndpoint
name|resolveMandatoryEndpoint
parameter_list|(
name|String
name|uri
parameter_list|)
block|{
name|Endpoint
name|endpoint
init|=
name|super
operator|.
name|resolveMandatoryEndpoint
argument_list|(
name|uri
argument_list|)
decl_stmt|;
return|return
name|assertIsInstanceOf
argument_list|(
name|JournalEndpoint
operator|.
name|class
argument_list|,
name|endpoint
argument_list|)
return|;
block|}
block|}
end_class

end_unit

