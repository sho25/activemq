begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|web
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ActiveMQDestination
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ActiveMQQueue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ActiveMQTopic
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|web
operator|.
name|servlet
operator|.
name|ModelAndView
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_comment
comment|/**  *  * @version $Revision$  */
end_comment

begin_class
specifier|public
class|class
name|DestinationFacade
extends|extends
name|BrokerFacade
block|{
specifier|private
name|String
name|JMSDestination
decl_stmt|;
specifier|private
name|String
name|JMSDestinationType
decl_stmt|;
specifier|public
name|DestinationFacade
parameter_list|(
name|BrokerService
name|brokerService
parameter_list|)
block|{
name|super
argument_list|(
name|brokerService
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|super
operator|.
name|toString
argument_list|()
operator|+
literal|"[destination:"
operator|+
name|JMSDestination
operator|+
literal|"; type="
operator|+
name|JMSDestinationType
operator|+
literal|"]"
return|;
block|}
comment|// Operations
comment|// -------------------------------------------------------------------------
specifier|public
name|void
name|removeDestination
parameter_list|()
throws|throws
name|Exception
block|{
name|getValidDestination
argument_list|()
expr_stmt|;
if|if
condition|(
name|isQueue
argument_list|()
condition|)
block|{
name|getBrokerAdmin
argument_list|()
operator|.
name|removeQueue
argument_list|(
name|getJMSDestination
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|getBrokerAdmin
argument_list|()
operator|.
name|removeTopic
argument_list|(
name|getJMSDestination
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|addDestination
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|isQueue
argument_list|()
condition|)
block|{
name|getBrokerAdmin
argument_list|()
operator|.
name|addQueue
argument_list|(
name|getValidDestination
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|getBrokerAdmin
argument_list|()
operator|.
name|addTopic
argument_list|(
name|getValidDestination
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Properties
comment|// -------------------------------------------------------------------------
specifier|public
name|boolean
name|isQueue
parameter_list|()
block|{
if|if
condition|(
name|JMSDestinationType
operator|!=
literal|null
operator|&&
name|JMSDestinationType
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"topic"
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|String
name|getJMSDestination
parameter_list|()
block|{
return|return
name|JMSDestination
return|;
block|}
specifier|public
name|void
name|setJMSDestination
parameter_list|(
name|String
name|destination
parameter_list|)
block|{
name|this
operator|.
name|JMSDestination
operator|=
name|destination
expr_stmt|;
block|}
specifier|public
name|String
name|getJMSDestinationType
parameter_list|()
block|{
return|return
name|JMSDestinationType
return|;
block|}
specifier|public
name|void
name|setJMSDestinationType
parameter_list|(
name|String
name|type
parameter_list|)
block|{
name|this
operator|.
name|JMSDestinationType
operator|=
name|type
expr_stmt|;
block|}
specifier|protected
name|ActiveMQDestination
name|createDestination
parameter_list|()
block|{
if|if
condition|(
name|isQueue
argument_list|()
condition|)
block|{
return|return
operator|new
name|ActiveMQQueue
argument_list|(
name|getValidDestination
argument_list|()
argument_list|)
return|;
block|}
else|else
block|{
return|return
operator|new
name|ActiveMQTopic
argument_list|(
name|getValidDestination
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|protected
name|String
name|getValidDestination
parameter_list|()
block|{
if|if
condition|(
name|JMSDestination
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"No JMSDestination parameter specified"
argument_list|)
throw|;
block|}
return|return
name|JMSDestination
return|;
block|}
specifier|protected
name|ModelAndView
name|redirectToRequest
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|)
block|{
name|String
name|view
init|=
literal|"redirect:"
operator|+
name|request
operator|.
name|getRequestURI
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Redirecting to: "
operator|+
name|view
argument_list|)
expr_stmt|;
return|return
operator|new
name|ModelAndView
argument_list|(
name|view
argument_list|)
return|;
block|}
specifier|protected
name|ModelAndView
name|redirectToBrowseView
parameter_list|()
block|{
return|return
operator|new
name|ModelAndView
argument_list|(
literal|"redirect:"
operator|+
operator|(
name|isQueue
argument_list|()
condition|?
literal|"queues.jsp"
else|:
literal|"topics.jsp"
operator|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

