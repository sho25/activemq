begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *   * Copyright 2005-2006 The Apache Software Foundation  *   * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with  * the License. You may obtain a copy of the License at  *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on  * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the  * specific language governing permissions and limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|kaha
operator|.
name|impl
package|;
end_package

begin_comment
comment|/**  * A linked list used by IndexItems  *   * @version $Revision: 1.2 $  */
end_comment

begin_class
specifier|final
class|class
name|VMIndexLinkedList
implements|implements
name|Cloneable
implements|,
name|IndexLinkedList
block|{
specifier|private
specifier|transient
name|IndexItem
name|root
decl_stmt|;
specifier|private
specifier|transient
name|int
name|size
init|=
literal|0
decl_stmt|;
comment|/**      * Constructs an empty list.      */
name|VMIndexLinkedList
parameter_list|(
name|IndexItem
name|header
parameter_list|)
block|{
name|this
operator|.
name|root
operator|=
name|header
expr_stmt|;
name|this
operator|.
name|root
operator|.
name|next
operator|=
name|root
operator|.
name|prev
operator|=
name|root
expr_stmt|;
block|}
specifier|public
name|IndexItem
name|getRoot
parameter_list|()
block|{
return|return
name|root
return|;
block|}
comment|/* (non-Javadoc)      * @see org.apache.activemq.kaha.impl.IndexLinkedList#getFirst()      */
specifier|public
name|IndexItem
name|getFirst
parameter_list|()
block|{
if|if
condition|(
name|size
operator|==
literal|0
condition|)
return|return
literal|null
return|;
return|return
name|root
operator|.
name|next
return|;
block|}
comment|/* (non-Javadoc)      * @see org.apache.activemq.kaha.impl.IndexLinkedList#getLast()      */
specifier|public
name|IndexItem
name|getLast
parameter_list|()
block|{
if|if
condition|(
name|size
operator|==
literal|0
condition|)
return|return
literal|null
return|;
return|return
name|root
operator|.
name|prev
return|;
block|}
comment|/* (non-Javadoc)      * @see org.apache.activemq.kaha.impl.IndexLinkedList#removeFirst()      */
specifier|public
name|IndexItem
name|removeFirst
parameter_list|()
block|{
if|if
condition|(
name|size
operator|==
literal|0
condition|)
block|{
return|return
literal|null
return|;
block|}
name|IndexItem
name|result
init|=
name|root
operator|.
name|next
decl_stmt|;
name|remove
argument_list|(
name|root
operator|.
name|next
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
comment|/* (non-Javadoc)      * @see org.apache.activemq.kaha.impl.IndexLinkedList#removeLast()      */
specifier|public
name|Object
name|removeLast
parameter_list|()
block|{
if|if
condition|(
name|size
operator|==
literal|0
condition|)
return|return
literal|null
return|;
name|IndexItem
name|result
init|=
name|root
operator|.
name|prev
decl_stmt|;
name|remove
argument_list|(
name|root
operator|.
name|prev
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
comment|/* (non-Javadoc)      * @see org.apache.activemq.kaha.impl.IndexLinkedList#addFirst(org.apache.activemq.kaha.impl.IndexItem)      */
specifier|public
name|void
name|addFirst
parameter_list|(
name|IndexItem
name|item
parameter_list|)
block|{
name|addBefore
argument_list|(
name|item
argument_list|,
name|root
operator|.
name|next
argument_list|)
expr_stmt|;
block|}
comment|/* (non-Javadoc)      * @see org.apache.activemq.kaha.impl.IndexLinkedList#addLast(org.apache.activemq.kaha.impl.IndexItem)      */
specifier|public
name|void
name|addLast
parameter_list|(
name|IndexItem
name|item
parameter_list|)
block|{
name|addBefore
argument_list|(
name|item
argument_list|,
name|root
argument_list|)
expr_stmt|;
block|}
comment|/* (non-Javadoc)      * @see org.apache.activemq.kaha.impl.IndexLinkedList#size()      */
specifier|public
name|int
name|size
parameter_list|()
block|{
return|return
name|size
return|;
block|}
comment|/* (non-Javadoc)      * @see org.apache.activemq.kaha.impl.IndexLinkedList#isEmpty()      */
specifier|public
name|boolean
name|isEmpty
parameter_list|()
block|{
return|return
name|size
operator|==
literal|0
return|;
block|}
comment|/* (non-Javadoc)      * @see org.apache.activemq.kaha.impl.IndexLinkedList#add(org.apache.activemq.kaha.impl.IndexItem)      */
specifier|public
name|boolean
name|add
parameter_list|(
name|IndexItem
name|item
parameter_list|)
block|{
name|addBefore
argument_list|(
name|item
argument_list|,
name|root
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
comment|/* (non-Javadoc)      * @see org.apache.activemq.kaha.impl.IndexLinkedList#clear()      */
specifier|public
name|void
name|clear
parameter_list|()
block|{
name|root
operator|.
name|next
operator|=
name|root
operator|.
name|prev
operator|=
name|root
expr_stmt|;
name|size
operator|=
literal|0
expr_stmt|;
block|}
comment|// Positional Access Operations
comment|/* (non-Javadoc)      * @see org.apache.activemq.kaha.impl.IndexLinkedList#get(int)      */
specifier|public
name|IndexItem
name|get
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|entry
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/* (non-Javadoc)      * @see org.apache.activemq.kaha.impl.IndexLinkedList#add(int, org.apache.activemq.kaha.impl.IndexItem)      */
specifier|public
name|void
name|add
parameter_list|(
name|int
name|index
parameter_list|,
name|IndexItem
name|element
parameter_list|)
block|{
name|addBefore
argument_list|(
name|element
argument_list|,
operator|(
name|index
operator|==
name|size
condition|?
name|root
else|:
name|entry
argument_list|(
name|index
argument_list|)
operator|)
argument_list|)
expr_stmt|;
block|}
comment|/* (non-Javadoc)      * @see org.apache.activemq.kaha.impl.IndexLinkedList#remove(int)      */
specifier|public
name|Object
name|remove
parameter_list|(
name|int
name|index
parameter_list|)
block|{
name|IndexItem
name|e
init|=
name|entry
argument_list|(
name|index
argument_list|)
decl_stmt|;
name|remove
argument_list|(
name|e
argument_list|)
expr_stmt|;
return|return
name|e
return|;
block|}
comment|/**      * Return the indexed entry.      */
specifier|private
name|IndexItem
name|entry
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|index
operator|<
literal|0
operator|||
name|index
operator|>=
name|size
condition|)
throw|throw
operator|new
name|IndexOutOfBoundsException
argument_list|(
literal|"Index: "
operator|+
name|index
operator|+
literal|", Size: "
operator|+
name|size
argument_list|)
throw|;
name|IndexItem
name|e
init|=
name|root
decl_stmt|;
if|if
condition|(
name|index
operator|<
name|size
operator|/
literal|2
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<=
name|index
condition|;
name|i
operator|++
control|)
name|e
operator|=
name|e
operator|.
name|next
expr_stmt|;
block|}
else|else
block|{
for|for
control|(
name|int
name|i
init|=
name|size
init|;
name|i
operator|>
name|index
condition|;
name|i
operator|--
control|)
name|e
operator|=
name|e
operator|.
name|prev
expr_stmt|;
block|}
return|return
name|e
return|;
block|}
comment|// Search Operations
comment|/* (non-Javadoc)      * @see org.apache.activemq.kaha.impl.IndexLinkedList#indexOf(org.apache.activemq.kaha.impl.IndexItem)      */
specifier|public
name|int
name|indexOf
parameter_list|(
name|IndexItem
name|o
parameter_list|)
block|{
name|int
name|index
init|=
literal|0
decl_stmt|;
for|for
control|(
name|IndexItem
name|e
init|=
name|root
operator|.
name|next
init|;
name|e
operator|!=
name|root
condition|;
name|e
operator|=
name|e
operator|.
name|next
control|)
block|{
if|if
condition|(
name|o
operator|==
name|e
condition|)
block|{
return|return
name|index
return|;
block|}
name|index
operator|++
expr_stmt|;
block|}
return|return
operator|-
literal|1
return|;
block|}
comment|/* (non-Javadoc)      * @see org.apache.activemq.kaha.impl.IndexLinkedList#getNextEntry(org.apache.activemq.kaha.impl.IndexItem)      */
specifier|public
name|IndexItem
name|getNextEntry
parameter_list|(
name|IndexItem
name|entry
parameter_list|)
block|{
return|return
name|entry
operator|.
name|next
operator|!=
name|root
condition|?
name|entry
operator|.
name|next
else|:
literal|null
return|;
block|}
comment|/* (non-Javadoc)      * @see org.apache.activemq.kaha.impl.IndexLinkedList#getPrevEntry(org.apache.activemq.kaha.impl.IndexItem)      */
specifier|public
name|IndexItem
name|getPrevEntry
parameter_list|(
name|IndexItem
name|entry
parameter_list|)
block|{
return|return
name|entry
operator|.
name|prev
operator|!=
name|root
condition|?
name|entry
operator|.
name|prev
else|:
literal|null
return|;
block|}
comment|/* (non-Javadoc)      * @see org.apache.activemq.kaha.impl.IndexLinkedList#addBefore(org.apache.activemq.kaha.impl.IndexItem, org.apache.activemq.kaha.impl.IndexItem)      */
specifier|public
name|void
name|addBefore
parameter_list|(
name|IndexItem
name|insert
parameter_list|,
name|IndexItem
name|e
parameter_list|)
block|{
name|insert
operator|.
name|next
operator|=
name|e
expr_stmt|;
name|insert
operator|.
name|prev
operator|=
name|e
operator|.
name|prev
expr_stmt|;
name|insert
operator|.
name|prev
operator|.
name|next
operator|=
name|insert
expr_stmt|;
name|insert
operator|.
name|next
operator|.
name|prev
operator|=
name|insert
expr_stmt|;
name|size
operator|++
expr_stmt|;
block|}
comment|/* (non-Javadoc)      * @see org.apache.activemq.kaha.impl.IndexLinkedList#remove(org.apache.activemq.kaha.impl.IndexItem)      */
specifier|public
name|void
name|remove
parameter_list|(
name|IndexItem
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|==
name|root
condition|)
return|return;
name|e
operator|.
name|prev
operator|.
name|next
operator|=
name|e
operator|.
name|next
expr_stmt|;
name|e
operator|.
name|next
operator|.
name|prev
operator|=
name|e
operator|.
name|prev
expr_stmt|;
name|size
operator|--
expr_stmt|;
block|}
comment|/**      *@return clone      */
specifier|public
name|Object
name|clone
parameter_list|()
block|{
name|IndexLinkedList
name|clone
init|=
operator|new
name|VMIndexLinkedList
argument_list|(
name|this
operator|.
name|root
argument_list|)
decl_stmt|;
for|for
control|(
name|IndexItem
name|e
init|=
name|root
operator|.
name|next
init|;
name|e
operator|!=
name|root
condition|;
name|e
operator|=
name|e
operator|.
name|next
control|)
name|clone
operator|.
name|add
argument_list|(
name|e
argument_list|)
expr_stmt|;
return|return
name|clone
return|;
block|}
specifier|public
name|IndexItem
name|getEntry
parameter_list|(
name|IndexItem
name|current
parameter_list|)
block|{
return|return
name|current
return|;
block|}
block|}
end_class

end_unit

