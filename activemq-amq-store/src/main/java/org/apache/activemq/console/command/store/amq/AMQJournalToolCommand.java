begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|console
operator|.
name|command
operator|.
name|store
operator|.
name|amq
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|console
operator|.
name|CommandContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|console
operator|.
name|command
operator|.
name|Command
import|;
end_import

begin_class
specifier|public
class|class
name|AMQJournalToolCommand
implements|implements
name|Command
block|{
specifier|private
name|CommandContext
name|context
decl_stmt|;
annotation|@
name|Override
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
literal|"journal-audit"
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getOneLineDescription
parameter_list|()
block|{
return|return
literal|"Allows you to view records stored in the persistent journal."
return|;
block|}
specifier|public
name|void
name|execute
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|tokens
parameter_list|)
throws|throws
name|Exception
block|{
name|AMQJournalTool
name|consumerTool
init|=
operator|new
name|AMQJournalTool
argument_list|()
decl_stmt|;
name|String
name|args
index|[]
init|=
operator|new
name|String
index|[
name|tokens
operator|.
name|size
argument_list|()
index|]
decl_stmt|;
name|tokens
operator|.
name|toArray
argument_list|(
name|args
argument_list|)
expr_stmt|;
name|String
index|[]
name|directories
init|=
name|CommandLineSupport
operator|.
name|setOptions
argument_list|(
name|consumerTool
argument_list|,
name|args
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|directories
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|consumerTool
operator|.
name|getDirs
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|File
argument_list|(
name|directories
index|[
name|i
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|consumerTool
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|setCommandContext
parameter_list|(
name|CommandContext
name|context
parameter_list|)
block|{
name|this
operator|.
name|context
operator|=
name|context
expr_stmt|;
block|}
block|}
end_class

end_unit

