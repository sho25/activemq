begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|failover
package|;
end_package

begin_class
specifier|public
class|class
name|TwoBrokerFailoverClusterTest
extends|extends
name|FailoverClusterTestSupport
block|{
specifier|private
specifier|static
specifier|final
name|String
name|BROKER_A_CLIENT_TC_ADDRESS
init|=
literal|"tcp://127.0.0.1:61616"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|BROKER_B_CLIENT_TC_ADDRESS
init|=
literal|"tcp://127.0.0.1:61617"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|BROKER_A_NOB_TC_ADDRESS
init|=
literal|"tcp://127.0.0.1:61626"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|BROKER_B_NOB_TC_ADDRESS
init|=
literal|"tcp://127.0.0.1:61627"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|BROKER_A_NAME
init|=
literal|"BROKERA"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|BROKER_B_NAME
init|=
literal|"BROKERB"
decl_stmt|;
specifier|public
name|void
name|testTwoBrokersRestart
parameter_list|()
throws|throws
name|Exception
block|{
name|createBrokerA
argument_list|(
literal|false
argument_list|,
literal|""
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|createBrokerB
argument_list|(
literal|false
argument_list|,
literal|""
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|getBroker
argument_list|(
name|BROKER_B_NAME
argument_list|)
operator|.
name|waitUntilStarted
argument_list|()
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|2000
argument_list|)
expr_stmt|;
name|setClientUrl
argument_list|(
literal|"failover://("
operator|+
name|BROKER_A_CLIENT_TC_ADDRESS
operator|+
literal|","
operator|+
name|BROKER_B_CLIENT_TC_ADDRESS
operator|+
literal|")?randomize=false&jms.watchTopicAdvisories=false"
argument_list|)
expr_stmt|;
name|createClients
argument_list|()
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
name|assertClientsConnectedToTwoBrokers
argument_list|()
expr_stmt|;
name|assertClientsConnectionsEvenlyDistributed
argument_list|(
literal|.35
argument_list|)
expr_stmt|;
name|getBroker
argument_list|(
name|BROKER_A_NAME
argument_list|)
operator|.
name|stop
argument_list|()
expr_stmt|;
name|getBroker
argument_list|(
name|BROKER_A_NAME
argument_list|)
operator|.
name|waitUntilStopped
argument_list|()
expr_stmt|;
name|removeBroker
argument_list|(
name|BROKER_A_NAME
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|assertAllConnected
argument_list|(
name|NUMBER_OF_CLIENTS
argument_list|)
expr_stmt|;
name|assertAllConnectedTo
argument_list|(
name|BROKER_B_CLIENT_TC_ADDRESS
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"Restarting A"
argument_list|)
expr_stmt|;
name|createBrokerA
argument_list|(
literal|false
argument_list|,
literal|""
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|getBroker
argument_list|(
name|BROKER_A_NAME
argument_list|)
operator|.
name|waitUntilStarted
argument_list|()
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
name|assertAllConnected
argument_list|(
name|NUMBER_OF_CLIENTS
argument_list|)
expr_stmt|;
name|assertClientsConnectedToTwoBrokers
argument_list|()
expr_stmt|;
name|assertClientsConnectionsEvenlyDistributed
argument_list|(
literal|.35
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|createBrokerA
parameter_list|(
name|boolean
name|multi
parameter_list|,
name|String
name|params
parameter_list|,
name|String
name|clusterFilter
parameter_list|,
name|String
name|destinationFilter
parameter_list|)
throws|throws
name|Exception
block|{
specifier|final
name|String
name|tcParams
init|=
operator|(
name|params
operator|==
literal|null
operator|)
condition|?
literal|""
else|:
name|params
decl_stmt|;
if|if
condition|(
name|getBroker
argument_list|(
name|BROKER_A_NAME
argument_list|)
operator|==
literal|null
condition|)
block|{
name|addBroker
argument_list|(
name|BROKER_A_NAME
argument_list|,
name|createBroker
argument_list|(
name|BROKER_A_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|addTransportConnector
argument_list|(
name|getBroker
argument_list|(
name|BROKER_A_NAME
argument_list|)
argument_list|,
literal|"openwire"
argument_list|,
name|BROKER_A_CLIENT_TC_ADDRESS
operator|+
name|tcParams
argument_list|,
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|multi
condition|)
block|{
name|addTransportConnector
argument_list|(
name|getBroker
argument_list|(
name|BROKER_A_NAME
argument_list|)
argument_list|,
literal|"network"
argument_list|,
name|BROKER_A_NOB_TC_ADDRESS
operator|+
name|tcParams
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|addNetworkBridge
argument_list|(
name|getBroker
argument_list|(
name|BROKER_A_NAME
argument_list|)
argument_list|,
literal|"A_2_B_Bridge"
argument_list|,
literal|"static://("
operator|+
name|BROKER_B_NOB_TC_ADDRESS
operator|+
literal|")?useExponentialBackOff=false"
argument_list|,
literal|false
argument_list|,
name|clusterFilter
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|addNetworkBridge
argument_list|(
name|getBroker
argument_list|(
name|BROKER_A_NAME
argument_list|)
argument_list|,
literal|"A_2_B_Bridge"
argument_list|,
literal|"static://("
operator|+
name|BROKER_B_CLIENT_TC_ADDRESS
operator|+
literal|")?useExponentialBackOff=false"
argument_list|,
literal|false
argument_list|,
name|clusterFilter
argument_list|)
expr_stmt|;
block|}
name|getBroker
argument_list|(
name|BROKER_A_NAME
argument_list|)
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|createBrokerB
parameter_list|(
name|boolean
name|multi
parameter_list|,
name|String
name|params
parameter_list|,
name|String
name|clusterFilter
parameter_list|,
name|String
name|destinationFilter
parameter_list|)
throws|throws
name|Exception
block|{
specifier|final
name|String
name|tcParams
init|=
operator|(
name|params
operator|==
literal|null
operator|)
condition|?
literal|""
else|:
name|params
decl_stmt|;
if|if
condition|(
name|getBroker
argument_list|(
name|BROKER_B_NAME
argument_list|)
operator|==
literal|null
condition|)
block|{
name|addBroker
argument_list|(
name|BROKER_B_NAME
argument_list|,
name|createBroker
argument_list|(
name|BROKER_B_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|addTransportConnector
argument_list|(
name|getBroker
argument_list|(
name|BROKER_B_NAME
argument_list|)
argument_list|,
literal|"openwire"
argument_list|,
name|BROKER_B_CLIENT_TC_ADDRESS
operator|+
name|tcParams
argument_list|,
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|multi
condition|)
block|{
name|addTransportConnector
argument_list|(
name|getBroker
argument_list|(
name|BROKER_B_NAME
argument_list|)
argument_list|,
literal|"network"
argument_list|,
name|BROKER_B_NOB_TC_ADDRESS
operator|+
name|tcParams
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|addNetworkBridge
argument_list|(
name|getBroker
argument_list|(
name|BROKER_B_NAME
argument_list|)
argument_list|,
literal|"B_2_A_Bridge"
argument_list|,
literal|"static://("
operator|+
name|BROKER_A_NOB_TC_ADDRESS
operator|+
literal|")?useExponentialBackOff=false"
argument_list|,
literal|false
argument_list|,
name|clusterFilter
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|addNetworkBridge
argument_list|(
name|getBroker
argument_list|(
name|BROKER_B_NAME
argument_list|)
argument_list|,
literal|"B_2_A_Bridge"
argument_list|,
literal|"static://("
operator|+
name|BROKER_A_CLIENT_TC_ADDRESS
operator|+
literal|")?useExponentialBackOff=false"
argument_list|,
literal|false
argument_list|,
name|clusterFilter
argument_list|)
expr_stmt|;
block|}
name|getBroker
argument_list|(
name|BROKER_B_NAME
argument_list|)
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

