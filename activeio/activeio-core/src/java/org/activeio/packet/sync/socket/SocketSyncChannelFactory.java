begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Copyright 2004 The Apache Software Foundation  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|activeio
operator|.
name|packet
operator|.
name|sync
operator|.
name|socket
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|net
operator|.
name|ServerSocketFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|net
operator|.
name|SocketFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activeio
operator|.
name|packet
operator|.
name|sync
operator|.
name|SyncChannel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activeio
operator|.
name|packet
operator|.
name|sync
operator|.
name|SyncChannelFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activeio
operator|.
name|packet
operator|.
name|sync
operator|.
name|SyncChannelServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activeio
operator|.
name|stream
operator|.
name|sync
operator|.
name|StreamChannelServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activeio
operator|.
name|stream
operator|.
name|sync
operator|.
name|socket
operator|.
name|SocketStreamChannel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activeio
operator|.
name|stream
operator|.
name|sync
operator|.
name|socket
operator|.
name|SocketStreamChannelFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activeio
operator|.
name|stream
operator|.
name|sync
operator|.
name|socket
operator|.
name|SocketStreamChannelServer
import|;
end_import

begin_comment
comment|/**  * A TcpSynchChannelFactory creates {@see org.activeio.net.TcpSynchChannel}  * and {@see org.activeio.net.TcpSynchChannelServer} objects.  *   * @version $Revision$  */
end_comment

begin_class
specifier|public
class|class
name|SocketSyncChannelFactory
implements|implements
name|SyncChannelFactory
block|{
name|SocketStreamChannelFactory
name|factory
decl_stmt|;
specifier|public
name|SocketSyncChannelFactory
parameter_list|()
block|{
name|this
argument_list|(
name|SocketFactory
operator|.
name|getDefault
argument_list|()
argument_list|,
name|ServerSocketFactory
operator|.
name|getDefault
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|SocketSyncChannelFactory
parameter_list|(
name|SocketFactory
name|socketFactory
parameter_list|,
name|ServerSocketFactory
name|serverSocketFactory
parameter_list|)
block|{
name|factory
operator|=
operator|new
name|SocketStreamChannelFactory
argument_list|(
name|socketFactory
argument_list|,
name|serverSocketFactory
argument_list|)
expr_stmt|;
block|}
comment|/**      * Uses the {@param location}'s host and port to create a tcp connection to a remote host.      *       * @see org.activeio.SyncChannelFactory#openSyncChannel(java.net.URI)      */
specifier|public
name|SyncChannel
name|openSyncChannel
parameter_list|(
name|URI
name|location
parameter_list|)
throws|throws
name|IOException
block|{
name|SocketStreamChannel
name|channel
init|=
operator|(
name|SocketStreamChannel
operator|)
name|factory
operator|.
name|openStreamChannel
argument_list|(
name|location
argument_list|)
decl_stmt|;
return|return
name|createSynchChannel
argument_list|(
name|channel
argument_list|)
return|;
block|}
comment|/**      * @param channel      * @return      * @throws IOException      */
specifier|protected
name|SyncChannel
name|createSynchChannel
parameter_list|(
name|SocketStreamChannel
name|channel
parameter_list|)
throws|throws
name|IOException
block|{
return|return
operator|new
name|SocketSyncChannel
argument_list|(
name|channel
argument_list|)
return|;
block|}
comment|/**      * Binds a server socket a the {@param bindURI}'s port.      *       * @see org.activeio.SyncChannelFactory#bindSyncChannel(java.net.URI)      */
specifier|public
name|SyncChannelServer
name|bindSyncChannel
parameter_list|(
name|URI
name|bindURI
parameter_list|)
throws|throws
name|IOException
block|{
name|StreamChannelServer
name|server
init|=
name|factory
operator|.
name|bindStreamChannel
argument_list|(
name|bindURI
argument_list|)
decl_stmt|;
return|return
operator|new
name|SocketSyncChannelServer
argument_list|(
operator|(
name|SocketStreamChannelServer
operator|)
name|server
argument_list|)
return|;
block|}
comment|/**      * @return Returns the backlog.      */
specifier|public
name|int
name|getBacklog
parameter_list|()
block|{
return|return
name|factory
operator|.
name|getBacklog
argument_list|()
return|;
block|}
comment|/**      * @param backlog      *            The backlog to set.      */
specifier|public
name|void
name|setBacklog
parameter_list|(
name|int
name|backlog
parameter_list|)
block|{
name|factory
operator|.
name|setBacklog
argument_list|(
name|backlog
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

