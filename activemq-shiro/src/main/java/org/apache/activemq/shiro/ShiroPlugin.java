begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|shiro
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ConfigurationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|Broker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerPluginSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|shiro
operator|.
name|authc
operator|.
name|AuthenticationFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|shiro
operator|.
name|authc
operator|.
name|AuthenticationPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|shiro
operator|.
name|authc
operator|.
name|DefaultAuthenticationPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|shiro
operator|.
name|authz
operator|.
name|AuthorizationFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|shiro
operator|.
name|env
operator|.
name|IniEnvironment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|shiro
operator|.
name|subject
operator|.
name|ConnectionSubjectFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|shiro
operator|.
name|subject
operator|.
name|DefaultConnectionSubjectFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|shiro
operator|.
name|subject
operator|.
name|SubjectFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|shiro
operator|.
name|config
operator|.
name|Ini
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|shiro
operator|.
name|env
operator|.
name|Environment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|shiro
operator|.
name|mgt
operator|.
name|SecurityManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * @since 5.10.0  */
end_comment

begin_class
specifier|public
class|class
name|ShiroPlugin
extends|extends
name|BrokerPluginSupport
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|ShiroPlugin
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|volatile
name|boolean
name|enabled
init|=
literal|true
decl_stmt|;
specifier|private
name|Broker
name|broker
decl_stmt|;
comment|//the downstream broker after any/all Shiro-specific broker filters
specifier|private
name|SecurityManager
name|securityManager
decl_stmt|;
specifier|private
name|Environment
name|environment
decl_stmt|;
specifier|private
name|IniEnvironment
name|iniEnvironment
decl_stmt|;
comment|//only used if the above environment instance is not explicitly configured
specifier|private
name|SubjectFilter
name|subjectFilter
decl_stmt|;
specifier|private
name|AuthenticationFilter
name|authenticationFilter
decl_stmt|;
specifier|private
name|AuthorizationFilter
name|authorizationFilter
decl_stmt|;
specifier|public
name|ShiroPlugin
parameter_list|()
block|{
comment|//Default if this.environment is not configured. See the ensureEnvironment() method below.
name|iniEnvironment
operator|=
operator|new
name|IniEnvironment
argument_list|()
expr_stmt|;
name|authorizationFilter
operator|=
operator|new
name|AuthorizationFilter
argument_list|()
expr_stmt|;
comment|// we want to share one AuthenticationPolicy instance across both the AuthenticationFilter and the
comment|// ConnectionSubjectFactory:
name|AuthenticationPolicy
name|authcPolicy
init|=
operator|new
name|DefaultAuthenticationPolicy
argument_list|()
decl_stmt|;
name|authenticationFilter
operator|=
operator|new
name|AuthenticationFilter
argument_list|()
expr_stmt|;
name|authenticationFilter
operator|.
name|setAuthenticationPolicy
argument_list|(
name|authcPolicy
argument_list|)
expr_stmt|;
name|authenticationFilter
operator|.
name|setNext
argument_list|(
name|authorizationFilter
argument_list|)
expr_stmt|;
name|subjectFilter
operator|=
operator|new
name|SubjectFilter
argument_list|()
expr_stmt|;
name|DefaultConnectionSubjectFactory
name|subjectFactory
init|=
operator|new
name|DefaultConnectionSubjectFactory
argument_list|()
decl_stmt|;
name|subjectFactory
operator|.
name|setAuthenticationPolicy
argument_list|(
name|authcPolicy
argument_list|)
expr_stmt|;
name|subjectFilter
operator|.
name|setConnectionSubjectFactory
argument_list|(
name|subjectFactory
argument_list|)
expr_stmt|;
name|subjectFilter
operator|.
name|setNext
argument_list|(
name|authenticationFilter
argument_list|)
expr_stmt|;
block|}
specifier|public
name|SubjectFilter
name|getSubjectFilter
parameter_list|()
block|{
return|return
name|subjectFilter
return|;
block|}
specifier|public
name|void
name|setSubjectFilter
parameter_list|(
name|SubjectFilter
name|subjectFilter
parameter_list|)
block|{
name|this
operator|.
name|subjectFilter
operator|=
name|subjectFilter
expr_stmt|;
name|this
operator|.
name|subjectFilter
operator|.
name|setNext
argument_list|(
name|this
operator|.
name|authenticationFilter
argument_list|)
expr_stmt|;
block|}
specifier|public
name|AuthenticationFilter
name|getAuthenticationFilter
parameter_list|()
block|{
return|return
name|authenticationFilter
return|;
block|}
specifier|public
name|void
name|setAuthenticationFilter
parameter_list|(
name|AuthenticationFilter
name|authenticationFilter
parameter_list|)
block|{
name|this
operator|.
name|authenticationFilter
operator|=
name|authenticationFilter
expr_stmt|;
name|this
operator|.
name|authenticationFilter
operator|.
name|setNext
argument_list|(
name|this
operator|.
name|authorizationFilter
argument_list|)
expr_stmt|;
name|this
operator|.
name|subjectFilter
operator|.
name|setNext
argument_list|(
name|authenticationFilter
argument_list|)
expr_stmt|;
block|}
specifier|public
name|AuthorizationFilter
name|getAuthorizationFilter
parameter_list|()
block|{
return|return
name|authorizationFilter
return|;
block|}
specifier|public
name|void
name|setAuthorizationFilter
parameter_list|(
name|AuthorizationFilter
name|authorizationFilter
parameter_list|)
block|{
name|this
operator|.
name|authorizationFilter
operator|=
name|authorizationFilter
expr_stmt|;
name|this
operator|.
name|authorizationFilter
operator|.
name|setNext
argument_list|(
name|this
operator|.
name|broker
argument_list|)
expr_stmt|;
name|this
operator|.
name|authenticationFilter
operator|.
name|setNext
argument_list|(
name|authorizationFilter
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setEnabled
parameter_list|(
name|boolean
name|enabled
parameter_list|)
block|{
name|this
operator|.
name|enabled
operator|=
name|enabled
expr_stmt|;
if|if
condition|(
name|isInstalled
argument_list|()
condition|)
block|{
comment|//we're running, so apply the changes now:
name|applyEnabled
argument_list|(
name|enabled
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|boolean
name|isEnabled
parameter_list|()
block|{
if|if
condition|(
name|isInstalled
argument_list|()
condition|)
block|{
return|return
name|getNext
argument_list|()
operator|==
name|this
operator|.
name|subjectFilter
return|;
block|}
return|return
name|enabled
return|;
block|}
specifier|private
name|void
name|applyEnabled
parameter_list|(
name|boolean
name|enabled
parameter_list|)
block|{
if|if
condition|(
name|enabled
condition|)
block|{
comment|//ensure the SubjectFilter and downstream filters are used:
name|super
operator|.
name|setNext
argument_list|(
name|this
operator|.
name|subjectFilter
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|//Shiro is not enabled, restore the original downstream broker:
name|super
operator|.
name|setNext
argument_list|(
name|this
operator|.
name|broker
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|Environment
name|getEnvironment
parameter_list|()
block|{
return|return
name|environment
return|;
block|}
specifier|public
name|void
name|setEnvironment
parameter_list|(
name|Environment
name|environment
parameter_list|)
block|{
name|this
operator|.
name|environment
operator|=
name|environment
expr_stmt|;
block|}
specifier|public
name|SecurityManager
name|getSecurityManager
parameter_list|()
block|{
return|return
name|securityManager
return|;
block|}
specifier|public
name|void
name|setSecurityManager
parameter_list|(
name|SecurityManager
name|securityManager
parameter_list|)
block|{
name|this
operator|.
name|securityManager
operator|=
name|securityManager
expr_stmt|;
block|}
specifier|public
name|void
name|setIni
parameter_list|(
name|Ini
name|ini
parameter_list|)
block|{
name|this
operator|.
name|iniEnvironment
operator|.
name|setIni
argument_list|(
name|ini
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setIniConfig
parameter_list|(
name|String
name|iniConfig
parameter_list|)
block|{
name|this
operator|.
name|iniEnvironment
operator|.
name|setIniConfig
argument_list|(
name|iniConfig
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setIniResourcePath
parameter_list|(
name|String
name|resourcePath
parameter_list|)
block|{
name|this
operator|.
name|iniEnvironment
operator|.
name|setIniResourcePath
argument_list|(
name|resourcePath
argument_list|)
expr_stmt|;
block|}
comment|// ===============================================================
comment|// Authentication Configuration
comment|// ===============================================================
specifier|public
name|void
name|setAuthenticationEnabled
parameter_list|(
name|boolean
name|authenticationEnabled
parameter_list|)
block|{
name|this
operator|.
name|authenticationFilter
operator|.
name|setEnabled
argument_list|(
name|authenticationEnabled
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|isAuthenticationEnabled
parameter_list|()
block|{
return|return
name|this
operator|.
name|authenticationFilter
operator|.
name|isEnabled
argument_list|()
return|;
block|}
specifier|public
name|AuthenticationPolicy
name|getAuthenticationPolicy
parameter_list|()
block|{
return|return
name|authenticationFilter
operator|.
name|getAuthenticationPolicy
argument_list|()
return|;
block|}
specifier|public
name|void
name|setAuthenticationPolicy
parameter_list|(
name|AuthenticationPolicy
name|authenticationPolicy
parameter_list|)
block|{
name|authenticationFilter
operator|.
name|setAuthenticationPolicy
argument_list|(
name|authenticationPolicy
argument_list|)
expr_stmt|;
comment|//also set it on the ConnectionSubjectFactory:
name|ConnectionSubjectFactory
name|factory
init|=
name|subjectFilter
operator|.
name|getConnectionSubjectFactory
argument_list|()
decl_stmt|;
if|if
condition|(
name|factory
operator|instanceof
name|DefaultConnectionSubjectFactory
condition|)
block|{
operator|(
operator|(
name|DefaultConnectionSubjectFactory
operator|)
name|factory
operator|)
operator|.
name|setAuthenticationPolicy
argument_list|(
name|authenticationPolicy
argument_list|)
expr_stmt|;
block|}
block|}
comment|// ===============================================================
comment|// Authorization Configuration
comment|// ===============================================================
specifier|public
name|void
name|setAuthorizationEnabled
parameter_list|(
name|boolean
name|authorizationEnabled
parameter_list|)
block|{
name|this
operator|.
name|authorizationFilter
operator|.
name|setEnabled
argument_list|(
name|authorizationEnabled
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|isAuthorizationEnabled
parameter_list|()
block|{
return|return
name|this
operator|.
name|authorizationFilter
operator|.
name|isEnabled
argument_list|()
return|;
block|}
specifier|private
name|Environment
name|ensureEnvironment
parameter_list|()
throws|throws
name|ConfigurationException
block|{
if|if
condition|(
name|this
operator|.
name|environment
operator|!=
literal|null
condition|)
block|{
return|return
name|this
operator|.
name|environment
return|;
block|}
comment|//this.environment is null - set it:
if|if
condition|(
name|this
operator|.
name|securityManager
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|environment
operator|=
operator|new
name|Environment
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|SecurityManager
name|getSecurityManager
parameter_list|()
block|{
return|return
name|ShiroPlugin
operator|.
name|this
operator|.
name|securityManager
return|;
block|}
block|}
expr_stmt|;
return|return
name|this
operator|.
name|environment
return|;
block|}
name|this
operator|.
name|iniEnvironment
operator|.
name|init
argument_list|()
expr_stmt|;
comment|//will automatically catch any config errors and throw.
name|this
operator|.
name|environment
operator|=
name|iniEnvironment
expr_stmt|;
return|return
name|this
operator|.
name|iniEnvironment
return|;
block|}
annotation|@
name|Override
specifier|public
name|Broker
name|installPlugin
parameter_list|(
name|Broker
name|broker
parameter_list|)
throws|throws
name|Exception
block|{
name|Environment
name|environment
init|=
name|ensureEnvironment
argument_list|()
decl_stmt|;
name|this
operator|.
name|authorizationFilter
operator|.
name|setEnvironment
argument_list|(
name|environment
argument_list|)
expr_stmt|;
name|this
operator|.
name|authenticationFilter
operator|.
name|setEnvironment
argument_list|(
name|environment
argument_list|)
expr_stmt|;
name|this
operator|.
name|subjectFilter
operator|.
name|setEnvironment
argument_list|(
name|environment
argument_list|)
expr_stmt|;
name|this
operator|.
name|broker
operator|=
name|broker
expr_stmt|;
name|this
operator|.
name|authorizationFilter
operator|.
name|setNext
argument_list|(
name|broker
argument_list|)
expr_stmt|;
name|this
operator|.
name|authenticationFilter
operator|.
name|setNext
argument_list|(
name|this
operator|.
name|authorizationFilter
argument_list|)
expr_stmt|;
name|this
operator|.
name|subjectFilter
operator|.
name|setNext
argument_list|(
name|this
operator|.
name|authenticationFilter
argument_list|)
expr_stmt|;
name|Broker
name|next
init|=
name|this
operator|.
name|subjectFilter
decl_stmt|;
if|if
condition|(
operator|!
name|this
operator|.
name|enabled
condition|)
block|{
comment|//not enabled at startup - default to the original broker:
name|next
operator|=
name|broker
expr_stmt|;
block|}
name|setNext
argument_list|(
name|next
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|boolean
name|isInstalled
parameter_list|()
block|{
return|return
name|getNext
argument_list|()
operator|!=
literal|null
return|;
block|}
block|}
end_class

end_unit

