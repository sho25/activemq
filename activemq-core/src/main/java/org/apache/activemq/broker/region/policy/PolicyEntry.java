begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Copyright 2005-2006 The Apache Software Foundation  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|policy
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|Queue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|Topic
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|RedeliveryPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|filter
operator|.
name|DestinationMapEntry
import|;
end_import

begin_comment
comment|/**  * Represents an entry in a {@link PolicyMap} for assigning policies to a  * specific destination or a hierarchical wildcard area of destinations.  *   * @org.xbean.XBean  *   * @version $Revision: 1.1 $  */
end_comment

begin_class
specifier|public
class|class
name|PolicyEntry
extends|extends
name|DestinationMapEntry
block|{
specifier|private
name|DispatchPolicy
name|dispatchPolicy
decl_stmt|;
specifier|private
name|SubscriptionRecoveryPolicy
name|subscriptionRecoveryPolicy
decl_stmt|;
specifier|private
name|RedeliveryPolicy
name|redeliveryPolicy
decl_stmt|;
specifier|private
name|boolean
name|sendAdvisoryIfNoConsumers
decl_stmt|;
specifier|private
name|DeadLetterStrategy
name|deadLetterStrategy
init|=
operator|new
name|SharedDeadLetterStrategy
argument_list|()
decl_stmt|;
specifier|public
name|void
name|configure
parameter_list|(
name|Queue
name|queue
parameter_list|)
block|{
if|if
condition|(
name|dispatchPolicy
operator|!=
literal|null
condition|)
block|{
name|queue
operator|.
name|setDispatchPolicy
argument_list|(
name|dispatchPolicy
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|deadLetterStrategy
operator|!=
literal|null
condition|)
block|{
name|queue
operator|.
name|setDeadLetterStrategy
argument_list|(
name|deadLetterStrategy
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|configure
parameter_list|(
name|Topic
name|topic
parameter_list|)
block|{
if|if
condition|(
name|dispatchPolicy
operator|!=
literal|null
condition|)
block|{
name|topic
operator|.
name|setDispatchPolicy
argument_list|(
name|dispatchPolicy
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|deadLetterStrategy
operator|!=
literal|null
condition|)
block|{
name|topic
operator|.
name|setDeadLetterStrategy
argument_list|(
name|deadLetterStrategy
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|subscriptionRecoveryPolicy
operator|!=
literal|null
condition|)
block|{
name|topic
operator|.
name|setSubscriptionRecoveryPolicy
argument_list|(
name|subscriptionRecoveryPolicy
argument_list|)
expr_stmt|;
block|}
name|topic
operator|.
name|setSendAdvisoryIfNoConsumers
argument_list|(
name|sendAdvisoryIfNoConsumers
argument_list|)
expr_stmt|;
block|}
comment|// Properties
comment|// -------------------------------------------------------------------------
specifier|public
name|DispatchPolicy
name|getDispatchPolicy
parameter_list|()
block|{
return|return
name|dispatchPolicy
return|;
block|}
specifier|public
name|void
name|setDispatchPolicy
parameter_list|(
name|DispatchPolicy
name|policy
parameter_list|)
block|{
name|this
operator|.
name|dispatchPolicy
operator|=
name|policy
expr_stmt|;
block|}
specifier|public
name|RedeliveryPolicy
name|getRedeliveryPolicy
parameter_list|()
block|{
return|return
name|redeliveryPolicy
return|;
block|}
specifier|public
name|void
name|setRedeliveryPolicy
parameter_list|(
name|RedeliveryPolicy
name|redeliveryPolicy
parameter_list|)
block|{
name|this
operator|.
name|redeliveryPolicy
operator|=
name|redeliveryPolicy
expr_stmt|;
block|}
specifier|public
name|SubscriptionRecoveryPolicy
name|getSubscriptionRecoveryPolicy
parameter_list|()
block|{
return|return
name|subscriptionRecoveryPolicy
return|;
block|}
specifier|public
name|void
name|setSubscriptionRecoveryPolicy
parameter_list|(
name|SubscriptionRecoveryPolicy
name|subscriptionRecoveryPolicy
parameter_list|)
block|{
name|this
operator|.
name|subscriptionRecoveryPolicy
operator|=
name|subscriptionRecoveryPolicy
expr_stmt|;
block|}
specifier|public
name|boolean
name|isSendAdvisoryIfNoConsumers
parameter_list|()
block|{
return|return
name|sendAdvisoryIfNoConsumers
return|;
block|}
comment|/**      * Sends an advisory message if a non-persistent message is sent and there      * are no active consumers      */
specifier|public
name|void
name|setSendAdvisoryIfNoConsumers
parameter_list|(
name|boolean
name|sendAdvisoryIfNoConsumers
parameter_list|)
block|{
name|this
operator|.
name|sendAdvisoryIfNoConsumers
operator|=
name|sendAdvisoryIfNoConsumers
expr_stmt|;
block|}
specifier|public
name|DeadLetterStrategy
name|getDeadLetterStrategy
parameter_list|()
block|{
return|return
name|deadLetterStrategy
return|;
block|}
comment|/**      * Sets the policy used to determine which dead letter queue destination should be used      */
specifier|public
name|void
name|setDeadLetterStrategy
parameter_list|(
name|DeadLetterStrategy
name|deadLetterStrategy
parameter_list|)
block|{
name|this
operator|.
name|deadLetterStrategy
operator|=
name|deadLetterStrategy
expr_stmt|;
block|}
block|}
end_class

end_unit

