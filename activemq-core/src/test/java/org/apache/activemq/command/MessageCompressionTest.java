begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|JMSException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageConsumer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageProducer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQConnection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|TransportConnector
import|;
end_import

begin_class
specifier|public
class|class
name|MessageCompressionTest
extends|extends
name|TestCase
block|{
specifier|private
specifier|static
specifier|final
name|String
name|BROKER_URL
init|=
literal|"tcp://localhost:61216"
decl_stmt|;
comment|// The following text should compress well
specifier|private
specifier|static
specifier|final
name|String
name|TEXT
init|=
literal|"The quick red fox jumped over the lazy brown dog. "
operator|+
literal|"The quick red fox jumped over the lazy brown dog. "
operator|+
literal|"The quick red fox jumped over the lazy brown dog. "
operator|+
literal|"The quick red fox jumped over the lazy brown dog. "
operator|+
literal|"The quick red fox jumped over the lazy brown dog. "
operator|+
literal|"The quick red fox jumped over the lazy brown dog. "
operator|+
literal|"The quick red fox jumped over the lazy brown dog. "
operator|+
literal|"The quick red fox jumped over the lazy brown dog. "
operator|+
literal|"The quick red fox jumped over the lazy brown dog. "
operator|+
literal|"The quick red fox jumped over the lazy brown dog. "
operator|+
literal|"The quick red fox jumped over the lazy brown dog. "
operator|+
literal|"The quick red fox jumped over the lazy brown dog. "
operator|+
literal|"The quick red fox jumped over the lazy brown dog. "
operator|+
literal|"The quick red fox jumped over the lazy brown dog. "
operator|+
literal|"The quick red fox jumped over the lazy brown dog. "
operator|+
literal|"The quick red fox jumped over the lazy brown dog. "
operator|+
literal|"The quick red fox jumped over the lazy brown dog. "
decl_stmt|;
specifier|protected
name|BrokerService
name|broker
decl_stmt|;
specifier|private
name|ActiveMQQueue
name|queue
decl_stmt|;
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|broker
operator|=
operator|new
name|BrokerService
argument_list|()
expr_stmt|;
name|TransportConnector
name|tc
init|=
operator|new
name|TransportConnector
argument_list|()
decl_stmt|;
name|tc
operator|.
name|setUri
argument_list|(
operator|new
name|URI
argument_list|(
name|BROKER_URL
argument_list|)
argument_list|)
expr_stmt|;
name|tc
operator|.
name|setName
argument_list|(
literal|"tcp"
argument_list|)
expr_stmt|;
name|queue
operator|=
operator|new
name|ActiveMQQueue
argument_list|(
literal|"TEST."
operator|+
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
expr_stmt|;
name|broker
operator|.
name|addConnector
argument_list|(
name|tc
argument_list|)
expr_stmt|;
name|broker
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|broker
operator|!=
literal|null
condition|)
block|{
name|broker
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testTextMessageCompression
parameter_list|()
throws|throws
name|Exception
block|{
name|ActiveMQConnectionFactory
name|factory
init|=
operator|new
name|ActiveMQConnectionFactory
argument_list|(
name|BROKER_URL
argument_list|)
decl_stmt|;
name|factory
operator|.
name|setUseCompression
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|sendTestMessage
argument_list|(
name|factory
argument_list|,
name|TEXT
argument_list|)
expr_stmt|;
name|ActiveMQTextMessage
name|message
init|=
name|receiveTestMessage
argument_list|(
name|factory
argument_list|)
decl_stmt|;
name|int
name|compressedSize
init|=
name|message
operator|.
name|getContent
argument_list|()
operator|.
name|getLength
argument_list|()
decl_stmt|;
name|factory
operator|=
operator|new
name|ActiveMQConnectionFactory
argument_list|(
name|BROKER_URL
argument_list|)
expr_stmt|;
name|factory
operator|.
name|setUseCompression
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|sendTestMessage
argument_list|(
name|factory
argument_list|,
name|TEXT
argument_list|)
expr_stmt|;
name|message
operator|=
name|receiveTestMessage
argument_list|(
name|factory
argument_list|)
expr_stmt|;
name|int
name|unCompressedSize
init|=
name|message
operator|.
name|getContent
argument_list|()
operator|.
name|getLength
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
literal|"expected: compressed Size '"
operator|+
name|compressedSize
operator|+
literal|"'< unCompressedSize '"
operator|+
name|unCompressedSize
operator|+
literal|"'"
argument_list|,
name|compressedSize
operator|<
name|unCompressedSize
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|sendTestMessage
parameter_list|(
name|ActiveMQConnectionFactory
name|factory
parameter_list|,
name|String
name|message
parameter_list|)
throws|throws
name|JMSException
block|{
name|ActiveMQConnection
name|connection
init|=
operator|(
name|ActiveMQConnection
operator|)
name|factory
operator|.
name|createConnection
argument_list|()
decl_stmt|;
name|Session
name|session
init|=
name|connection
operator|.
name|createSession
argument_list|(
literal|false
argument_list|,
name|Session
operator|.
name|AUTO_ACKNOWLEDGE
argument_list|)
decl_stmt|;
name|MessageProducer
name|producer
init|=
name|session
operator|.
name|createProducer
argument_list|(
name|queue
argument_list|)
decl_stmt|;
name|producer
operator|.
name|send
argument_list|(
name|session
operator|.
name|createTextMessage
argument_list|(
name|message
argument_list|)
argument_list|)
expr_stmt|;
name|connection
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|private
name|ActiveMQTextMessage
name|receiveTestMessage
parameter_list|(
name|ActiveMQConnectionFactory
name|factory
parameter_list|)
throws|throws
name|JMSException
block|{
name|ActiveMQConnection
name|connection
init|=
operator|(
name|ActiveMQConnection
operator|)
name|factory
operator|.
name|createConnection
argument_list|()
decl_stmt|;
name|connection
operator|.
name|start
argument_list|()
expr_stmt|;
name|Session
name|session
init|=
name|connection
operator|.
name|createSession
argument_list|(
literal|false
argument_list|,
name|Session
operator|.
name|AUTO_ACKNOWLEDGE
argument_list|)
decl_stmt|;
name|MessageConsumer
name|consumer
init|=
name|session
operator|.
name|createConsumer
argument_list|(
name|queue
argument_list|)
decl_stmt|;
name|ActiveMQTextMessage
name|rc
init|=
operator|(
name|ActiveMQTextMessage
operator|)
name|consumer
operator|.
name|receive
argument_list|()
decl_stmt|;
name|connection
operator|.
name|close
argument_list|()
expr_stmt|;
return|return
name|rc
return|;
block|}
comment|// public void testJavaUtilZip() throws Exception {
comment|// String str = "When the going gets weird, the weird turn pro.";
comment|// byte[] bytes = str.getBytes();
comment|//
comment|// ByteArrayOutputStream baos = new ByteArrayOutputStream(bytes.length);
comment|// DeflaterOutputStream dos = new DeflaterOutputStream(baos);
comment|// dos.
comment|// }
block|}
end_class

end_unit

