begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|jmx
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|NoSuchElementException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CountDownLatch
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadb
operator|.
name|KahaDBStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|util
operator|.
name|Wait
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * Used to verify that the BrokerView accessed while the BrokerSerivce is waiting  * for a Slow Store startup to complete doesn't throw unexpected NullPointerExceptions.  */
end_comment

begin_class
specifier|public
class|class
name|BrokerViewSlowStoreStartupTest
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|BrokerViewSlowStoreStartupTest
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|CountDownLatch
name|holdStoreStart
init|=
operator|new
name|CountDownLatch
argument_list|(
literal|1
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|String
name|brokerName
init|=
literal|"brokerViewTest"
decl_stmt|;
specifier|private
name|BrokerService
name|broker
decl_stmt|;
specifier|private
name|Thread
name|startThread
decl_stmt|;
specifier|private
name|BrokerService
name|createBroker
parameter_list|()
throws|throws
name|Exception
block|{
name|BrokerService
name|broker
init|=
operator|new
name|BrokerService
argument_list|()
decl_stmt|;
name|broker
operator|.
name|setBrokerName
argument_list|(
name|brokerName
argument_list|)
expr_stmt|;
name|KahaDBStore
name|kaha
init|=
operator|new
name|KahaDBStore
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|start
parameter_list|()
throws|throws
name|Exception
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Test KahaDB class is waiting for signal to complete its start()"
argument_list|)
expr_stmt|;
name|holdStoreStart
operator|.
name|await
argument_list|()
expr_stmt|;
name|super
operator|.
name|start
argument_list|()
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Test KahaDB class is completed its start()"
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
name|kaha
operator|.
name|setDirectory
argument_list|(
operator|new
name|File
argument_list|(
literal|"target/activemq-data/kahadb"
argument_list|)
argument_list|)
expr_stmt|;
name|kaha
operator|.
name|deleteAllMessages
argument_list|()
expr_stmt|;
name|broker
operator|.
name|setPersistenceAdapter
argument_list|(
name|kaha
argument_list|)
expr_stmt|;
name|broker
operator|.
name|setUseJmx
argument_list|(
literal|true
argument_list|)
expr_stmt|;
return|return
name|broker
return|;
block|}
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|broker
operator|=
name|createBroker
argument_list|()
expr_stmt|;
name|startThread
operator|=
operator|new
name|Thread
argument_list|(
operator|new
name|Runnable
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
try|try
block|{
name|broker
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{                 }
block|}
block|}
argument_list|)
expr_stmt|;
name|startThread
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
comment|// ensure we don't keep the broker held if an exception occurs somewhere.
name|holdStoreStart
operator|.
name|countDown
argument_list|()
expr_stmt|;
name|startThread
operator|.
name|join
argument_list|()
expr_stmt|;
if|if
condition|(
name|broker
operator|!=
literal|null
condition|)
block|{
name|broker
operator|.
name|stop
argument_list|()
expr_stmt|;
name|broker
operator|.
name|waitUntilStopped
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|120000
argument_list|)
specifier|public
name|void
name|testBrokerViewOnSlowStoreStart
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Ensure we have an Admin View.
name|assertTrue
argument_list|(
name|Wait
operator|.
name|waitFor
argument_list|(
operator|new
name|Wait
operator|.
name|Condition
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|isSatisified
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|(
name|broker
operator|.
name|getAdminView
argument_list|()
operator|)
operator|!=
literal|null
return|;
block|}
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|BrokerView
name|view
init|=
name|broker
operator|.
name|getAdminView
argument_list|()
decl_stmt|;
try|try
block|{
name|view
operator|.
name|getBrokerName
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an IllegalStateException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|view
operator|.
name|getBrokerId
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an IllegalStateException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|view
operator|.
name|getTotalEnqueueCount
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an IllegalStateException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|view
operator|.
name|getTotalDequeueCount
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an IllegalStateException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|view
operator|.
name|getTotalConsumerCount
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an IllegalStateException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|view
operator|.
name|getTotalProducerCount
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an IllegalStateException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|view
operator|.
name|getTotalMessageCount
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an IllegalStateException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|view
operator|.
name|getTotalMessagesCached
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an IllegalStateException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|view
operator|.
name|resetStatistics
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an IllegalStateException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|view
operator|.
name|enableStatistics
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an IllegalStateException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|view
operator|.
name|disableStatistics
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an IllegalStateException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|view
operator|.
name|isStatisticsEnabled
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an IllegalStateException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|view
operator|.
name|getTopics
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an IllegalStateException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|view
operator|.
name|getQueues
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an IllegalStateException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|view
operator|.
name|getTemporaryTopics
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an IllegalStateException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|view
operator|.
name|getTemporaryQueues
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an IllegalStateException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|view
operator|.
name|getTopicSubscribers
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an IllegalStateException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|view
operator|.
name|getDurableTopicSubscribers
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an IllegalStateException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|view
operator|.
name|getQueueSubscribers
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an IllegalStateException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|view
operator|.
name|getTemporaryTopicSubscribers
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an IllegalStateException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|view
operator|.
name|getTemporaryQueueSubscribers
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an IllegalStateException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|view
operator|.
name|getInactiveDurableTopicSubscribers
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an IllegalStateException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|view
operator|.
name|getTopicProducers
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an IllegalStateException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|view
operator|.
name|getQueueProducers
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an IllegalStateException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|view
operator|.
name|getTemporaryTopicProducers
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an IllegalStateException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|view
operator|.
name|getTemporaryQueueProducers
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an IllegalStateException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|view
operator|.
name|getDynamicDestinationProducers
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an IllegalStateException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|view
operator|.
name|removeConnector
argument_list|(
literal|"tcp"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an NoSuchElementException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchElementException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|view
operator|.
name|removeNetworkConnector
argument_list|(
literal|"tcp"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an NoSuchElementException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchElementException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|view
operator|.
name|addTopic
argument_list|(
literal|"TEST"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an IllegalStateException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|view
operator|.
name|addQueue
argument_list|(
literal|"TEST"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an IllegalStateException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|view
operator|.
name|removeTopic
argument_list|(
literal|"TEST"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an IllegalStateException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|view
operator|.
name|removeQueue
argument_list|(
literal|"TEST"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an IllegalStateException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|view
operator|.
name|createDurableSubscriber
argument_list|(
literal|"1"
argument_list|,
literal|"2"
argument_list|,
literal|"3"
argument_list|,
literal|"4"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an IllegalStateException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|view
operator|.
name|destroyDurableSubscriber
argument_list|(
literal|"1"
argument_list|,
literal|"2"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an IllegalStateException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
name|holdStoreStart
operator|.
name|countDown
argument_list|()
expr_stmt|;
name|startThread
operator|.
name|join
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|view
operator|.
name|getBroker
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|view
operator|.
name|getBrokerName
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|fail
argument_list|(
literal|"caught an exception getting the Broker property: "
operator|+
name|e
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|view
operator|.
name|getBrokerId
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{
name|fail
argument_list|(
literal|"caught an exception getting the Broker property: "
operator|+
name|e
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|view
operator|.
name|getTotalEnqueueCount
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{
name|fail
argument_list|(
literal|"caught an exception getting the Broker property: "
operator|+
name|e
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

