begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *   * Copyright 2005 Pawel Tucholski  *  * Licensed under the Apache License, Version 2.0 (the "License");   * you may not use this file except in compliance with the License.   * You may obtain a copy of the License at   *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   * See the License for the specific language governing permissions and   * limitations under the License.   *   **/
end_comment

begin_package
package|package
name|org
operator|.
name|activemq
operator|.
name|store
operator|.
name|jdbc
operator|.
name|adapter
package|;
end_package

begin_import
import|import
name|org
operator|.
name|activemq
operator|.
name|store
operator|.
name|jdbc
operator|.
name|StatementProvider
import|;
end_import

begin_comment
comment|/**  * JDBC Adapter for Informix database.  * Because Informix database restricts length of composite primary keys, length of   *<i>container name</i> field and<i>subscription id</i> field must be reducted to 150 characters.  * Therefore be sure not to use longer names for container name and subscription id than 150 characters.   */
end_comment

begin_class
specifier|public
class|class
name|InformixJDBCAdapter
extends|extends
name|BlobJDBCAdapter
block|{
specifier|public
specifier|static
name|StatementProvider
name|createStatementProvider
parameter_list|()
block|{
name|DefaultStatementProvider
name|answer
init|=
operator|new
name|DefaultStatementProvider
argument_list|()
decl_stmt|;
name|answer
operator|.
name|setContainerNameDataType
argument_list|(
literal|"VARCHAR(150)"
argument_list|)
expr_stmt|;
name|answer
operator|.
name|setStringIdDataType
argument_list|(
literal|"VARCHAR(150)"
argument_list|)
expr_stmt|;
name|answer
operator|.
name|setLongDataType
argument_list|(
literal|"INT8"
argument_list|)
expr_stmt|;
name|answer
operator|.
name|setBinaryDataType
argument_list|(
literal|"BYTE"
argument_list|)
expr_stmt|;
return|return
name|answer
return|;
block|}
specifier|public
name|InformixJDBCAdapter
parameter_list|()
block|{
name|this
argument_list|(
name|createStatementProvider
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|InformixJDBCAdapter
parameter_list|(
name|StatementProvider
name|provider
parameter_list|)
block|{
name|super
argument_list|(
name|provider
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

