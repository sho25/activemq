begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|util
operator|.
name|IntrospectionSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|Connector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|Server
import|;
end_import

begin_class
specifier|public
class|class
name|SocketConnectorFactory
block|{
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|transportOptions
decl_stmt|;
specifier|public
name|Connector
name|createConnector
parameter_list|(
name|Server
name|server
parameter_list|)
throws|throws
name|Exception
block|{
name|Connector
name|connector
init|=
literal|null
decl_stmt|;
try|try
block|{
name|connector
operator|=
operator|(
name|Connector
operator|)
name|Class
operator|.
name|forName
argument_list|(
literal|"org.eclipse.jetty.server.nio.SelectChannelConnector"
argument_list|,
literal|true
argument_list|,
name|Server
operator|.
name|class
operator|.
name|getClassLoader
argument_list|()
argument_list|)
operator|.
name|newInstance
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|c
init|=
name|Class
operator|.
name|forName
argument_list|(
literal|"org.eclipse.jetty.server.ServerConnector"
argument_list|,
literal|true
argument_list|,
name|Server
operator|.
name|class
operator|.
name|getClassLoader
argument_list|()
argument_list|)
decl_stmt|;
name|connector
operator|=
operator|(
name|Connector
operator|)
name|c
operator|.
name|getConstructor
argument_list|(
name|Server
operator|.
name|class
argument_list|)
operator|.
name|newInstance
argument_list|(
name|server
argument_list|)
expr_stmt|;
name|Server
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"setStopTimeout"
argument_list|,
name|Long
operator|.
name|TYPE
argument_list|)
operator|.
name|invoke
argument_list|(
name|server
argument_list|,
literal|500
argument_list|)
expr_stmt|;
name|connector
operator|.
name|getClass
argument_list|()
operator|.
name|getMethod
argument_list|(
literal|"setStopTimeout"
argument_list|,
name|Long
operator|.
name|TYPE
argument_list|)
operator|.
name|invoke
argument_list|(
name|connector
argument_list|,
literal|500
argument_list|)
expr_stmt|;
block|}
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|transportOptions
argument_list|)
expr_stmt|;
if|if
condition|(
name|transportOptions
operator|!=
literal|null
condition|)
block|{
name|IntrospectionSupport
operator|.
name|setProperties
argument_list|(
name|connector
argument_list|,
name|transportOptions
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
return|return
name|connector
return|;
block|}
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getTransportOptions
parameter_list|()
block|{
return|return
name|transportOptions
return|;
block|}
specifier|public
name|void
name|setTransportOptions
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|transportOptions
parameter_list|)
block|{
name|this
operator|.
name|transportOptions
operator|=
name|transportOptions
expr_stmt|;
block|}
block|}
end_class

end_unit

