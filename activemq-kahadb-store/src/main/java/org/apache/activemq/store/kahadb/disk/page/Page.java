begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadb
operator|.
name|disk
operator|.
name|page
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * A Page within a file.  */
end_comment

begin_class
specifier|public
class|class
name|Page
parameter_list|<
name|T
parameter_list|>
block|{
specifier|public
specifier|static
specifier|final
name|int
name|PAGE_HEADER_SIZE
init|=
literal|21
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|byte
name|PAGE_FREE_TYPE
init|=
literal|0
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|byte
name|PAGE_PART_TYPE
init|=
literal|1
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|byte
name|PAGE_END_TYPE
init|=
literal|2
decl_stmt|;
name|long
name|pageId
decl_stmt|;
comment|// The following fields are persisted
name|byte
name|type
init|=
name|PAGE_FREE_TYPE
decl_stmt|;
name|long
name|txId
decl_stmt|;
comment|// A field reserved to hold checksums..  Not in use (yet)
name|int
name|checksum
decl_stmt|;
comment|// Points to the next page in the chunk stream
name|long
name|next
decl_stmt|;
name|T
name|data
decl_stmt|;
specifier|public
name|Page
parameter_list|()
block|{     }
specifier|public
name|Page
parameter_list|(
name|long
name|pageId
parameter_list|)
block|{
name|this
operator|.
name|pageId
operator|=
name|pageId
expr_stmt|;
block|}
specifier|public
name|Page
argument_list|<
name|T
argument_list|>
name|copy
parameter_list|(
name|Page
argument_list|<
name|T
argument_list|>
name|other
parameter_list|)
block|{
name|this
operator|.
name|pageId
operator|=
name|other
operator|.
name|pageId
expr_stmt|;
name|this
operator|.
name|txId
operator|=
name|other
operator|.
name|txId
expr_stmt|;
name|this
operator|.
name|type
operator|=
name|other
operator|.
name|type
expr_stmt|;
name|this
operator|.
name|next
operator|=
name|other
operator|.
name|next
expr_stmt|;
name|this
operator|.
name|data
operator|=
name|other
operator|.
name|data
expr_stmt|;
return|return
name|this
return|;
block|}
name|Page
argument_list|<
name|T
argument_list|>
name|copy
parameter_list|()
block|{
return|return
operator|new
name|Page
argument_list|<
name|T
argument_list|>
argument_list|()
operator|.
name|copy
argument_list|(
name|this
argument_list|)
return|;
block|}
name|void
name|makeFree
parameter_list|(
name|long
name|txId
parameter_list|)
block|{
name|this
operator|.
name|type
operator|=
name|Page
operator|.
name|PAGE_FREE_TYPE
expr_stmt|;
name|this
operator|.
name|txId
operator|=
name|txId
expr_stmt|;
name|this
operator|.
name|data
operator|=
literal|null
expr_stmt|;
name|this
operator|.
name|next
operator|=
literal|0
expr_stmt|;
block|}
specifier|public
name|void
name|makePagePart
parameter_list|(
name|long
name|next
parameter_list|,
name|long
name|txId
parameter_list|)
block|{
name|this
operator|.
name|type
operator|=
name|Page
operator|.
name|PAGE_PART_TYPE
expr_stmt|;
name|this
operator|.
name|next
operator|=
name|next
expr_stmt|;
name|this
operator|.
name|txId
operator|=
name|txId
expr_stmt|;
block|}
specifier|public
name|void
name|makePageEnd
parameter_list|(
name|long
name|size
parameter_list|,
name|long
name|txId
parameter_list|)
block|{
name|this
operator|.
name|type
operator|=
name|Page
operator|.
name|PAGE_END_TYPE
expr_stmt|;
name|this
operator|.
name|next
operator|=
name|size
expr_stmt|;
name|this
operator|.
name|txId
operator|=
name|txId
expr_stmt|;
block|}
name|void
name|write
parameter_list|(
name|DataOutput
name|os
parameter_list|)
throws|throws
name|IOException
block|{
name|os
operator|.
name|writeByte
argument_list|(
name|type
argument_list|)
expr_stmt|;
name|os
operator|.
name|writeLong
argument_list|(
name|txId
argument_list|)
expr_stmt|;
name|os
operator|.
name|writeLong
argument_list|(
name|next
argument_list|)
expr_stmt|;
name|os
operator|.
name|writeInt
argument_list|(
name|checksum
argument_list|)
expr_stmt|;
block|}
name|void
name|read
parameter_list|(
name|DataInput
name|is
parameter_list|)
throws|throws
name|IOException
block|{
name|type
operator|=
name|is
operator|.
name|readByte
argument_list|()
expr_stmt|;
name|txId
operator|=
name|is
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|next
operator|=
name|is
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|checksum
operator|=
name|is
operator|.
name|readInt
argument_list|()
expr_stmt|;
block|}
specifier|public
name|long
name|getPageId
parameter_list|()
block|{
return|return
name|pageId
return|;
block|}
specifier|public
name|long
name|getTxId
parameter_list|()
block|{
return|return
name|txId
return|;
block|}
specifier|public
name|T
name|get
parameter_list|()
block|{
return|return
name|data
return|;
block|}
specifier|public
name|void
name|set
parameter_list|(
name|T
name|data
parameter_list|)
block|{
name|this
operator|.
name|data
operator|=
name|data
expr_stmt|;
block|}
specifier|public
name|short
name|getType
parameter_list|()
block|{
return|return
name|type
return|;
block|}
specifier|public
name|long
name|getNext
parameter_list|()
block|{
return|return
name|next
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"[Page:"
operator|+
name|getPageId
argument_list|()
operator|+
literal|", type: "
operator|+
name|type
operator|+
literal|"]"
return|;
block|}
specifier|public
name|int
name|getChecksum
parameter_list|()
block|{
return|return
name|checksum
return|;
block|}
specifier|public
name|void
name|setChecksum
parameter_list|(
name|int
name|checksum
parameter_list|)
block|{
name|this
operator|.
name|checksum
operator|=
name|checksum
expr_stmt|;
block|}
block|}
end_class

end_unit

