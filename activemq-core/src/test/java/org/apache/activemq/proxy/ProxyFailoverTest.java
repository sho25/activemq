begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|proxy
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|util
operator|.
name|ConsumerThread
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|util
operator|.
name|ProducerThread
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_class
specifier|public
class|class
name|ProxyFailoverTest
extends|extends
name|TestCase
block|{
name|BrokerService
name|proxyBroker
decl_stmt|;
name|BrokerService
name|remoteBroker
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|startRemoteBroker
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|proxyBroker
operator|=
operator|new
name|BrokerService
argument_list|()
expr_stmt|;
name|ProxyConnector
name|connector
init|=
operator|new
name|ProxyConnector
argument_list|()
decl_stmt|;
name|connector
operator|.
name|setBind
argument_list|(
operator|new
name|URI
argument_list|(
literal|"tcp://localhost:51618"
argument_list|)
argument_list|)
expr_stmt|;
name|connector
operator|.
name|setProxyToLocalBroker
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|connector
operator|.
name|setRemote
argument_list|(
operator|new
name|URI
argument_list|(
literal|"failover:(tcp://localhost:61616)"
argument_list|)
argument_list|)
expr_stmt|;
name|proxyBroker
operator|.
name|addProxyConnector
argument_list|(
name|connector
argument_list|)
expr_stmt|;
name|proxyBroker
operator|.
name|setPersistent
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|proxyBroker
operator|.
name|setUseJmx
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|proxyBroker
operator|.
name|start
argument_list|()
expr_stmt|;
name|proxyBroker
operator|.
name|waitUntilStarted
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|proxyBroker
operator|.
name|stop
argument_list|()
expr_stmt|;
name|proxyBroker
operator|.
name|waitUntilStopped
argument_list|()
expr_stmt|;
name|remoteBroker
operator|.
name|stop
argument_list|()
expr_stmt|;
name|remoteBroker
operator|.
name|waitUntilStopped
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testFailover
parameter_list|()
throws|throws
name|Exception
block|{
name|ActiveMQConnectionFactory
name|producerFactory
init|=
operator|new
name|ActiveMQConnectionFactory
argument_list|(
literal|"failover:(tcp://localhost:61616,tcp://localhost:61626)?randomize=false"
argument_list|)
decl_stmt|;
name|Connection
name|producerConnection
init|=
name|producerFactory
operator|.
name|createConnection
argument_list|()
decl_stmt|;
name|producerConnection
operator|.
name|start
argument_list|()
expr_stmt|;
name|Session
name|producerSession
init|=
name|producerConnection
operator|.
name|createSession
argument_list|(
literal|false
argument_list|,
name|Session
operator|.
name|AUTO_ACKNOWLEDGE
argument_list|)
decl_stmt|;
name|ProducerThread
name|producer
init|=
operator|new
name|ProducerThread
argument_list|(
name|producerSession
argument_list|,
name|producerSession
operator|.
name|createQueue
argument_list|(
literal|"ProxyTest"
argument_list|)
argument_list|)
decl_stmt|;
name|producer
operator|.
name|setSleep
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|producer
operator|.
name|start
argument_list|()
expr_stmt|;
comment|//ActiveMQConnectionFactory consumerFactory = new ActiveMQConnectionFactory("tcp://localhost:51618?wireFormat.cacheEnabled=false");
name|ActiveMQConnectionFactory
name|consumerFactory
init|=
operator|new
name|ActiveMQConnectionFactory
argument_list|(
literal|"tcp://localhost:51618"
argument_list|)
decl_stmt|;
name|Connection
name|consumerConnection
init|=
name|consumerFactory
operator|.
name|createConnection
argument_list|()
decl_stmt|;
name|consumerConnection
operator|.
name|start
argument_list|()
expr_stmt|;
name|Session
name|consumerSession
init|=
name|consumerConnection
operator|.
name|createSession
argument_list|(
literal|false
argument_list|,
name|Session
operator|.
name|AUTO_ACKNOWLEDGE
argument_list|)
decl_stmt|;
name|ConsumerThread
name|consumer
init|=
operator|new
name|ConsumerThread
argument_list|(
name|consumerSession
argument_list|,
name|consumerSession
operator|.
name|createQueue
argument_list|(
literal|"ProxyTest"
argument_list|)
argument_list|)
decl_stmt|;
name|consumer
operator|.
name|start
argument_list|()
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|10
operator|*
literal|1000
argument_list|)
expr_stmt|;
name|remoteBroker
operator|.
name|stop
argument_list|()
expr_stmt|;
name|remoteBroker
operator|.
name|waitUntilStopped
argument_list|()
expr_stmt|;
name|startRemoteBroker
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|producer
operator|.
name|join
argument_list|()
expr_stmt|;
name|consumer
operator|.
name|join
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|1000
argument_list|,
name|consumer
operator|.
name|getReceived
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|startRemoteBroker
parameter_list|(
name|boolean
name|delete
parameter_list|)
throws|throws
name|Exception
block|{
name|remoteBroker
operator|=
operator|new
name|BrokerService
argument_list|()
expr_stmt|;
name|remoteBroker
operator|.
name|addConnector
argument_list|(
literal|"tcp://localhost:61616"
argument_list|)
expr_stmt|;
if|if
condition|(
name|delete
condition|)
block|{
name|remoteBroker
operator|.
name|deleteAllMessages
argument_list|()
expr_stmt|;
block|}
name|remoteBroker
operator|.
name|setUseJmx
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|remoteBroker
operator|.
name|start
argument_list|()
expr_stmt|;
name|remoteBroker
operator|.
name|waitUntilStarted
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

