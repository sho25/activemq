begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|management
package|;
end_package

begin_comment
comment|/**  * Statistics for a JCA connection pool  *  * @version $Revision: 1.2 $  */
end_comment

begin_class
specifier|public
class|class
name|JCAConnectionPoolStatsImpl
extends|extends
name|JCAConnectionStatsImpl
block|{
specifier|private
name|CountStatisticImpl
name|closeCount
decl_stmt|;
specifier|private
name|CountStatisticImpl
name|createCount
decl_stmt|;
specifier|private
name|BoundedRangeStatisticImpl
name|freePoolSize
decl_stmt|;
specifier|private
name|BoundedRangeStatisticImpl
name|poolSize
decl_stmt|;
specifier|private
name|RangeStatisticImpl
name|waitingThreadCount
decl_stmt|;
specifier|public
name|JCAConnectionPoolStatsImpl
parameter_list|(
name|String
name|connectionFactory
parameter_list|,
name|String
name|managedConnectionFactory
parameter_list|,
name|TimeStatisticImpl
name|waitTime
parameter_list|,
name|TimeStatisticImpl
name|useTime
parameter_list|,
name|CountStatisticImpl
name|closeCount
parameter_list|,
name|CountStatisticImpl
name|createCount
parameter_list|,
name|BoundedRangeStatisticImpl
name|freePoolSize
parameter_list|,
name|BoundedRangeStatisticImpl
name|poolSize
parameter_list|,
name|RangeStatisticImpl
name|waitingThreadCount
parameter_list|)
block|{
name|super
argument_list|(
name|connectionFactory
argument_list|,
name|managedConnectionFactory
argument_list|,
name|waitTime
argument_list|,
name|useTime
argument_list|)
expr_stmt|;
name|this
operator|.
name|closeCount
operator|=
name|closeCount
expr_stmt|;
name|this
operator|.
name|createCount
operator|=
name|createCount
expr_stmt|;
name|this
operator|.
name|freePoolSize
operator|=
name|freePoolSize
expr_stmt|;
name|this
operator|.
name|poolSize
operator|=
name|poolSize
expr_stmt|;
name|this
operator|.
name|waitingThreadCount
operator|=
name|waitingThreadCount
expr_stmt|;
comment|// lets add named stats
name|addStatistic
argument_list|(
literal|"freePoolSize"
argument_list|,
name|freePoolSize
argument_list|)
expr_stmt|;
name|addStatistic
argument_list|(
literal|"poolSize"
argument_list|,
name|poolSize
argument_list|)
expr_stmt|;
name|addStatistic
argument_list|(
literal|"waitingThreadCount"
argument_list|,
name|waitingThreadCount
argument_list|)
expr_stmt|;
block|}
specifier|public
name|CountStatisticImpl
name|getCloseCount
parameter_list|()
block|{
return|return
name|closeCount
return|;
block|}
specifier|public
name|CountStatisticImpl
name|getCreateCount
parameter_list|()
block|{
return|return
name|createCount
return|;
block|}
specifier|public
name|BoundedRangeStatisticImpl
name|getFreePoolSize
parameter_list|()
block|{
return|return
name|freePoolSize
return|;
block|}
specifier|public
name|BoundedRangeStatisticImpl
name|getPoolSize
parameter_list|()
block|{
return|return
name|poolSize
return|;
block|}
specifier|public
name|RangeStatisticImpl
name|getWaitingThreadCount
parameter_list|()
block|{
return|return
name|waitingThreadCount
return|;
block|}
block|}
end_class

end_unit

