begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2006 The Apache Software Foundation.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|jpa
operator|.
name|model
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Basic
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Entity
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|GeneratedValue
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|GenerationType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Id
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|openjpa
operator|.
name|persistence
operator|.
name|jdbc
operator|.
name|Index
import|;
end_import

begin_comment
comment|/**   */
end_comment

begin_class
annotation|@
name|Entity
specifier|public
class|class
name|StoredSubscription
block|{
comment|/**      * Application identity class for Magazine.      */
specifier|public
specifier|static
class|class
name|SubscriptionId
block|{
specifier|public
name|String
name|destination
decl_stmt|;
specifier|public
name|String
name|clientId
decl_stmt|;
specifier|public
name|String
name|subscriptionName
decl_stmt|;
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|this
condition|)
return|return
literal|true
return|;
if|if
condition|(
operator|!
operator|(
name|other
operator|instanceof
name|SubscriptionId
operator|)
condition|)
return|return
literal|false
return|;
name|SubscriptionId
name|sid
init|=
operator|(
name|SubscriptionId
operator|)
name|other
decl_stmt|;
return|return
operator|(
name|destination
operator|==
name|sid
operator|.
name|destination
operator|||
operator|(
name|destination
operator|!=
literal|null
operator|&&
name|destination
operator|.
name|equals
argument_list|(
name|sid
operator|.
name|destination
argument_list|)
operator|)
operator|)
operator|&&
operator|(
name|clientId
operator|==
name|sid
operator|.
name|clientId
operator|||
operator|(
name|clientId
operator|!=
literal|null
operator|&&
name|clientId
operator|.
name|equals
argument_list|(
name|sid
operator|.
name|clientId
argument_list|)
operator|)
operator|)
operator|&&
operator|(
name|subscriptionName
operator|==
name|sid
operator|.
name|subscriptionName
operator|||
operator|(
name|subscriptionName
operator|!=
literal|null
operator|&&
name|subscriptionName
operator|.
name|equals
argument_list|(
name|sid
operator|.
name|subscriptionName
argument_list|)
operator|)
operator|)
return|;
block|}
comment|/**          * Hashcode must also depend on identity values.          */
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
operator|(
operator|(
name|destination
operator|==
literal|null
operator|)
condition|?
literal|0
else|:
name|destination
operator|.
name|hashCode
argument_list|()
operator|)
operator|^
operator|(
operator|(
name|clientId
operator|==
literal|null
operator|)
condition|?
literal|0
else|:
name|clientId
operator|.
name|hashCode
argument_list|()
operator|)
operator|^
operator|(
operator|(
name|subscriptionName
operator|==
literal|null
operator|)
condition|?
literal|0
else|:
name|subscriptionName
operator|.
name|hashCode
argument_list|()
operator|)
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|destination
operator|+
literal|":"
operator|+
name|clientId
operator|+
literal|":"
operator|+
name|subscriptionName
return|;
block|}
specifier|public
name|String
name|getClientId
parameter_list|()
block|{
return|return
name|clientId
return|;
block|}
specifier|public
name|void
name|setClientId
parameter_list|(
name|String
name|clientId
parameter_list|)
block|{
name|this
operator|.
name|clientId
operator|=
name|clientId
expr_stmt|;
block|}
specifier|public
name|String
name|getDestination
parameter_list|()
block|{
return|return
name|destination
return|;
block|}
specifier|public
name|void
name|setDestination
parameter_list|(
name|String
name|destination
parameter_list|)
block|{
name|this
operator|.
name|destination
operator|=
name|destination
expr_stmt|;
block|}
specifier|public
name|String
name|getSubscriptionName
parameter_list|()
block|{
return|return
name|subscriptionName
return|;
block|}
specifier|public
name|void
name|setSubscriptionName
parameter_list|(
name|String
name|subscriptionName
parameter_list|)
block|{
name|this
operator|.
name|subscriptionName
operator|=
name|subscriptionName
expr_stmt|;
block|}
block|}
annotation|@
name|Id
annotation|@
name|GeneratedValue
argument_list|(
name|strategy
operator|=
name|GenerationType
operator|.
name|AUTO
argument_list|)
specifier|private
name|long
name|id
decl_stmt|;
annotation|@
name|Basic
annotation|@
name|Index
argument_list|(
name|enabled
operator|=
literal|true
argument_list|,
name|unique
operator|=
literal|false
argument_list|)
specifier|private
name|String
name|destination
decl_stmt|;
annotation|@
name|Basic
annotation|@
name|Index
argument_list|(
name|enabled
operator|=
literal|true
argument_list|,
name|unique
operator|=
literal|false
argument_list|)
specifier|private
name|String
name|clientId
decl_stmt|;
annotation|@
name|Basic
annotation|@
name|Index
argument_list|(
name|enabled
operator|=
literal|true
argument_list|,
name|unique
operator|=
literal|false
argument_list|)
specifier|private
name|String
name|subscriptionName
decl_stmt|;
annotation|@
name|Basic
specifier|private
name|long
name|lastAckedId
decl_stmt|;
annotation|@
name|Basic
specifier|private
name|String
name|selector
decl_stmt|;
specifier|public
name|long
name|getLastAckedId
parameter_list|()
block|{
return|return
name|lastAckedId
return|;
block|}
specifier|public
name|void
name|setLastAckedId
parameter_list|(
name|long
name|lastAckedId
parameter_list|)
block|{
name|this
operator|.
name|lastAckedId
operator|=
name|lastAckedId
expr_stmt|;
block|}
specifier|public
name|String
name|getSelector
parameter_list|()
block|{
return|return
name|selector
return|;
block|}
specifier|public
name|void
name|setSelector
parameter_list|(
name|String
name|selector
parameter_list|)
block|{
name|this
operator|.
name|selector
operator|=
name|selector
expr_stmt|;
block|}
specifier|public
name|String
name|getDestination
parameter_list|()
block|{
return|return
name|destination
return|;
block|}
specifier|public
name|void
name|setDestination
parameter_list|(
name|String
name|destination
parameter_list|)
block|{
name|this
operator|.
name|destination
operator|=
name|destination
expr_stmt|;
block|}
specifier|public
name|String
name|getClientId
parameter_list|()
block|{
return|return
name|clientId
return|;
block|}
specifier|public
name|void
name|setClientId
parameter_list|(
name|String
name|clientId
parameter_list|)
block|{
name|this
operator|.
name|clientId
operator|=
name|clientId
expr_stmt|;
block|}
specifier|public
name|String
name|getSubscriptionName
parameter_list|()
block|{
return|return
name|subscriptionName
return|;
block|}
specifier|public
name|void
name|setSubscriptionName
parameter_list|(
name|String
name|subscriptionName
parameter_list|)
block|{
name|this
operator|.
name|subscriptionName
operator|=
name|subscriptionName
expr_stmt|;
block|}
specifier|public
name|long
name|getId
parameter_list|()
block|{
return|return
name|id
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|long
name|id
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
block|}
block|}
end_class

end_unit

