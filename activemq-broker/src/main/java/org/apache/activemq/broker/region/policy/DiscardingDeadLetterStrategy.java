begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|policy
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * A {@link DeadLetterStrategy} where each destination has its own individual  * DLQ using the subject naming hierarchy.  *  * @org.apache.xbean.XBean element="discarding" description="Dead Letter Strategy that discards all messages"  *  */
end_comment

begin_class
specifier|public
class|class
name|DiscardingDeadLetterStrategy
extends|extends
name|SharedDeadLetterStrategy
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|DiscardingDeadLetterStrategy
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Override
specifier|public
name|boolean
name|isSendToDeadLetterQueue
parameter_list|(
name|Message
name|message
parameter_list|)
block|{
name|boolean
name|result
init|=
literal|false
decl_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"Discarding message sent to DLQ: {}, dest: {}"
argument_list|,
name|message
operator|.
name|getMessageId
argument_list|()
argument_list|,
name|message
operator|.
name|getDestination
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
block|}
end_class

end_unit

