begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|plugin
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|Broker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|ProducerBrokerExchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * A Plugin which allows to force every incoming message to be PERSISTENT or NON-PERSISTENT.   *   * Useful, if you have set the broker usage policy to process ONLY persistent or ONLY non-persistent  * messages.   * @org.apache.xbean.XBean element="forcePersistencyModeBroker"  */
end_comment

begin_class
specifier|public
class|class
name|ForcePersistencyModeBroker
extends|extends
name|BrokerFilter
block|{
specifier|public
specifier|static
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|ForcePersistencyModeBroker
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|boolean
name|persistence
init|=
literal|false
decl_stmt|;
comment|/**    * @return the persistenceFlag    */
specifier|public
name|boolean
name|isPersistent
parameter_list|()
block|{
return|return
name|persistence
return|;
block|}
comment|/**    * @param persistenceFlag the persistenceFlag to set    */
specifier|public
name|void
name|setPersistenceFlag
parameter_list|(
name|boolean
name|mode
parameter_list|)
block|{
name|this
operator|.
name|persistence
operator|=
name|mode
expr_stmt|;
block|}
comment|/**    * Constructor    * @param next    */
specifier|public
name|ForcePersistencyModeBroker
parameter_list|(
name|Broker
name|next
parameter_list|)
block|{
name|super
argument_list|(
name|next
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|this
operator|.
name|getBrokerSequenceId
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/** Sets the persistence mode    * @see org.apache.activemq.broker.BrokerFilter#send(org.apache.activemq.broker.ProducerBrokerExchange, org.apache.activemq.command.Message)    */
specifier|public
name|void
name|send
parameter_list|(
name|ProducerBrokerExchange
name|producerExchange
parameter_list|,
name|Message
name|messageSend
parameter_list|)
throws|throws
name|Exception
block|{
name|messageSend
operator|.
name|getMessage
argument_list|()
operator|.
name|setPersistent
argument_list|(
name|isPersistent
argument_list|()
argument_list|)
expr_stmt|;
name|next
operator|.
name|send
argument_list|(
name|producerExchange
argument_list|,
name|messageSend
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

