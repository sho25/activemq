begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Copyright 2004 The Apache Software Foundation  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   * See the License for the specific language governing permissions and   * limitations under the License.   *   **/
end_comment

begin_package
package|package
name|org
operator|.
name|activecluster
package|;
end_package

begin_import
import|import
name|org
operator|.
name|activecluster
operator|.
name|impl
operator|.
name|ActiveMQClusterFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Destination
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|JMSException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageConsumer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Topic
import|;
end_import

begin_comment
comment|/**  * @version $Revision: 1.3 $  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|ClusterTestSupport
extends|extends
name|TestSupport
block|{
specifier|protected
name|Cluster
name|cluster
decl_stmt|;
specifier|protected
name|StubMessageListener
name|clusterListener
init|=
operator|new
name|StubMessageListener
argument_list|()
decl_stmt|;
specifier|protected
name|StubMessageListener
name|inboxListener
init|=
operator|new
name|StubMessageListener
argument_list|()
decl_stmt|;
specifier|private
name|MessageConsumer
name|clusterConsumer
decl_stmt|;
specifier|private
name|MessageConsumer
name|inboxConsumer
decl_stmt|;
specifier|protected
name|void
name|sendMessageToNode
parameter_list|(
name|Node
name|node
parameter_list|,
name|String
name|text
parameter_list|)
throws|throws
name|Exception
block|{
name|Message
name|message
init|=
name|cluster
operator|.
name|createTextMessage
argument_list|(
name|text
argument_list|)
decl_stmt|;
name|cluster
operator|.
name|send
argument_list|(
name|node
operator|.
name|getDestination
argument_list|()
argument_list|,
name|message
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|sendMessageToCluster
parameter_list|(
name|String
name|text
parameter_list|)
throws|throws
name|Exception
block|{
name|Message
name|message
init|=
name|cluster
operator|.
name|createTextMessage
argument_list|(
name|text
argument_list|)
decl_stmt|;
name|cluster
operator|.
name|send
argument_list|(
name|cluster
operator|.
name|getDestination
argument_list|()
argument_list|,
name|message
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|subscribeToCluster
parameter_list|()
throws|throws
name|Exception
block|{
comment|// listen to cluster messages
name|Destination
name|clusterDestination
init|=
name|cluster
operator|.
name|getDestination
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Local destination must not be null"
argument_list|,
name|clusterDestination
operator|!=
literal|null
argument_list|)
expr_stmt|;
name|clusterConsumer
operator|=
name|cluster
operator|.
name|createConsumer
argument_list|(
name|clusterDestination
argument_list|)
expr_stmt|;
name|clusterConsumer
operator|.
name|setMessageListener
argument_list|(
name|clusterListener
argument_list|)
expr_stmt|;
comment|// listen to inbox messages (individual messages)
name|Destination
name|localDestination
init|=
name|cluster
operator|.
name|getLocalNode
argument_list|()
operator|.
name|getDestination
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Local destination must not be null"
argument_list|,
name|localDestination
operator|!=
literal|null
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Consuming from local destination: "
operator|+
name|localDestination
argument_list|)
expr_stmt|;
name|inboxConsumer
operator|=
name|cluster
operator|.
name|createConsumer
argument_list|(
name|localDestination
argument_list|)
expr_stmt|;
name|inboxConsumer
operator|.
name|setMessageListener
argument_list|(
name|inboxListener
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{     }
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|cluster
operator|!=
literal|null
condition|)
block|{
name|cluster
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

