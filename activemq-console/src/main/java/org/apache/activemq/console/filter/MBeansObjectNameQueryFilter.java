begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|console
operator|.
name|filter
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|MBeanServerConnection
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|MalformedObjectNameException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|ObjectName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|QueryExp
import|;
end_import

begin_class
specifier|public
class|class
name|MBeansObjectNameQueryFilter
extends|extends
name|AbstractQueryFilter
block|{
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT_JMX_DOMAIN
init|=
literal|"org.apache.activemq"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|QUERY_EXP_PREFIX
init|=
literal|"MBeans.QueryExp."
decl_stmt|;
specifier|private
name|MBeanServerConnection
name|jmxConnection
decl_stmt|;
comment|/**      * Creates an mbeans object name query filter that will query on the given      * JMX connection      *       * @param jmxConnection - JMX connection to use      */
specifier|public
name|MBeansObjectNameQueryFilter
parameter_list|(
name|MBeanServerConnection
name|jmxConnection
parameter_list|)
block|{
name|super
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|this
operator|.
name|jmxConnection
operator|=
name|jmxConnection
expr_stmt|;
block|}
comment|/**      * Queries the JMX service using a mapping of keys and values to construct      * the object name      *       * @param queries - mapping of keys and values      * @return collection of ObjectInstance that matches the query      * @throws MalformedObjectNameException - if the given string is an invalid      *                 object name      * @throws IOException - if there is a problem querying the JMX context      */
specifier|public
name|List
name|query
parameter_list|(
name|List
name|queries
parameter_list|)
throws|throws
name|MalformedObjectNameException
throws|,
name|IOException
block|{
comment|// Query all mbeans
if|if
condition|(
name|queries
operator|==
literal|null
operator|||
name|queries
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
return|return
name|queryMBeans
argument_list|(
operator|new
name|ObjectName
argument_list|(
name|DEFAULT_JMX_DOMAIN
operator|+
literal|":*"
argument_list|)
argument_list|,
literal|null
argument_list|)
return|;
block|}
comment|// Constructs object name query
name|String
name|objNameQuery
init|=
literal|""
decl_stmt|;
name|String
name|queryExp
init|=
literal|""
decl_stmt|;
name|String
name|delimiter
init|=
literal|""
decl_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|queries
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|String
name|key
init|=
operator|(
name|String
operator|)
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
name|String
name|val
init|=
literal|""
decl_stmt|;
name|int
name|pos
init|=
name|key
operator|.
name|indexOf
argument_list|(
literal|"="
argument_list|)
decl_stmt|;
if|if
condition|(
name|pos
operator|>=
literal|0
condition|)
block|{
name|val
operator|=
name|key
operator|.
name|substring
argument_list|(
name|pos
operator|+
literal|1
argument_list|)
expr_stmt|;
name|key
operator|=
name|key
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|pos
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|objNameQuery
operator|+=
name|delimiter
operator|+
name|key
expr_stmt|;
block|}
if|if
condition|(
name|val
operator|.
name|startsWith
argument_list|(
name|QUERY_EXP_PREFIX
argument_list|)
condition|)
block|{
comment|// do nothing as of the moment
block|}
elseif|else
if|if
condition|(
operator|!
name|key
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
operator|&&
operator|!
name|val
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
condition|)
block|{
name|objNameQuery
operator|+=
name|delimiter
operator|+
name|key
operator|+
literal|"="
operator|+
name|val
expr_stmt|;
name|delimiter
operator|=
literal|","
expr_stmt|;
block|}
block|}
return|return
name|queryMBeans
argument_list|(
operator|new
name|ObjectName
argument_list|(
name|DEFAULT_JMX_DOMAIN
operator|+
literal|":"
operator|+
name|objNameQuery
argument_list|)
argument_list|,
name|queryExp
argument_list|)
return|;
block|}
comment|/**      * Advance query that enables you to specify both the object name and the      * query expression to use. Note: Query expression is currently unsupported.      *       * @param objName - object name to use for query      * @param queryExpStr - query expression string      * @return set of mbeans that matches the query      * @throws IOException - if there is a problem querying the JMX context      */
specifier|protected
name|List
name|queryMBeans
parameter_list|(
name|ObjectName
name|objName
parameter_list|,
name|String
name|queryExpStr
parameter_list|)
throws|throws
name|IOException
block|{
name|QueryExp
name|queryExp
init|=
name|createQueryExp
argument_list|(
name|queryExpStr
argument_list|)
decl_stmt|;
comment|// Convert mbeans set to list to make it standard throughout the query
comment|// filter
name|List
name|mbeans
init|=
operator|new
name|ArrayList
argument_list|(
name|jmxConnection
operator|.
name|queryMBeans
argument_list|(
name|objName
argument_list|,
name|queryExp
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|mbeans
return|;
block|}
comment|/**      * Creates a query expression based on the query expression string Note:      * currently unsupported      *       * @param queryExpStr - query expression string      * @return the created query expression      */
specifier|protected
name|QueryExp
name|createQueryExp
parameter_list|(
name|String
name|queryExpStr
parameter_list|)
block|{
comment|// Currently unsupported
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

