begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *   * Copyright 2005-2006 The Apache Software Foundation  *   * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with  * the License. You may obtain a copy of the License at  *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on  * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the  * specific language governing permissions and limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|kaha
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Externalizable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ObjectInput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ObjectOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|kaha
operator|.
name|Marshaller
import|;
end_import

begin_comment
comment|/** * A an Item with a relative postion and location to other Items in the Store *  * @version $Revision: 1.2 $ */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|LocatableItem
extends|extends
name|Item
implements|implements
name|Externalizable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
operator|-
literal|6888731361600185708L
decl_stmt|;
specifier|private
name|long
name|previousItem
init|=
name|POSITION_NOT_SET
decl_stmt|;
specifier|private
name|long
name|nextItem
init|=
name|POSITION_NOT_SET
decl_stmt|;
specifier|private
name|long
name|referenceItem
init|=
name|POSITION_NOT_SET
decl_stmt|;
specifier|public
name|LocatableItem
parameter_list|()
block|{}
specifier|public
name|LocatableItem
parameter_list|(
name|long
name|prev
parameter_list|,
name|long
name|next
parameter_list|,
name|long
name|objOffset
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|previousItem
operator|=
name|prev
expr_stmt|;
name|this
operator|.
name|nextItem
operator|=
name|next
expr_stmt|;
name|this
operator|.
name|referenceItem
operator|=
name|objOffset
expr_stmt|;
block|}
specifier|public
name|void
name|writePayload
parameter_list|(
name|Marshaller
name|marshaller
parameter_list|,
name|Object
name|object
parameter_list|,
name|DataOutputStream
name|dataOut
parameter_list|)
throws|throws
name|IOException
block|{
name|dataOut
operator|.
name|writeLong
argument_list|(
name|previousItem
argument_list|)
expr_stmt|;
name|dataOut
operator|.
name|writeLong
argument_list|(
name|nextItem
argument_list|)
expr_stmt|;
name|dataOut
operator|.
name|writeLong
argument_list|(
name|referenceItem
argument_list|)
expr_stmt|;
name|super
operator|.
name|writePayload
argument_list|(
name|marshaller
argument_list|,
name|object
argument_list|,
name|dataOut
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Object
name|readPayload
parameter_list|(
name|Marshaller
name|marshaller
parameter_list|,
name|DataInputStream
name|dataIn
parameter_list|)
throws|throws
name|IOException
block|{
name|previousItem
operator|=
name|dataIn
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|nextItem
operator|=
name|dataIn
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|referenceItem
operator|=
name|dataIn
operator|.
name|readLong
argument_list|()
expr_stmt|;
return|return
name|super
operator|.
name|readPayload
argument_list|(
name|marshaller
argument_list|,
name|dataIn
argument_list|)
return|;
block|}
name|void
name|readLocation
parameter_list|(
name|DataInput
name|dataIn
parameter_list|)
throws|throws
name|IOException
block|{
name|previousItem
operator|=
name|dataIn
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|nextItem
operator|=
name|dataIn
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|referenceItem
operator|=
name|dataIn
operator|.
name|readLong
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|writeLocation
parameter_list|(
name|DataOutput
name|dataOut
parameter_list|)
throws|throws
name|IOException
block|{
name|dataOut
operator|.
name|writeLong
argument_list|(
name|previousItem
argument_list|)
expr_stmt|;
name|dataOut
operator|.
name|writeLong
argument_list|(
name|nextItem
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setPreviousItem
parameter_list|(
name|long
name|newPrevEntry
parameter_list|)
block|{
name|previousItem
operator|=
name|newPrevEntry
expr_stmt|;
block|}
specifier|public
name|long
name|getPreviousItem
parameter_list|()
block|{
return|return
name|previousItem
return|;
block|}
specifier|public
name|void
name|setNextItem
parameter_list|(
name|long
name|newNextEntry
parameter_list|)
block|{
name|nextItem
operator|=
name|newNextEntry
expr_stmt|;
block|}
specifier|public
name|long
name|getNextItem
parameter_list|()
block|{
return|return
name|nextItem
return|;
block|}
specifier|public
name|void
name|setReferenceItem
parameter_list|(
name|long
name|newObjectOffset
parameter_list|)
block|{
name|referenceItem
operator|=
name|newObjectOffset
expr_stmt|;
block|}
specifier|public
name|long
name|getReferenceItem
parameter_list|()
block|{
return|return
name|referenceItem
return|;
block|}
comment|/* (non-Javadoc)      * @see org.apache.activemq.kaha.impl.Item#toString()      */
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|String
name|result
init|=
name|super
operator|.
name|toString
argument_list|()
decl_stmt|;
name|result
operator|+=
literal|" , referenceItem = "
operator|+
name|referenceItem
operator|+
literal|", previousItem = "
operator|+
name|previousItem
operator|+
literal|" , nextItem = "
operator|+
name|nextItem
expr_stmt|;
return|return
name|result
return|;
block|}
comment|/* (non-Javadoc)      * @see java.io.Externalizable#writeExternal(java.io.ObjectOutput)      */
specifier|public
name|void
name|writeExternal
parameter_list|(
name|ObjectOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|out
operator|.
name|writeLong
argument_list|(
name|previousItem
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|nextItem
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|referenceItem
argument_list|)
expr_stmt|;
block|}
comment|/* (non-Javadoc)      * @see java.io.Externalizable#readExternal(java.io.ObjectInput)      */
specifier|public
name|void
name|readExternal
parameter_list|(
name|ObjectInput
name|in
parameter_list|)
throws|throws
name|IOException
throws|,
name|ClassNotFoundException
block|{
name|previousItem
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|nextItem
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|referenceItem
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

