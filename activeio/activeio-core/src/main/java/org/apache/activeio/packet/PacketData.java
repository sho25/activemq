begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Copyright 2005-2006 The Apache Software Foundation  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activeio
operator|.
name|packet
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|EOFException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * Used to write and read primitives to and from a Packet.  */
end_comment

begin_class
specifier|final
specifier|public
class|class
name|PacketData
block|{
specifier|final
specifier|private
name|Packet
name|packet
decl_stmt|;
specifier|private
specifier|final
name|boolean
name|bigEndian
decl_stmt|;
specifier|public
name|PacketData
parameter_list|(
name|Packet
name|packet
parameter_list|)
block|{
name|this
argument_list|(
name|packet
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|public
name|PacketData
parameter_list|(
name|Packet
name|packet
parameter_list|,
name|boolean
name|bigEndian
parameter_list|)
block|{
name|this
operator|.
name|packet
operator|=
name|packet
expr_stmt|;
name|this
operator|.
name|bigEndian
operator|=
name|bigEndian
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|spaceNeeded
parameter_list|(
name|Packet
name|packet
parameter_list|,
name|int
name|space
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|packet
operator|.
name|remaining
argument_list|()
operator|<
name|space
condition|)
throw|throw
operator|new
name|EOFException
argument_list|(
literal|"Not enough space left in the packet."
argument_list|)
throw|;
block|}
specifier|public
name|void
name|readFully
parameter_list|(
name|byte
index|[]
name|b
parameter_list|)
throws|throws
name|IOException
block|{
name|readFully
argument_list|(
name|packet
argument_list|,
name|b
argument_list|,
literal|0
argument_list|,
name|b
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|readFully
parameter_list|(
name|Packet
name|packet
parameter_list|,
name|byte
index|[]
name|b
parameter_list|)
throws|throws
name|IOException
block|{
name|readFully
argument_list|(
name|packet
argument_list|,
name|b
argument_list|,
literal|0
argument_list|,
name|b
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|readFully
parameter_list|(
name|byte
index|[]
name|b
parameter_list|,
name|int
name|off
parameter_list|,
name|int
name|len
parameter_list|)
throws|throws
name|IOException
block|{
name|readFully
argument_list|(
name|packet
argument_list|,
name|b
argument_list|,
name|off
argument_list|,
name|len
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|readFully
parameter_list|(
name|Packet
name|packet
parameter_list|,
name|byte
index|[]
name|b
parameter_list|,
name|int
name|off
parameter_list|,
name|int
name|len
parameter_list|)
throws|throws
name|IOException
block|{
name|spaceNeeded
argument_list|(
name|packet
argument_list|,
name|len
argument_list|)
expr_stmt|;
name|packet
operator|.
name|read
argument_list|(
name|b
argument_list|,
name|off
argument_list|,
name|len
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|skipBytes
parameter_list|(
name|int
name|n
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|skipBytes
argument_list|(
name|packet
argument_list|,
name|n
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|int
name|skipBytes
parameter_list|(
name|Packet
name|packet
parameter_list|,
name|int
name|n
parameter_list|)
throws|throws
name|IOException
block|{
name|int
name|rc
init|=
name|Math
operator|.
name|min
argument_list|(
name|n
argument_list|,
name|packet
operator|.
name|remaining
argument_list|()
argument_list|)
decl_stmt|;
name|packet
operator|.
name|position
argument_list|(
name|packet
operator|.
name|position
argument_list|()
operator|+
name|rc
argument_list|)
expr_stmt|;
return|return
name|rc
return|;
block|}
specifier|public
name|boolean
name|readBoolean
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|readBoolean
argument_list|(
name|packet
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|boolean
name|readBoolean
parameter_list|(
name|Packet
name|packet
parameter_list|)
throws|throws
name|IOException
block|{
name|spaceNeeded
argument_list|(
name|packet
argument_list|,
literal|1
argument_list|)
expr_stmt|;
return|return
name|packet
operator|.
name|read
argument_list|()
operator|!=
literal|0
return|;
block|}
specifier|public
name|byte
name|readByte
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|readByte
argument_list|(
name|packet
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|byte
name|readByte
parameter_list|(
name|Packet
name|packet
parameter_list|)
throws|throws
name|IOException
block|{
name|spaceNeeded
argument_list|(
name|packet
argument_list|,
literal|1
argument_list|)
expr_stmt|;
return|return
operator|(
name|byte
operator|)
name|packet
operator|.
name|read
argument_list|()
return|;
block|}
specifier|public
name|int
name|readUnsignedByte
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|readUnsignedByte
argument_list|(
name|packet
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|int
name|readUnsignedByte
parameter_list|(
name|Packet
name|packet
parameter_list|)
throws|throws
name|IOException
block|{
name|spaceNeeded
argument_list|(
name|packet
argument_list|,
literal|1
argument_list|)
expr_stmt|;
return|return
name|packet
operator|.
name|read
argument_list|()
return|;
block|}
specifier|public
name|short
name|readShort
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
name|bigEndian
condition|)
block|{
return|return
name|readShortBig
argument_list|(
name|packet
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|readShortLittle
argument_list|(
name|packet
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
name|short
name|readShortBig
parameter_list|(
name|Packet
name|packet
parameter_list|)
throws|throws
name|IOException
block|{
name|spaceNeeded
argument_list|(
name|packet
argument_list|,
literal|2
argument_list|)
expr_stmt|;
return|return
call|(
name|short
call|)
argument_list|(
operator|(
name|packet
operator|.
name|read
argument_list|()
operator|<<
literal|8
operator|)
operator|+
operator|(
name|packet
operator|.
name|read
argument_list|()
operator|<<
literal|0
operator|)
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|short
name|readShortLittle
parameter_list|(
name|Packet
name|packet
parameter_list|)
throws|throws
name|IOException
block|{
name|spaceNeeded
argument_list|(
name|packet
argument_list|,
literal|2
argument_list|)
expr_stmt|;
return|return
call|(
name|short
call|)
argument_list|(
operator|(
name|packet
operator|.
name|read
argument_list|()
operator|<<
literal|0
operator|)
operator|+
operator|(
name|packet
operator|.
name|read
argument_list|()
operator|<<
literal|8
operator|)
argument_list|)
return|;
block|}
specifier|public
name|int
name|readUnsignedShort
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
name|bigEndian
condition|)
block|{
return|return
name|readUnsignedShortBig
argument_list|(
name|packet
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|readUnsignedShortLittle
argument_list|(
name|packet
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
name|int
name|readUnsignedShortBig
parameter_list|(
name|Packet
name|packet
parameter_list|)
throws|throws
name|IOException
block|{
name|spaceNeeded
argument_list|(
name|packet
argument_list|,
literal|2
argument_list|)
expr_stmt|;
return|return
operator|(
operator|(
name|packet
operator|.
name|read
argument_list|()
operator|<<
literal|8
operator|)
operator|+
operator|(
name|packet
operator|.
name|read
argument_list|()
operator|<<
literal|0
operator|)
operator|)
return|;
block|}
specifier|public
specifier|static
name|int
name|readUnsignedShortLittle
parameter_list|(
name|Packet
name|packet
parameter_list|)
throws|throws
name|IOException
block|{
name|spaceNeeded
argument_list|(
name|packet
argument_list|,
literal|2
argument_list|)
expr_stmt|;
return|return
operator|(
operator|(
name|packet
operator|.
name|read
argument_list|()
operator|<<
literal|0
operator|)
operator|+
operator|(
name|packet
operator|.
name|read
argument_list|()
operator|<<
literal|8
operator|)
operator|)
return|;
block|}
specifier|public
name|char
name|readChar
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
name|bigEndian
condition|)
block|{
return|return
name|readCharBig
argument_list|(
name|packet
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|readCharLittle
argument_list|(
name|packet
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
name|char
name|readCharBig
parameter_list|(
name|Packet
name|packet
parameter_list|)
throws|throws
name|IOException
block|{
name|spaceNeeded
argument_list|(
name|packet
argument_list|,
literal|2
argument_list|)
expr_stmt|;
return|return
call|(
name|char
call|)
argument_list|(
operator|(
name|packet
operator|.
name|read
argument_list|()
operator|<<
literal|8
operator|)
operator|+
operator|(
name|packet
operator|.
name|read
argument_list|()
operator|<<
literal|0
operator|)
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|char
name|readCharLittle
parameter_list|(
name|Packet
name|packet
parameter_list|)
throws|throws
name|IOException
block|{
name|spaceNeeded
argument_list|(
name|packet
argument_list|,
literal|2
argument_list|)
expr_stmt|;
return|return
call|(
name|char
call|)
argument_list|(
operator|(
name|packet
operator|.
name|read
argument_list|()
operator|<<
literal|0
operator|)
operator|+
operator|(
name|packet
operator|.
name|read
argument_list|()
operator|<<
literal|8
operator|)
argument_list|)
return|;
block|}
specifier|public
name|int
name|readInt
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
name|bigEndian
condition|)
block|{
return|return
name|readIntBig
argument_list|(
name|packet
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|readIntLittle
argument_list|(
name|packet
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
name|int
name|readIntBig
parameter_list|(
name|Packet
name|packet
parameter_list|)
throws|throws
name|IOException
block|{
name|spaceNeeded
argument_list|(
name|packet
argument_list|,
literal|4
argument_list|)
expr_stmt|;
return|return
operator|(
operator|(
name|packet
operator|.
name|read
argument_list|()
operator|<<
literal|24
operator|)
operator|+
operator|(
name|packet
operator|.
name|read
argument_list|()
operator|<<
literal|16
operator|)
operator|+
operator|(
name|packet
operator|.
name|read
argument_list|()
operator|<<
literal|8
operator|)
operator|+
operator|(
name|packet
operator|.
name|read
argument_list|()
operator|<<
literal|0
operator|)
operator|)
return|;
block|}
specifier|public
specifier|static
name|int
name|readIntLittle
parameter_list|(
name|Packet
name|packet
parameter_list|)
throws|throws
name|IOException
block|{
name|spaceNeeded
argument_list|(
name|packet
argument_list|,
literal|4
argument_list|)
expr_stmt|;
return|return
operator|(
operator|(
name|packet
operator|.
name|read
argument_list|()
operator|<<
literal|0
operator|)
operator|+
operator|(
name|packet
operator|.
name|read
argument_list|()
operator|<<
literal|8
operator|)
operator|+
operator|(
name|packet
operator|.
name|read
argument_list|()
operator|<<
literal|16
operator|)
operator|+
operator|(
name|packet
operator|.
name|read
argument_list|()
operator|<<
literal|24
operator|)
operator|)
return|;
block|}
specifier|public
name|long
name|readLong
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
name|bigEndian
condition|)
block|{
return|return
name|readLongBig
argument_list|(
name|packet
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|readLongLittle
argument_list|(
name|packet
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
name|long
name|readLongBig
parameter_list|(
name|Packet
name|packet
parameter_list|)
throws|throws
name|IOException
block|{
name|spaceNeeded
argument_list|(
name|packet
argument_list|,
literal|8
argument_list|)
expr_stmt|;
return|return
operator|(
operator|(
operator|(
name|long
operator|)
name|packet
operator|.
name|read
argument_list|()
operator|<<
literal|56
operator|)
operator|+
operator|(
operator|(
name|long
operator|)
name|packet
operator|.
name|read
argument_list|()
operator|<<
literal|48
operator|)
operator|+
operator|(
operator|(
name|long
operator|)
name|packet
operator|.
name|read
argument_list|()
operator|<<
literal|40
operator|)
operator|+
operator|(
operator|(
name|long
operator|)
name|packet
operator|.
name|read
argument_list|()
operator|<<
literal|32
operator|)
operator|+
operator|(
operator|(
name|long
operator|)
name|packet
operator|.
name|read
argument_list|()
operator|<<
literal|24
operator|)
operator|+
operator|(
operator|(
name|packet
operator|.
name|read
argument_list|()
operator|)
operator|<<
literal|16
operator|)
operator|+
operator|(
operator|(
name|packet
operator|.
name|read
argument_list|()
operator|)
operator|<<
literal|8
operator|)
operator|+
operator|(
operator|(
name|packet
operator|.
name|read
argument_list|()
operator|)
operator|<<
literal|0
operator|)
operator|)
return|;
block|}
specifier|public
specifier|static
name|long
name|readLongLittle
parameter_list|(
name|Packet
name|packet
parameter_list|)
throws|throws
name|IOException
block|{
name|spaceNeeded
argument_list|(
name|packet
argument_list|,
literal|8
argument_list|)
expr_stmt|;
return|return
operator|(
operator|(
name|packet
operator|.
name|read
argument_list|()
operator|<<
literal|0
operator|)
operator|+
operator|(
name|packet
operator|.
name|read
argument_list|()
operator|<<
literal|8
operator|)
operator|+
operator|(
name|packet
operator|.
name|read
argument_list|()
operator|<<
literal|16
operator|)
operator|+
operator|(
operator|(
name|long
operator|)
name|packet
operator|.
name|read
argument_list|()
operator|<<
literal|24
operator|)
operator|+
operator|(
operator|(
name|long
operator|)
name|packet
operator|.
name|read
argument_list|()
operator|<<
literal|32
operator|)
operator|+
operator|(
operator|(
name|long
operator|)
name|packet
operator|.
name|read
argument_list|()
operator|<<
literal|40
operator|)
operator|+
operator|(
operator|(
name|long
operator|)
name|packet
operator|.
name|read
argument_list|()
operator|<<
literal|48
operator|)
operator|+
operator|(
operator|(
name|long
operator|)
name|packet
operator|.
name|read
argument_list|()
operator|<<
literal|56
operator|)
operator|)
return|;
block|}
specifier|public
name|double
name|readDouble
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|Double
operator|.
name|longBitsToDouble
argument_list|(
name|readLong
argument_list|()
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|double
name|readDoubleBig
parameter_list|(
name|Packet
name|packet
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|Double
operator|.
name|longBitsToDouble
argument_list|(
name|readLongBig
argument_list|(
name|packet
argument_list|)
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|double
name|readDoubleLittle
parameter_list|(
name|Packet
name|packet
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|Double
operator|.
name|longBitsToDouble
argument_list|(
name|readLongLittle
argument_list|(
name|packet
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|float
name|readFloat
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|Float
operator|.
name|intBitsToFloat
argument_list|(
name|readInt
argument_list|()
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|float
name|readFloatBig
parameter_list|(
name|Packet
name|packet
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|Float
operator|.
name|intBitsToFloat
argument_list|(
name|readIntBig
argument_list|(
name|packet
argument_list|)
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|float
name|readFloatLittle
parameter_list|(
name|Packet
name|packet
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|Float
operator|.
name|intBitsToFloat
argument_list|(
name|readIntLittle
argument_list|(
name|packet
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|void
name|write
parameter_list|(
name|int
name|b
parameter_list|)
throws|throws
name|IOException
block|{
name|write
argument_list|(
name|packet
argument_list|,
name|b
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|write
parameter_list|(
name|Packet
name|packet
parameter_list|,
name|int
name|b
parameter_list|)
throws|throws
name|IOException
block|{
name|spaceNeeded
argument_list|(
name|packet
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|packet
operator|.
name|write
argument_list|(
name|b
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|write
parameter_list|(
name|byte
index|[]
name|b
parameter_list|)
throws|throws
name|IOException
block|{
name|write
argument_list|(
name|packet
argument_list|,
name|b
argument_list|,
literal|0
argument_list|,
name|b
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|write
parameter_list|(
name|Packet
name|packet
parameter_list|,
name|byte
index|[]
name|b
parameter_list|)
throws|throws
name|IOException
block|{
name|write
argument_list|(
name|packet
argument_list|,
name|b
argument_list|,
literal|0
argument_list|,
name|b
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|write
parameter_list|(
name|byte
index|[]
name|b
parameter_list|,
name|int
name|off
parameter_list|,
name|int
name|len
parameter_list|)
throws|throws
name|IOException
block|{
name|write
argument_list|(
name|packet
argument_list|,
name|b
argument_list|,
name|off
argument_list|,
name|len
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|write
parameter_list|(
name|Packet
name|packet
parameter_list|,
name|byte
index|[]
name|b
parameter_list|,
name|int
name|off
parameter_list|,
name|int
name|len
parameter_list|)
throws|throws
name|IOException
block|{
name|spaceNeeded
argument_list|(
name|packet
argument_list|,
name|len
argument_list|)
expr_stmt|;
name|packet
operator|.
name|write
argument_list|(
name|b
argument_list|,
name|off
argument_list|,
name|len
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|writeBoolean
parameter_list|(
name|boolean
name|v
parameter_list|)
throws|throws
name|IOException
block|{
name|writeBoolean
argument_list|(
name|packet
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|writeBoolean
parameter_list|(
name|Packet
name|packet
parameter_list|,
name|boolean
name|v
parameter_list|)
throws|throws
name|IOException
block|{
name|spaceNeeded
argument_list|(
name|packet
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|packet
operator|.
name|write
argument_list|(
name|v
condition|?
literal|1
else|:
literal|0
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|writeByte
parameter_list|(
name|int
name|v
parameter_list|)
throws|throws
name|IOException
block|{
name|writeByte
argument_list|(
name|packet
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|writeByte
parameter_list|(
name|Packet
name|packet
parameter_list|,
name|int
name|v
parameter_list|)
throws|throws
name|IOException
block|{
name|spaceNeeded
argument_list|(
name|packet
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|packet
operator|.
name|write
argument_list|(
name|v
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|writeShort
parameter_list|(
name|int
name|v
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|bigEndian
condition|)
block|{
name|writeShortBig
argument_list|(
name|packet
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|writeShortLittle
argument_list|(
name|packet
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
name|void
name|writeShortBig
parameter_list|(
name|Packet
name|packet
parameter_list|,
name|int
name|v
parameter_list|)
throws|throws
name|IOException
block|{
name|spaceNeeded
argument_list|(
name|packet
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|packet
operator|.
name|write
argument_list|(
operator|(
name|v
operator|>>>
literal|8
operator|)
operator|&
literal|0xFF
argument_list|)
expr_stmt|;
name|packet
operator|.
name|write
argument_list|(
operator|(
name|v
operator|>>>
literal|0
operator|)
operator|&
literal|0xFF
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|writeShortLittle
parameter_list|(
name|Packet
name|packet
parameter_list|,
name|int
name|v
parameter_list|)
throws|throws
name|IOException
block|{
name|spaceNeeded
argument_list|(
name|packet
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|packet
operator|.
name|write
argument_list|(
operator|(
name|v
operator|>>>
literal|0
operator|)
operator|&
literal|0xFF
argument_list|)
expr_stmt|;
name|packet
operator|.
name|write
argument_list|(
operator|(
name|v
operator|>>>
literal|8
operator|)
operator|&
literal|0xFF
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|writeChar
parameter_list|(
name|int
name|v
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|bigEndian
condition|)
block|{
name|writeCharBig
argument_list|(
name|packet
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|writeCharLittle
argument_list|(
name|packet
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
name|void
name|writeCharBig
parameter_list|(
name|Packet
name|packet
parameter_list|,
name|int
name|v
parameter_list|)
throws|throws
name|IOException
block|{
name|spaceNeeded
argument_list|(
name|packet
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|packet
operator|.
name|write
argument_list|(
operator|(
name|v
operator|>>>
literal|8
operator|)
operator|&
literal|0xFF
argument_list|)
expr_stmt|;
name|packet
operator|.
name|write
argument_list|(
operator|(
name|v
operator|>>>
literal|0
operator|)
operator|&
literal|0xFF
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|writeCharLittle
parameter_list|(
name|Packet
name|packet
parameter_list|,
name|int
name|v
parameter_list|)
throws|throws
name|IOException
block|{
name|spaceNeeded
argument_list|(
name|packet
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|packet
operator|.
name|write
argument_list|(
operator|(
name|v
operator|>>>
literal|0
operator|)
operator|&
literal|0xFF
argument_list|)
expr_stmt|;
name|packet
operator|.
name|write
argument_list|(
operator|(
name|v
operator|>>>
literal|8
operator|)
operator|&
literal|0xFF
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|writeInt
parameter_list|(
name|int
name|v
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|bigEndian
condition|)
block|{
name|writeIntBig
argument_list|(
name|packet
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|writeIntLittle
argument_list|(
name|packet
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
name|void
name|writeIntBig
parameter_list|(
name|Packet
name|packet
parameter_list|,
name|int
name|v
parameter_list|)
throws|throws
name|IOException
block|{
name|spaceNeeded
argument_list|(
name|packet
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|packet
operator|.
name|write
argument_list|(
operator|(
name|v
operator|>>>
literal|24
operator|)
operator|&
literal|0xFF
argument_list|)
expr_stmt|;
name|packet
operator|.
name|write
argument_list|(
operator|(
name|v
operator|>>>
literal|16
operator|)
operator|&
literal|0xFF
argument_list|)
expr_stmt|;
name|packet
operator|.
name|write
argument_list|(
operator|(
name|v
operator|>>>
literal|8
operator|)
operator|&
literal|0xFF
argument_list|)
expr_stmt|;
name|packet
operator|.
name|write
argument_list|(
operator|(
name|v
operator|>>>
literal|0
operator|)
operator|&
literal|0xFF
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|writeIntLittle
parameter_list|(
name|Packet
name|packet
parameter_list|,
name|int
name|v
parameter_list|)
throws|throws
name|IOException
block|{
name|spaceNeeded
argument_list|(
name|packet
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|packet
operator|.
name|write
argument_list|(
operator|(
name|v
operator|>>>
literal|0
operator|)
operator|&
literal|0xFF
argument_list|)
expr_stmt|;
name|packet
operator|.
name|write
argument_list|(
operator|(
name|v
operator|>>>
literal|8
operator|)
operator|&
literal|0xFF
argument_list|)
expr_stmt|;
name|packet
operator|.
name|write
argument_list|(
operator|(
name|v
operator|>>>
literal|16
operator|)
operator|&
literal|0xFF
argument_list|)
expr_stmt|;
name|packet
operator|.
name|write
argument_list|(
operator|(
name|v
operator|>>>
literal|24
operator|)
operator|&
literal|0xFF
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|writeLong
parameter_list|(
name|long
name|v
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|bigEndian
condition|)
block|{
name|writeLongBig
argument_list|(
name|packet
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|writeLongLittle
argument_list|(
name|packet
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
name|void
name|writeLongBig
parameter_list|(
name|Packet
name|packet
parameter_list|,
name|long
name|v
parameter_list|)
throws|throws
name|IOException
block|{
name|spaceNeeded
argument_list|(
name|packet
argument_list|,
literal|8
argument_list|)
expr_stmt|;
name|packet
operator|.
name|write
argument_list|(
call|(
name|int
call|)
argument_list|(
name|v
operator|>>>
literal|56
argument_list|)
operator|&
literal|0xFF
argument_list|)
expr_stmt|;
name|packet
operator|.
name|write
argument_list|(
call|(
name|int
call|)
argument_list|(
name|v
operator|>>>
literal|48
argument_list|)
operator|&
literal|0xFF
argument_list|)
expr_stmt|;
name|packet
operator|.
name|write
argument_list|(
call|(
name|int
call|)
argument_list|(
name|v
operator|>>>
literal|40
argument_list|)
operator|&
literal|0xFF
argument_list|)
expr_stmt|;
name|packet
operator|.
name|write
argument_list|(
call|(
name|int
call|)
argument_list|(
name|v
operator|>>>
literal|32
argument_list|)
operator|&
literal|0xFF
argument_list|)
expr_stmt|;
name|packet
operator|.
name|write
argument_list|(
call|(
name|int
call|)
argument_list|(
name|v
operator|>>>
literal|24
argument_list|)
operator|&
literal|0xFF
argument_list|)
expr_stmt|;
name|packet
operator|.
name|write
argument_list|(
call|(
name|int
call|)
argument_list|(
name|v
operator|>>>
literal|16
argument_list|)
operator|&
literal|0xFF
argument_list|)
expr_stmt|;
name|packet
operator|.
name|write
argument_list|(
call|(
name|int
call|)
argument_list|(
name|v
operator|>>>
literal|8
argument_list|)
operator|&
literal|0xFF
argument_list|)
expr_stmt|;
name|packet
operator|.
name|write
argument_list|(
call|(
name|int
call|)
argument_list|(
name|v
operator|>>>
literal|0
argument_list|)
operator|&
literal|0xFF
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|writeLongLittle
parameter_list|(
name|Packet
name|packet
parameter_list|,
name|long
name|v
parameter_list|)
throws|throws
name|IOException
block|{
name|spaceNeeded
argument_list|(
name|packet
argument_list|,
literal|8
argument_list|)
expr_stmt|;
name|packet
operator|.
name|write
argument_list|(
call|(
name|int
call|)
argument_list|(
name|v
operator|>>>
literal|0
argument_list|)
operator|&
literal|0xFF
argument_list|)
expr_stmt|;
name|packet
operator|.
name|write
argument_list|(
call|(
name|int
call|)
argument_list|(
name|v
operator|>>>
literal|8
argument_list|)
operator|&
literal|0xFF
argument_list|)
expr_stmt|;
name|packet
operator|.
name|write
argument_list|(
call|(
name|int
call|)
argument_list|(
name|v
operator|>>>
literal|16
argument_list|)
operator|&
literal|0xFF
argument_list|)
expr_stmt|;
name|packet
operator|.
name|write
argument_list|(
call|(
name|int
call|)
argument_list|(
name|v
operator|>>>
literal|24
argument_list|)
operator|&
literal|0xFF
argument_list|)
expr_stmt|;
name|packet
operator|.
name|write
argument_list|(
call|(
name|int
call|)
argument_list|(
name|v
operator|>>>
literal|32
argument_list|)
operator|&
literal|0xFF
argument_list|)
expr_stmt|;
name|packet
operator|.
name|write
argument_list|(
call|(
name|int
call|)
argument_list|(
name|v
operator|>>>
literal|40
argument_list|)
operator|&
literal|0xFF
argument_list|)
expr_stmt|;
name|packet
operator|.
name|write
argument_list|(
call|(
name|int
call|)
argument_list|(
name|v
operator|>>>
literal|48
argument_list|)
operator|&
literal|0xFF
argument_list|)
expr_stmt|;
name|packet
operator|.
name|write
argument_list|(
call|(
name|int
call|)
argument_list|(
name|v
operator|>>>
literal|56
argument_list|)
operator|&
literal|0xFF
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|writeDouble
parameter_list|(
name|double
name|v
parameter_list|)
throws|throws
name|IOException
block|{
name|writeLong
argument_list|(
name|Double
operator|.
name|doubleToLongBits
argument_list|(
name|v
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|writeDoubleBig
parameter_list|(
name|Packet
name|packet
parameter_list|,
name|double
name|v
parameter_list|)
throws|throws
name|IOException
block|{
name|writeLongBig
argument_list|(
name|packet
argument_list|,
name|Double
operator|.
name|doubleToLongBits
argument_list|(
name|v
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|writeDoubleLittle
parameter_list|(
name|Packet
name|packet
parameter_list|,
name|double
name|v
parameter_list|)
throws|throws
name|IOException
block|{
name|writeLongLittle
argument_list|(
name|packet
argument_list|,
name|Double
operator|.
name|doubleToLongBits
argument_list|(
name|v
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|writeFloat
parameter_list|(
name|float
name|v
parameter_list|)
throws|throws
name|IOException
block|{
name|writeInt
argument_list|(
name|Float
operator|.
name|floatToIntBits
argument_list|(
name|v
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|writeFloatBig
parameter_list|(
name|Packet
name|packet
parameter_list|,
name|float
name|v
parameter_list|)
throws|throws
name|IOException
block|{
name|writeIntBig
argument_list|(
name|packet
argument_list|,
name|Float
operator|.
name|floatToIntBits
argument_list|(
name|v
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|writeFloatLittle
parameter_list|(
name|Packet
name|packet
parameter_list|,
name|float
name|v
parameter_list|)
throws|throws
name|IOException
block|{
name|writeIntLittle
argument_list|(
name|packet
argument_list|,
name|Float
operator|.
name|floatToIntBits
argument_list|(
name|v
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|writeRawDouble
parameter_list|(
name|double
name|v
parameter_list|)
throws|throws
name|IOException
block|{
name|writeLong
argument_list|(
name|Double
operator|.
name|doubleToRawLongBits
argument_list|(
name|v
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|writeRawDoubleBig
parameter_list|(
name|Packet
name|packet
parameter_list|,
name|double
name|v
parameter_list|)
throws|throws
name|IOException
block|{
name|writeLongBig
argument_list|(
name|packet
argument_list|,
name|Double
operator|.
name|doubleToRawLongBits
argument_list|(
name|v
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|writeRawDoubleLittle
parameter_list|(
name|Packet
name|packet
parameter_list|,
name|double
name|v
parameter_list|)
throws|throws
name|IOException
block|{
name|writeLongLittle
argument_list|(
name|packet
argument_list|,
name|Double
operator|.
name|doubleToRawLongBits
argument_list|(
name|v
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|writeRawFloat
parameter_list|(
name|float
name|v
parameter_list|)
throws|throws
name|IOException
block|{
name|writeInt
argument_list|(
name|Float
operator|.
name|floatToRawIntBits
argument_list|(
name|v
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|writeRawFloatBig
parameter_list|(
name|Packet
name|packet
parameter_list|,
name|float
name|v
parameter_list|)
throws|throws
name|IOException
block|{
name|writeIntBig
argument_list|(
name|packet
argument_list|,
name|Float
operator|.
name|floatToRawIntBits
argument_list|(
name|v
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|writeRawFloatLittle
parameter_list|(
name|Packet
name|packet
parameter_list|,
name|float
name|v
parameter_list|)
throws|throws
name|IOException
block|{
name|writeIntLittle
argument_list|(
name|packet
argument_list|,
name|Float
operator|.
name|floatToRawIntBits
argument_list|(
name|v
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

