begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|console
operator|.
name|command
operator|.
name|store
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|console
operator|.
name|command
operator|.
name|store
operator|.
name|proto
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|console
operator|.
name|command
operator|.
name|store
operator|.
name|tar
operator|.
name|TarEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|console
operator|.
name|command
operator|.
name|store
operator|.
name|tar
operator|.
name|TarOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|fusesource
operator|.
name|hawtbuf
operator|.
name|AsciiBuffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|fusesource
operator|.
name|hawtbuf
operator|.
name|Buffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|fusesource
operator|.
name|hawtbuf
operator|.
name|proto
operator|.
name|MessageBuffer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|zip
operator|.
name|GZIPOutputStream
import|;
end_import

begin_comment
comment|/**  * @author<a href="http://hiramchirino.com">Hiram Chirino</a>  */
end_comment

begin_class
specifier|public
class|class
name|ExportStreamManager
block|{
specifier|private
specifier|final
name|OutputStream
name|target
decl_stmt|;
specifier|private
specifier|final
name|int
name|version
decl_stmt|;
name|TarOutputStream
name|stream
decl_stmt|;
name|ExportStreamManager
parameter_list|(
name|OutputStream
name|target
parameter_list|,
name|int
name|version
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|target
operator|=
name|target
expr_stmt|;
name|this
operator|.
name|version
operator|=
name|version
expr_stmt|;
name|stream
operator|=
operator|new
name|TarOutputStream
argument_list|(
operator|new
name|GZIPOutputStream
argument_list|(
name|target
argument_list|)
argument_list|)
expr_stmt|;
name|store
argument_list|(
literal|"ver"
argument_list|,
operator|new
name|AsciiBuffer
argument_list|(
literal|""
operator|+
name|version
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|long
name|seq
init|=
literal|0
decl_stmt|;
specifier|public
name|void
name|finish
parameter_list|()
throws|throws
name|IOException
block|{
name|stream
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|store
parameter_list|(
name|String
name|ext
parameter_list|,
name|Buffer
name|value
parameter_list|)
throws|throws
name|IOException
block|{
name|TarEntry
name|entry
init|=
operator|new
name|TarEntry
argument_list|(
name|seq
operator|+
literal|"."
operator|+
name|ext
argument_list|)
decl_stmt|;
name|seq
operator|+=
literal|1
expr_stmt|;
name|entry
operator|.
name|setSize
argument_list|(
name|value
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|stream
operator|.
name|putNextEntry
argument_list|(
name|entry
argument_list|)
expr_stmt|;
name|value
operator|.
name|writeTo
argument_list|(
name|stream
argument_list|)
expr_stmt|;
name|stream
operator|.
name|closeEntry
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|store
parameter_list|(
name|String
name|ext
parameter_list|,
name|MessageBuffer
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
name|value
parameter_list|)
throws|throws
name|IOException
block|{
name|TarEntry
name|entry
init|=
operator|new
name|TarEntry
argument_list|(
name|seq
operator|+
literal|"."
operator|+
name|ext
argument_list|)
decl_stmt|;
name|seq
operator|+=
literal|1
expr_stmt|;
name|entry
operator|.
name|setSize
argument_list|(
name|value
operator|.
name|serializedSizeFramed
argument_list|()
argument_list|)
expr_stmt|;
name|stream
operator|.
name|putNextEntry
argument_list|(
name|entry
argument_list|)
expr_stmt|;
name|value
operator|.
name|writeFramed
argument_list|(
name|stream
argument_list|)
expr_stmt|;
name|stream
operator|.
name|closeEntry
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|store_queue
parameter_list|(
name|QueuePB
operator|.
name|Getter
name|value
parameter_list|)
throws|throws
name|IOException
block|{
name|store
argument_list|(
literal|"que"
argument_list|,
name|value
operator|.
name|freeze
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|store_queue_entry
parameter_list|(
name|QueueEntryPB
operator|.
name|Getter
name|value
parameter_list|)
throws|throws
name|IOException
block|{
name|store
argument_list|(
literal|"qen"
argument_list|,
name|value
operator|.
name|freeze
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|store_message
parameter_list|(
name|MessagePB
operator|.
name|Getter
name|value
parameter_list|)
throws|throws
name|IOException
block|{
name|store
argument_list|(
literal|"msg"
argument_list|,
name|value
operator|.
name|freeze
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|store_map_entry
parameter_list|(
name|MapEntryPB
operator|.
name|Getter
name|value
parameter_list|)
throws|throws
name|IOException
block|{
name|store
argument_list|(
literal|"map"
argument_list|,
name|value
operator|.
name|freeze
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

