begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|jdbc
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Destination
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageConsumer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageProducer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|XAConnection
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|XASession
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|ObjectName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|sql
operator|.
name|DataSource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|transaction
operator|.
name|xa
operator|.
name|XAException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|transaction
operator|.
name|xa
operator|.
name|XAResource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|transaction
operator|.
name|xa
operator|.
name|Xid
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Reader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigDecimal
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Array
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Blob
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|CallableStatement
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Clob
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|DatabaseMetaData
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|NClob
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|ParameterMetaData
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|PreparedStatement
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Ref
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|ResultSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|ResultSetMetaData
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|RowId
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|SQLClientInfoException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|SQLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|SQLFeatureNotSupportedException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|SQLRecoverableException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|SQLWarning
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|SQLXML
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Savepoint
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Statement
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Struct
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Time
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Timestamp
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Executor
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicBoolean
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicInteger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQConnection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQXAConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|TransportConnector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|jmx
operator|.
name|QueueViewMBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|RegionBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|policy
operator|.
name|DeadLetterStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|policy
operator|.
name|DiscardingDeadLetterStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|policy
operator|.
name|PolicyEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|policy
operator|.
name|PolicyMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ActiveMQDestination
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ActiveMQMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ActiveMQQueue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|XATransactionId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|network
operator|.
name|NetworkConnector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|util
operator|.
name|DefaultIOExceptionHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|util
operator|.
name|Wait
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|util
operator|.
name|TestUtils
operator|.
name|createXid
import|;
end_import

begin_comment
comment|// https://issues.apache.org/activemq/browse/AMQ-2880
end_comment

begin_class
specifier|public
class|class
name|JDBCXACommitExceptionTest
extends|extends
name|JDBCCommitExceptionTest
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|JDBCXACommitExceptionTest
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
name|ActiveMQXAConnectionFactory
name|factory
decl_stmt|;
name|boolean
name|onePhase
init|=
literal|true
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|onePhase
operator|=
literal|true
expr_stmt|;
name|factory
operator|=
operator|new
name|ActiveMQXAConnectionFactory
argument_list|(
name|connectionUri
operator|+
literal|"?jms.prefetchPolicy.all=0&jms.redeliveryPolicy.maximumRedeliveries="
operator|+
name|messagesExpected
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testTwoPhaseSqlException
parameter_list|()
throws|throws
name|Exception
block|{
name|onePhase
operator|=
literal|false
expr_stmt|;
name|doTestSqlException
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|int
name|receiveMessages
parameter_list|(
name|int
name|messagesExpected
parameter_list|)
throws|throws
name|Exception
block|{
name|XAConnection
name|connection
init|=
name|factory
operator|.
name|createXAConnection
argument_list|()
decl_stmt|;
name|connection
operator|.
name|start
argument_list|()
expr_stmt|;
name|XASession
name|session
init|=
name|connection
operator|.
name|createXASession
argument_list|()
decl_stmt|;
name|jdbc
operator|.
name|setShouldBreak
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// first try and receive these messages, they'll continually fail
name|receiveMessages
argument_list|(
name|messagesExpected
argument_list|,
name|session
argument_list|,
name|onePhase
argument_list|)
expr_stmt|;
name|jdbc
operator|.
name|setShouldBreak
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|// now that the store is sane, try and get all the messages sent
return|return
name|receiveMessages
argument_list|(
name|messagesExpected
argument_list|,
name|session
argument_list|,
name|onePhase
argument_list|)
return|;
block|}
specifier|protected
name|int
name|receiveMessages
parameter_list|(
name|int
name|messagesExpected
parameter_list|,
name|XASession
name|session
parameter_list|,
name|boolean
name|onePhase
parameter_list|)
throws|throws
name|Exception
block|{
name|int
name|messagesReceived
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|messagesExpected
condition|;
name|i
operator|++
control|)
block|{
name|Destination
name|destination
init|=
name|session
operator|.
name|createQueue
argument_list|(
literal|"TEST"
argument_list|)
decl_stmt|;
name|MessageConsumer
name|consumer
init|=
name|session
operator|.
name|createConsumer
argument_list|(
name|destination
argument_list|)
decl_stmt|;
name|XAResource
name|resource
init|=
name|session
operator|.
name|getXAResource
argument_list|()
decl_stmt|;
name|resource
operator|.
name|recover
argument_list|(
name|XAResource
operator|.
name|TMSTARTRSCAN
argument_list|)
expr_stmt|;
name|resource
operator|.
name|recover
argument_list|(
name|XAResource
operator|.
name|TMNOFLAGS
argument_list|)
expr_stmt|;
name|Xid
name|tid
init|=
name|createXid
argument_list|()
decl_stmt|;
name|Message
name|message
init|=
literal|null
decl_stmt|;
try|try
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Receiving message "
operator|+
operator|(
name|messagesReceived
operator|+
literal|1
operator|)
operator|+
literal|" of "
operator|+
name|messagesExpected
argument_list|)
expr_stmt|;
name|resource
operator|.
name|start
argument_list|(
name|tid
argument_list|,
name|XAResource
operator|.
name|TMNOFLAGS
argument_list|)
expr_stmt|;
name|message
operator|=
name|consumer
operator|.
name|receive
argument_list|(
literal|2000
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Received : "
operator|+
name|message
argument_list|)
expr_stmt|;
name|resource
operator|.
name|end
argument_list|(
name|tid
argument_list|,
name|XAResource
operator|.
name|TMSUCCESS
argument_list|)
expr_stmt|;
if|if
condition|(
name|message
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|onePhase
condition|)
block|{
name|resource
operator|.
name|commit
argument_list|(
name|tid
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|resource
operator|.
name|prepare
argument_list|(
name|tid
argument_list|)
expr_stmt|;
name|resource
operator|.
name|commit
argument_list|(
name|tid
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
name|messagesReceived
operator|++
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Caught exception:"
argument_list|,
name|e
argument_list|)
expr_stmt|;
try|try
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Rolling back transaction (just in case, no need to do this as it is implicit in a 1pc commit failure) "
operator|+
name|tid
argument_list|)
expr_stmt|;
name|resource
operator|.
name|rollback
argument_list|(
name|tid
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XAException
name|ex
parameter_list|)
block|{
try|try
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Caught exception during rollback: "
operator|+
name|ex
operator|+
literal|" forgetting transaction "
operator|+
name|tid
argument_list|)
expr_stmt|;
name|resource
operator|.
name|forget
argument_list|(
name|tid
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XAException
name|ex1
parameter_list|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"rollback/forget failed: "
operator|+
name|ex1
operator|.
name|errorCode
argument_list|)
expr_stmt|;
block|}
block|}
block|}
finally|finally
block|{
if|if
condition|(
name|consumer
operator|!=
literal|null
condition|)
block|{
name|consumer
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
return|return
name|messagesReceived
return|;
block|}
specifier|public
name|void
name|testCommitSendErrorRecovery
parameter_list|()
throws|throws
name|Exception
block|{
name|XAConnection
name|connection
init|=
name|factory
operator|.
name|createXAConnection
argument_list|()
decl_stmt|;
name|connection
operator|.
name|start
argument_list|()
expr_stmt|;
name|XASession
name|session
init|=
name|connection
operator|.
name|createXASession
argument_list|()
decl_stmt|;
name|Destination
name|destination
init|=
name|session
operator|.
name|createQueue
argument_list|(
literal|"TEST"
argument_list|)
decl_stmt|;
name|MessageProducer
name|producer
init|=
name|session
operator|.
name|createProducer
argument_list|(
name|destination
argument_list|)
decl_stmt|;
name|XAResource
name|resource
init|=
name|session
operator|.
name|getXAResource
argument_list|()
decl_stmt|;
name|Xid
name|tid
init|=
name|createXid
argument_list|()
decl_stmt|;
name|resource
operator|.
name|start
argument_list|(
name|tid
argument_list|,
name|XAResource
operator|.
name|TMNOFLAGS
argument_list|)
expr_stmt|;
name|ActiveMQMessage
name|message
init|=
operator|(
name|ActiveMQMessage
operator|)
name|session
operator|.
name|createMessage
argument_list|()
decl_stmt|;
name|message
operator|.
name|setTransactionId
argument_list|(
operator|new
name|XATransactionId
argument_list|(
name|tid
argument_list|)
argument_list|)
expr_stmt|;
name|producer
operator|.
name|send
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|resource
operator|.
name|end
argument_list|(
name|tid
argument_list|,
name|XAResource
operator|.
name|TMSUCCESS
argument_list|)
expr_stmt|;
name|resource
operator|.
name|prepare
argument_list|(
name|tid
argument_list|)
expr_stmt|;
name|jdbc
operator|.
name|setShouldBreak
argument_list|(
literal|true
argument_list|)
expr_stmt|;
try|try
block|{
name|resource
operator|.
name|commit
argument_list|(
name|tid
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|expected
parameter_list|)
block|{
name|expected
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
comment|// recover
name|Xid
index|[]
name|recovered
init|=
name|resource
operator|.
name|recover
argument_list|(
name|XAResource
operator|.
name|TMSTARTRSCAN
argument_list|)
decl_stmt|;
name|resource
operator|.
name|recover
argument_list|(
name|XAResource
operator|.
name|TMNOFLAGS
argument_list|)
expr_stmt|;
name|jdbc
operator|.
name|setShouldBreak
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|resource
operator|.
name|commit
argument_list|(
name|recovered
index|[
literal|0
index|]
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"one enque"
argument_list|,
literal|1
argument_list|,
operator|(
operator|(
name|RegionBroker
operator|)
name|broker
operator|.
name|getRegionBroker
argument_list|()
operator|)
operator|.
name|getDestinationStatistics
argument_list|()
operator|.
name|getEnqueues
argument_list|()
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|final
name|AtomicInteger
name|getAutoCommitCount
init|=
operator|new
name|AtomicInteger
argument_list|()
decl_stmt|;
specifier|private
name|ArrayList
argument_list|<
name|Integer
argument_list|>
name|getAutoCommitErrors
init|=
operator|new
name|ArrayList
argument_list|<
name|Integer
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|ArrayList
argument_list|<
name|Integer
argument_list|>
name|executeUpdateErrorOps
init|=
operator|new
name|ArrayList
argument_list|<
name|Integer
argument_list|>
argument_list|()
decl_stmt|;
specifier|final
name|AtomicInteger
name|executeUpdateErrorOpsCount
init|=
operator|new
name|AtomicInteger
argument_list|()
decl_stmt|;
specifier|private
name|ArrayList
argument_list|<
name|Integer
argument_list|>
name|executeBatchErrorOps
init|=
operator|new
name|ArrayList
argument_list|<
name|Integer
argument_list|>
argument_list|()
decl_stmt|;
specifier|final
name|AtomicInteger
name|executeBatchErrorOpsCount
init|=
operator|new
name|AtomicInteger
argument_list|()
decl_stmt|;
specifier|public
name|void
name|testXAEnqueueErrors
parameter_list|()
throws|throws
name|Exception
block|{
name|getAutoCommitCount
operator|.
name|set
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|getAutoCommitErrors
operator|.
name|clear
argument_list|()
expr_stmt|;
name|executeUpdateErrorOpsCount
operator|.
name|set
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|executeUpdateErrorOps
operator|.
name|clear
argument_list|()
expr_stmt|;
name|broker
operator|.
name|stop
argument_list|()
expr_stmt|;
name|broker
operator|=
operator|new
name|BrokerService
argument_list|()
expr_stmt|;
name|broker
operator|.
name|setAdvisorySupport
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|PolicyMap
name|policyMap
init|=
operator|new
name|PolicyMap
argument_list|()
decl_stmt|;
name|PolicyEntry
name|policyEntry
init|=
operator|new
name|PolicyEntry
argument_list|()
decl_stmt|;
name|policyEntry
operator|.
name|setExpireMessagesPeriod
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|policyMap
operator|.
name|setDefaultEntry
argument_list|(
name|policyEntry
argument_list|)
expr_stmt|;
name|broker
operator|.
name|setDestinationPolicy
argument_list|(
name|policyMap
argument_list|)
expr_stmt|;
comment|//broker.setDeleteAllMessagesOnStartup(true);
name|JDBCPersistenceAdapter
name|jdbcPersistenceAdapter
init|=
operator|new
name|JDBCPersistenceAdapter
argument_list|()
decl_stmt|;
name|DataSource
name|realDataSource
init|=
name|jdbc
operator|.
name|getDataSource
argument_list|()
decl_stmt|;
name|jdbcPersistenceAdapter
operator|.
name|setDataSource
argument_list|(
operator|new
name|TestDataSource
argument_list|(
name|realDataSource
argument_list|)
argument_list|)
expr_stmt|;
name|jdbcPersistenceAdapter
operator|.
name|setUseLock
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|broker
operator|.
name|setPersistenceAdapter
argument_list|(
name|jdbcPersistenceAdapter
argument_list|)
expr_stmt|;
name|connectionUri
operator|=
name|broker
operator|.
name|addConnector
argument_list|(
literal|"tcp://localhost:0"
argument_list|)
operator|.
name|getPublishableConnectString
argument_list|()
expr_stmt|;
name|broker
operator|.
name|start
argument_list|()
expr_stmt|;
comment|// inject error
name|executeUpdateErrorOps
operator|.
name|add
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|executeUpdateErrorOps
operator|.
name|add
argument_list|(
literal|9
argument_list|)
expr_stmt|;
name|executeUpdateErrorOps
operator|.
name|add
argument_list|(
literal|12
argument_list|)
expr_stmt|;
name|getAutoCommitErrors
operator|.
name|add
argument_list|(
literal|59
argument_list|)
expr_stmt|;
name|getAutoCommitErrors
operator|.
name|add
argument_list|(
literal|60
argument_list|)
expr_stmt|;
name|factory
operator|=
operator|new
name|ActiveMQXAConnectionFactory
argument_list|(
name|connectionUri
argument_list|)
expr_stmt|;
name|XAConnection
name|c
init|=
name|factory
operator|.
name|createXAConnection
argument_list|()
decl_stmt|;
name|c
operator|.
name|start
argument_list|()
expr_stmt|;
name|XASession
name|s
init|=
name|c
operator|.
name|createXASession
argument_list|()
decl_stmt|;
specifier|final
name|XAResource
name|recoveryResource
init|=
name|s
operator|.
name|getXAResource
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
block|{
name|XAConnection
name|connection
init|=
name|factory
operator|.
name|createXAConnection
argument_list|()
decl_stmt|;
name|connection
operator|.
name|start
argument_list|()
expr_stmt|;
name|XASession
name|session
init|=
name|connection
operator|.
name|createXASession
argument_list|()
decl_stmt|;
name|Destination
name|destination
init|=
name|session
operator|.
name|createQueue
argument_list|(
literal|"TEST"
argument_list|)
decl_stmt|;
name|MessageProducer
name|producer
init|=
name|session
operator|.
name|createProducer
argument_list|(
name|destination
argument_list|)
decl_stmt|;
name|XAResource
name|resource
init|=
name|session
operator|.
name|getXAResource
argument_list|()
decl_stmt|;
name|Xid
name|tid
init|=
name|createXid
argument_list|()
decl_stmt|;
name|resource
operator|.
name|start
argument_list|(
name|tid
argument_list|,
name|XAResource
operator|.
name|TMNOFLAGS
argument_list|)
expr_stmt|;
name|ActiveMQMessage
name|message
init|=
operator|(
name|ActiveMQMessage
operator|)
name|session
operator|.
name|createMessage
argument_list|()
decl_stmt|;
name|message
operator|.
name|setTransactionId
argument_list|(
operator|new
name|XATransactionId
argument_list|(
name|tid
argument_list|)
argument_list|)
expr_stmt|;
name|producer
operator|.
name|send
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|resource
operator|.
name|end
argument_list|(
name|tid
argument_list|,
name|XAResource
operator|.
name|TMSUCCESS
argument_list|)
expr_stmt|;
name|resource
operator|.
name|prepare
argument_list|(
name|tid
argument_list|)
expr_stmt|;
try|try
block|{
name|resource
operator|.
name|commit
argument_list|(
name|tid
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|expected
parameter_list|)
block|{
name|expected
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|dumpMessages
argument_list|()
expr_stmt|;
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
comment|// recover
name|Xid
index|[]
name|recovered
init|=
name|recoveryResource
operator|.
name|recover
argument_list|(
name|XAResource
operator|.
name|TMSTARTRSCAN
argument_list|)
decl_stmt|;
name|recoveryResource
operator|.
name|recover
argument_list|(
name|XAResource
operator|.
name|TMNOFLAGS
argument_list|)
expr_stmt|;
try|try
block|{
name|recoveryResource
operator|.
name|commit
argument_list|(
name|recovered
index|[
literal|0
index|]
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|done
operator|=
literal|true
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XAException
name|ok
parameter_list|)
block|{
name|ok
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
name|dumpMessages
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"en-queue"
argument_list|,
literal|10
argument_list|,
operator|(
operator|(
name|RegionBroker
operator|)
name|broker
operator|.
name|getRegionBroker
argument_list|()
operator|)
operator|.
name|getDestinationStatistics
argument_list|()
operator|.
name|getEnqueues
argument_list|()
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"en-queue"
argument_list|,
literal|10
argument_list|,
operator|(
operator|(
name|RegionBroker
operator|)
name|broker
operator|.
name|getRegionBroker
argument_list|()
operator|)
operator|.
name|getDestinationStatistics
argument_list|()
operator|.
name|getMessages
argument_list|()
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|ObjectName
name|queueViewMBeanName
init|=
operator|new
name|ObjectName
argument_list|(
literal|"org.apache.activemq:type=Broker,brokerName=localhost,destinationType=Queue,destinationName=TEST"
argument_list|)
decl_stmt|;
name|QueueViewMBean
name|proxy
init|=
operator|(
name|QueueViewMBean
operator|)
name|broker
operator|.
name|getManagementContext
argument_list|()
operator|.
name|newProxyInstance
argument_list|(
name|queueViewMBeanName
argument_list|,
name|QueueViewMBean
operator|.
name|class
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"qs"
argument_list|,
literal|10
argument_list|,
name|proxy
operator|.
name|getQueueSize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"enq"
argument_list|,
literal|10
argument_list|,
name|proxy
operator|.
name|getEnqueueCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"curs"
argument_list|,
literal|10
argument_list|,
name|proxy
operator|.
name|cursorSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testNonTxEnqueueErrors
parameter_list|()
throws|throws
name|Exception
block|{
name|getAutoCommitCount
operator|.
name|set
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|getAutoCommitErrors
operator|.
name|clear
argument_list|()
expr_stmt|;
name|executeUpdateErrorOpsCount
operator|.
name|set
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|executeUpdateErrorOps
operator|.
name|clear
argument_list|()
expr_stmt|;
name|executeBatchErrorOps
operator|.
name|clear
argument_list|()
expr_stmt|;
name|executeBatchErrorOpsCount
operator|.
name|set
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|broker
operator|.
name|stop
argument_list|()
expr_stmt|;
name|broker
operator|=
operator|new
name|BrokerService
argument_list|()
expr_stmt|;
name|broker
operator|.
name|setAdvisorySupport
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|PolicyMap
name|policyMap
init|=
operator|new
name|PolicyMap
argument_list|()
decl_stmt|;
name|PolicyEntry
name|policyEntry
init|=
operator|new
name|PolicyEntry
argument_list|()
decl_stmt|;
name|policyEntry
operator|.
name|setExpireMessagesPeriod
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|policyMap
operator|.
name|setDefaultEntry
argument_list|(
name|policyEntry
argument_list|)
expr_stmt|;
name|broker
operator|.
name|setDestinationPolicy
argument_list|(
name|policyMap
argument_list|)
expr_stmt|;
name|JDBCPersistenceAdapter
name|jdbcPersistenceAdapter
init|=
operator|new
name|JDBCPersistenceAdapter
argument_list|()
decl_stmt|;
name|DataSource
name|realDataSource
init|=
name|jdbc
operator|.
name|getDataSource
argument_list|()
decl_stmt|;
name|jdbcPersistenceAdapter
operator|.
name|setDataSource
argument_list|(
operator|new
name|TestDataSource
argument_list|(
name|realDataSource
argument_list|)
argument_list|)
expr_stmt|;
name|jdbcPersistenceAdapter
operator|.
name|setUseLock
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jdbcPersistenceAdapter
operator|.
name|setCleanupPeriod
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|broker
operator|.
name|setPersistenceAdapter
argument_list|(
name|jdbcPersistenceAdapter
argument_list|)
expr_stmt|;
name|connectionUri
operator|=
name|broker
operator|.
name|addConnector
argument_list|(
literal|"tcp://localhost:0"
argument_list|)
operator|.
name|getPublishableConnectString
argument_list|()
expr_stmt|;
name|broker
operator|.
name|start
argument_list|()
expr_stmt|;
name|executeBatchErrorOps
operator|.
name|add
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|executeBatchErrorOps
operator|.
name|add
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|getAutoCommitCount
operator|.
name|set
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|getAutoCommitErrors
operator|.
name|add
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|factory
operator|=
operator|new
name|ActiveMQXAConnectionFactory
argument_list|(
name|connectionUri
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
block|{
name|XAConnection
name|connection
init|=
name|factory
operator|.
name|createXAConnection
argument_list|()
decl_stmt|;
name|connection
operator|.
name|start
argument_list|()
expr_stmt|;
name|Session
name|session
init|=
name|connection
operator|.
name|createSession
argument_list|(
literal|false
argument_list|,
name|Session
operator|.
name|AUTO_ACKNOWLEDGE
argument_list|)
decl_stmt|;
name|Destination
name|destination
init|=
name|session
operator|.
name|createQueue
argument_list|(
literal|"TEST"
argument_list|)
decl_stmt|;
name|MessageProducer
name|producer
init|=
name|session
operator|.
name|createProducer
argument_list|(
name|destination
argument_list|)
decl_stmt|;
name|ActiveMQMessage
name|message
init|=
operator|(
name|ActiveMQMessage
operator|)
name|session
operator|.
name|createMessage
argument_list|()
decl_stmt|;
try|try
block|{
name|producer
operator|.
name|send
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|expected
parameter_list|)
block|{
name|expected
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|dumpMessages
argument_list|()
expr_stmt|;
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
try|try
block|{
name|producer
operator|.
name|send
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|done
operator|=
literal|true
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ok
parameter_list|)
block|{
name|ok
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
name|assertEquals
argument_list|(
literal|"messages in db"
argument_list|,
literal|10
argument_list|,
name|dumpMessages
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"en-queue"
argument_list|,
literal|10
argument_list|,
operator|(
operator|(
name|RegionBroker
operator|)
name|broker
operator|.
name|getRegionBroker
argument_list|()
operator|)
operator|.
name|getDestinationStatistics
argument_list|()
operator|.
name|getEnqueues
argument_list|()
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"en-queue"
argument_list|,
literal|10
argument_list|,
operator|(
operator|(
name|RegionBroker
operator|)
name|broker
operator|.
name|getRegionBroker
argument_list|()
operator|)
operator|.
name|getDestinationStatistics
argument_list|()
operator|.
name|getMessages
argument_list|()
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|ObjectName
name|queueViewMBeanName
init|=
operator|new
name|ObjectName
argument_list|(
literal|"org.apache.activemq:type=Broker,brokerName=localhost,destinationType=Queue,destinationName=TEST"
argument_list|)
decl_stmt|;
name|QueueViewMBean
name|proxy
init|=
operator|(
name|QueueViewMBean
operator|)
name|broker
operator|.
name|getManagementContext
argument_list|()
operator|.
name|newProxyInstance
argument_list|(
name|queueViewMBeanName
argument_list|,
name|QueueViewMBean
operator|.
name|class
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"qs"
argument_list|,
literal|10
argument_list|,
name|proxy
operator|.
name|getQueueSize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"enq"
argument_list|,
literal|10
argument_list|,
name|proxy
operator|.
name|getEnqueueCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"curs"
argument_list|,
literal|10
argument_list|,
name|proxy
operator|.
name|cursorSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testNonTxEnqueueOverNetworkErrorsRestart
parameter_list|()
throws|throws
name|Exception
block|{
name|getAutoCommitCount
operator|.
name|set
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|getAutoCommitErrors
operator|.
name|clear
argument_list|()
expr_stmt|;
name|executeUpdateErrorOpsCount
operator|.
name|set
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|executeUpdateErrorOps
operator|.
name|clear
argument_list|()
expr_stmt|;
name|executeBatchErrorOps
operator|.
name|clear
argument_list|()
expr_stmt|;
name|executeBatchErrorOpsCount
operator|.
name|set
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|broker
operator|.
name|stop
argument_list|()
expr_stmt|;
specifier|final
name|AtomicBoolean
name|done
init|=
operator|new
name|AtomicBoolean
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|Thread
name|thread
init|=
operator|new
name|Thread
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
while|while
condition|(
operator|!
name|done
operator|.
name|get
argument_list|()
condition|)
block|{
try|try
block|{
name|broker
operator|=
operator|new
name|BrokerService
argument_list|()
expr_stmt|;
name|broker
operator|.
name|setAdvisorySupport
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|PolicyMap
name|policyMap
init|=
operator|new
name|PolicyMap
argument_list|()
decl_stmt|;
name|PolicyEntry
name|policyEntry
init|=
operator|new
name|PolicyEntry
argument_list|()
decl_stmt|;
name|policyEntry
operator|.
name|setUseCache
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|policyEntry
operator|.
name|setExpireMessagesPeriod
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|policyEntry
operator|.
name|setDeadLetterStrategy
argument_list|(
operator|new
name|DiscardingDeadLetterStrategy
argument_list|()
argument_list|)
expr_stmt|;
name|policyMap
operator|.
name|setDefaultEntry
argument_list|(
name|policyEntry
argument_list|)
expr_stmt|;
name|broker
operator|.
name|setDestinationPolicy
argument_list|(
name|policyMap
argument_list|)
expr_stmt|;
name|JDBCPersistenceAdapter
name|jdbcPersistenceAdapter
init|=
operator|new
name|JDBCPersistenceAdapter
argument_list|()
decl_stmt|;
name|DataSource
name|realDataSource
init|=
name|jdbc
operator|.
name|getDataSource
argument_list|()
decl_stmt|;
name|jdbcPersistenceAdapter
operator|.
name|setDataSource
argument_list|(
operator|new
name|TestDataSource
argument_list|(
name|realDataSource
argument_list|)
argument_list|)
expr_stmt|;
name|jdbcPersistenceAdapter
operator|.
name|setUseLock
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jdbcPersistenceAdapter
operator|.
name|setCleanupPeriod
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|broker
operator|.
name|setPersistenceAdapter
argument_list|(
name|jdbcPersistenceAdapter
argument_list|)
expr_stmt|;
name|TransportConnector
name|transportConnector
init|=
name|broker
operator|.
name|addConnector
argument_list|(
literal|"tcp://localhost:61616"
argument_list|)
decl_stmt|;
comment|//transportConnector.setAuditNetworkProducers(true);
name|connectionUri
operator|=
name|transportConnector
operator|.
name|getPublishableConnectString
argument_list|()
expr_stmt|;
name|DefaultIOExceptionHandler
name|stopOnIOEx
init|=
operator|new
name|DefaultIOExceptionHandler
argument_list|()
decl_stmt|;
name|stopOnIOEx
operator|.
name|setIgnoreSQLExceptions
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|stopOnIOEx
operator|.
name|setStopStartConnectors
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|broker
operator|.
name|setIoExceptionHandler
argument_list|(
name|stopOnIOEx
argument_list|)
expr_stmt|;
name|broker
operator|.
name|start
argument_list|()
expr_stmt|;
name|broker
operator|.
name|waitUntilStopped
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|oops
parameter_list|)
block|{
name|oops
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|done
operator|.
name|set
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
decl_stmt|;
name|thread
operator|.
name|start
argument_list|()
expr_stmt|;
comment|//executeBatchErrorOps.add(5);
comment|//executeBatchErrorOps.add(3);
name|getAutoCommitCount
operator|.
name|set
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|getAutoCommitErrors
operator|.
name|add
argument_list|(
literal|39
argument_list|)
expr_stmt|;
comment|// network broker to push messages
specifier|final
name|BrokerService
name|other
init|=
operator|new
name|BrokerService
argument_list|()
decl_stmt|;
name|other
operator|.
name|setBrokerName
argument_list|(
literal|"other"
argument_list|)
expr_stmt|;
name|other
operator|.
name|setAdvisorySupport
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|other
operator|.
name|setUseJmx
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|other
operator|.
name|setPersistent
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|NetworkConnector
name|netwokConnector
init|=
name|other
operator|.
name|addNetworkConnector
argument_list|(
literal|"static://tcp://localhost:61616"
argument_list|)
decl_stmt|;
name|netwokConnector
operator|.
name|setStaticBridge
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|netwokConnector
operator|.
name|setStaticallyIncludedDestinations
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|ActiveMQDestination
index|[]
block|{
operator|new
name|ActiveMQQueue
argument_list|(
literal|"TEST"
argument_list|)
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|other
operator|.
name|start
argument_list|()
expr_stmt|;
name|ActiveMQConnectionFactory
name|connectionFactory
init|=
operator|new
name|ActiveMQConnectionFactory
argument_list|(
literal|"vm://other"
argument_list|)
decl_stmt|;
name|ActiveMQConnection
name|activeMQConnection
init|=
operator|(
name|ActiveMQConnection
operator|)
name|connectionFactory
operator|.
name|createConnection
argument_list|()
decl_stmt|;
name|activeMQConnection
operator|.
name|setWatchTopicAdvisories
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|Session
name|session
init|=
name|activeMQConnection
operator|.
name|createSession
argument_list|(
literal|false
argument_list|,
name|Session
operator|.
name|AUTO_ACKNOWLEDGE
argument_list|)
decl_stmt|;
name|activeMQConnection
operator|.
name|start
argument_list|()
expr_stmt|;
name|Destination
name|destination
init|=
name|session
operator|.
name|createQueue
argument_list|(
literal|"TEST"
argument_list|)
decl_stmt|;
name|MessageProducer
name|producer
init|=
name|session
operator|.
name|createProducer
argument_list|(
name|destination
argument_list|)
decl_stmt|;
name|ActiveMQMessage
name|message
init|=
operator|(
name|ActiveMQMessage
operator|)
name|session
operator|.
name|createMessage
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
block|{
name|producer
operator|.
name|send
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
name|Wait
operator|.
name|waitFor
argument_list|(
operator|new
name|Wait
operator|.
name|Condition
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|isSatisified
parameter_list|()
throws|throws
name|Exception
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"MESSAGES DRAINED :"
operator|+
operator|(
operator|(
name|RegionBroker
operator|)
name|other
operator|.
name|getRegionBroker
argument_list|()
operator|)
operator|.
name|getDestinationStatistics
argument_list|()
operator|.
name|getMessages
argument_list|()
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
return|return
literal|0
operator|==
operator|(
operator|(
name|RegionBroker
operator|)
name|other
operator|.
name|getRegionBroker
argument_list|()
operator|)
operator|.
name|getDestinationStatistics
argument_list|()
operator|.
name|getMessages
argument_list|()
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|activeMQConnection
operator|.
name|close
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"db"
argument_list|,
literal|10
argument_list|,
name|dumpMessages
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"messages count"
argument_list|,
literal|10
argument_list|,
operator|(
operator|(
name|RegionBroker
operator|)
name|broker
operator|.
name|getRegionBroker
argument_list|()
operator|)
operator|.
name|getDestinationStatistics
argument_list|()
operator|.
name|getMessages
argument_list|()
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|ObjectName
name|queueViewMBeanName
init|=
operator|new
name|ObjectName
argument_list|(
literal|"org.apache.activemq:type=Broker,brokerName=localhost,destinationType=Queue,destinationName=TEST"
argument_list|)
decl_stmt|;
name|QueueViewMBean
name|proxy
init|=
operator|(
name|QueueViewMBean
operator|)
name|broker
operator|.
name|getManagementContext
argument_list|()
operator|.
name|newProxyInstance
argument_list|(
name|queueViewMBeanName
argument_list|,
name|QueueViewMBean
operator|.
name|class
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"qs"
argument_list|,
literal|10
argument_list|,
name|proxy
operator|.
name|getQueueSize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"curs"
argument_list|,
literal|10
argument_list|,
name|proxy
operator|.
name|cursorSize
argument_list|()
argument_list|)
expr_stmt|;
name|done
operator|.
name|set
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|other
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
specifier|private
class|class
name|TestDataSource
implements|implements
name|javax
operator|.
name|sql
operator|.
name|DataSource
block|{
specifier|private
specifier|final
name|javax
operator|.
name|sql
operator|.
name|DataSource
name|realDataSource
decl_stmt|;
specifier|public
name|TestDataSource
parameter_list|(
name|javax
operator|.
name|sql
operator|.
name|DataSource
name|dataSource
parameter_list|)
block|{
name|realDataSource
operator|=
name|dataSource
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Connection
name|getConnection
parameter_list|()
throws|throws
name|SQLException
block|{
name|Connection
name|autoCommitCheckConnection
init|=
operator|new
name|AutoCommitCheckConnection
argument_list|(
name|realDataSource
operator|.
name|getConnection
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|autoCommitCheckConnection
return|;
block|}
annotation|@
name|Override
specifier|public
name|Connection
name|getConnection
parameter_list|(
name|String
name|username
parameter_list|,
name|String
name|password
parameter_list|)
throws|throws
name|SQLException
block|{
name|Connection
name|autoCommitCheckConnection
init|=
operator|new
name|AutoCommitCheckConnection
argument_list|(
name|realDataSource
operator|.
name|getConnection
argument_list|(
name|username
argument_list|,
name|password
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|autoCommitCheckConnection
return|;
block|}
annotation|@
name|Override
specifier|public
name|PrintWriter
name|getLogWriter
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|realDataSource
operator|.
name|getLogWriter
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setLogWriter
parameter_list|(
name|PrintWriter
name|out
parameter_list|)
throws|throws
name|SQLException
block|{
name|realDataSource
operator|.
name|setLogWriter
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setLoginTimeout
parameter_list|(
name|int
name|seconds
parameter_list|)
throws|throws
name|SQLException
block|{
name|realDataSource
operator|.
name|setLoginTimeout
argument_list|(
name|seconds
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getLoginTimeout
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|realDataSource
operator|.
name|getLoginTimeout
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
name|getParentLogger
parameter_list|()
throws|throws
name|SQLFeatureNotSupportedException
block|{
return|return
name|realDataSource
operator|.
name|getParentLogger
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|unwrap
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|iface
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|realDataSource
operator|.
name|unwrap
argument_list|(
name|iface
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isWrapperFor
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|iface
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|realDataSource
operator|.
name|isWrapperFor
argument_list|(
name|iface
argument_list|)
return|;
block|}
block|}
specifier|private
class|class
name|AutoCommitCheckConnection
implements|implements
name|Connection
block|{
specifier|private
specifier|final
name|Connection
name|realConnection
decl_stmt|;
specifier|public
name|AutoCommitCheckConnection
parameter_list|(
name|Connection
name|connection
parameter_list|)
block|{
name|this
operator|.
name|realConnection
operator|=
name|connection
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|commit
parameter_list|()
throws|throws
name|SQLException
block|{
name|realConnection
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
comment|// Just plumbing for wrapper. Might have been better to do a Dynamic Proxy here.
annotation|@
name|Override
specifier|public
name|Statement
name|createStatement
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|realConnection
operator|.
name|createStatement
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|PreparedStatement
name|prepareStatement
parameter_list|(
name|String
name|sql
parameter_list|)
throws|throws
name|SQLException
block|{
comment|//final AtomicInteger executeCount = new AtomicInteger();
specifier|final
name|PreparedStatement
name|delegate
init|=
name|realConnection
operator|.
name|prepareStatement
argument_list|(
name|sql
argument_list|)
decl_stmt|;
return|return
operator|new
name|PreparedStatement
argument_list|()
block|{
specifier|public
name|ResultSet
name|executeQuery
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|delegate
operator|.
name|executeQuery
argument_list|()
return|;
block|}
specifier|final
specifier|public
name|int
name|executeUpdate
parameter_list|()
throws|throws
name|SQLException
block|{
name|int
name|ret
init|=
name|delegate
operator|.
name|executeUpdate
argument_list|()
decl_stmt|;
if|if
condition|(
name|executeUpdateErrorOps
operator|.
name|contains
argument_list|(
name|executeUpdateErrorOpsCount
operator|.
name|incrementAndGet
argument_list|()
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|SQLRecoverableException
argument_list|(
literal|"SOME executeUpdate ERROR["
operator|+
name|executeUpdateErrorOpsCount
operator|.
name|get
argument_list|()
operator|+
literal|"]"
argument_list|)
throw|;
block|}
return|return
name|ret
return|;
block|}
specifier|public
name|void
name|setNull
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|int
name|sqlType
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setNull
argument_list|(
name|parameterIndex
argument_list|,
name|sqlType
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setBoolean
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|boolean
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setBoolean
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setByte
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|byte
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setByte
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setShort
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|short
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setShort
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setInt
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|int
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setInt
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setLong
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|long
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setLong
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setFloat
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|float
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setFloat
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setDouble
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|double
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setDouble
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setBigDecimal
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|BigDecimal
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setBigDecimal
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setString
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|String
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setString
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setBytes
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|byte
index|[]
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setBytes
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setDate
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Date
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setDate
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setTime
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Time
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setTime
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setTimestamp
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Timestamp
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setTimestamp
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setAsciiStream
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|InputStream
name|x
parameter_list|,
name|int
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setAsciiStream
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|,
name|length
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Deprecated
specifier|public
name|void
name|setUnicodeStream
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|InputStream
name|x
parameter_list|,
name|int
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setUnicodeStream
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|,
name|length
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setBinaryStream
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|InputStream
name|x
parameter_list|,
name|int
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setBinaryStream
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|,
name|length
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|clearParameters
parameter_list|()
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|clearParameters
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|setObject
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Object
name|x
parameter_list|,
name|int
name|targetSqlType
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setObject
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|,
name|targetSqlType
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setObject
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Object
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setObject
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|execute
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|delegate
operator|.
name|execute
argument_list|()
return|;
block|}
specifier|public
name|void
name|addBatch
parameter_list|()
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|addBatch
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|setCharacterStream
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Reader
name|reader
parameter_list|,
name|int
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setCharacterStream
argument_list|(
name|parameterIndex
argument_list|,
name|reader
argument_list|,
name|length
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setRef
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Ref
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setRef
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setBlob
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Blob
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setBlob
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setClob
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Clob
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setClob
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setArray
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Array
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setArray
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ResultSetMetaData
name|getMetaData
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|delegate
operator|.
name|getMetaData
argument_list|()
return|;
block|}
specifier|public
name|void
name|setDate
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Date
name|x
parameter_list|,
name|Calendar
name|cal
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setDate
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|,
name|cal
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setTime
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Time
name|x
parameter_list|,
name|Calendar
name|cal
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setTime
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|,
name|cal
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setTimestamp
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Timestamp
name|x
parameter_list|,
name|Calendar
name|cal
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setTimestamp
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|,
name|cal
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setNull
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|int
name|sqlType
parameter_list|,
name|String
name|typeName
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setNull
argument_list|(
name|parameterIndex
argument_list|,
name|sqlType
argument_list|,
name|typeName
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setURL
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|URL
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setURL
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ParameterMetaData
name|getParameterMetaData
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|delegate
operator|.
name|getParameterMetaData
argument_list|()
return|;
block|}
specifier|public
name|void
name|setRowId
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|RowId
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setRowId
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setNString
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|String
name|value
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setNString
argument_list|(
name|parameterIndex
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setNCharacterStream
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Reader
name|value
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setNCharacterStream
argument_list|(
name|parameterIndex
argument_list|,
name|value
argument_list|,
name|length
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setNClob
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|NClob
name|value
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setNClob
argument_list|(
name|parameterIndex
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setClob
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Reader
name|reader
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setClob
argument_list|(
name|parameterIndex
argument_list|,
name|reader
argument_list|,
name|length
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setBlob
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|InputStream
name|inputStream
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setBlob
argument_list|(
name|parameterIndex
argument_list|,
name|inputStream
argument_list|,
name|length
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setNClob
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Reader
name|reader
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setNClob
argument_list|(
name|parameterIndex
argument_list|,
name|reader
argument_list|,
name|length
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setSQLXML
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|SQLXML
name|xmlObject
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setSQLXML
argument_list|(
name|parameterIndex
argument_list|,
name|xmlObject
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setObject
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Object
name|x
parameter_list|,
name|int
name|targetSqlType
parameter_list|,
name|int
name|scaleOrLength
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setObject
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|,
name|targetSqlType
argument_list|,
name|scaleOrLength
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setAsciiStream
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|InputStream
name|x
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setAsciiStream
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|,
name|length
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setBinaryStream
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|InputStream
name|x
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setBinaryStream
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|,
name|length
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setCharacterStream
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Reader
name|reader
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setCharacterStream
argument_list|(
name|parameterIndex
argument_list|,
name|reader
argument_list|,
name|length
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setAsciiStream
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|InputStream
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setAsciiStream
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setBinaryStream
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|InputStream
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setBinaryStream
argument_list|(
name|parameterIndex
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setCharacterStream
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Reader
name|reader
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setCharacterStream
argument_list|(
name|parameterIndex
argument_list|,
name|reader
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setNCharacterStream
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Reader
name|value
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setNCharacterStream
argument_list|(
name|parameterIndex
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setClob
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Reader
name|reader
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setClob
argument_list|(
name|parameterIndex
argument_list|,
name|reader
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setBlob
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|InputStream
name|inputStream
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setBlob
argument_list|(
name|parameterIndex
argument_list|,
name|inputStream
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setNClob
parameter_list|(
name|int
name|parameterIndex
parameter_list|,
name|Reader
name|reader
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setNClob
argument_list|(
name|parameterIndex
argument_list|,
name|reader
argument_list|)
expr_stmt|;
block|}
comment|/*                 public void setObject(int parameterIndex,                                       Object x,                                       SQLType targetSqlType,                                       int scaleOrLength) throws SQLException {                     delegate.setObject(parameterIndex, x, targetSqlType, scaleOrLength);                 }                  public void setObject(int parameterIndex, Object x, SQLType targetSqlType) throws SQLException {                     delegate.setObject(parameterIndex, x, targetSqlType);                 }                  public long executeLargeUpdate() throws SQLException {                     return delegate.executeLargeUpdate();                 } */
specifier|public
name|ResultSet
name|executeQuery
parameter_list|(
name|String
name|sql
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|delegate
operator|.
name|executeQuery
argument_list|(
name|sql
argument_list|)
return|;
block|}
specifier|public
name|int
name|executeUpdate
parameter_list|(
name|String
name|sql
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|delegate
operator|.
name|executeUpdate
argument_list|(
name|sql
argument_list|)
return|;
block|}
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|public
name|int
name|getMaxFieldSize
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|delegate
operator|.
name|getMaxFieldSize
argument_list|()
return|;
block|}
specifier|public
name|void
name|setMaxFieldSize
parameter_list|(
name|int
name|max
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setMaxFieldSize
argument_list|(
name|max
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getMaxRows
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|delegate
operator|.
name|getMaxRows
argument_list|()
return|;
block|}
specifier|public
name|void
name|setMaxRows
parameter_list|(
name|int
name|max
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setMaxRows
argument_list|(
name|max
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setEscapeProcessing
parameter_list|(
name|boolean
name|enable
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setEscapeProcessing
argument_list|(
name|enable
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getQueryTimeout
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|delegate
operator|.
name|getQueryTimeout
argument_list|()
return|;
block|}
specifier|public
name|void
name|setQueryTimeout
parameter_list|(
name|int
name|seconds
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setQueryTimeout
argument_list|(
name|seconds
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|cancel
parameter_list|()
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|cancel
argument_list|()
expr_stmt|;
block|}
specifier|public
name|SQLWarning
name|getWarnings
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|delegate
operator|.
name|getWarnings
argument_list|()
return|;
block|}
specifier|public
name|void
name|clearWarnings
parameter_list|()
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|clearWarnings
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|setCursorName
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setCursorName
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|execute
parameter_list|(
name|String
name|sql
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|delegate
operator|.
name|execute
argument_list|(
name|sql
argument_list|)
return|;
block|}
specifier|public
name|ResultSet
name|getResultSet
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|delegate
operator|.
name|getResultSet
argument_list|()
return|;
block|}
specifier|public
name|int
name|getUpdateCount
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|delegate
operator|.
name|getUpdateCount
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|getMoreResults
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|delegate
operator|.
name|getMoreResults
argument_list|()
return|;
block|}
specifier|public
name|void
name|setFetchDirection
parameter_list|(
name|int
name|direction
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setFetchDirection
argument_list|(
name|direction
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getFetchDirection
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|delegate
operator|.
name|getFetchDirection
argument_list|()
return|;
block|}
specifier|public
name|void
name|setFetchSize
parameter_list|(
name|int
name|rows
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setFetchSize
argument_list|(
name|rows
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getFetchSize
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|delegate
operator|.
name|getFetchSize
argument_list|()
return|;
block|}
specifier|public
name|int
name|getResultSetConcurrency
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|delegate
operator|.
name|getResultSetConcurrency
argument_list|()
return|;
block|}
specifier|public
name|int
name|getResultSetType
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|delegate
operator|.
name|getResultSetType
argument_list|()
return|;
block|}
specifier|public
name|void
name|addBatch
parameter_list|(
name|String
name|sql
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|addBatch
argument_list|(
name|sql
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|clearBatch
parameter_list|()
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|clearBatch
argument_list|()
expr_stmt|;
block|}
specifier|public
name|int
index|[]
name|executeBatch
parameter_list|()
throws|throws
name|SQLException
block|{
if|if
condition|(
name|executeBatchErrorOps
operator|.
name|contains
argument_list|(
name|executeBatchErrorOpsCount
operator|.
name|incrementAndGet
argument_list|()
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|SQLRecoverableException
argument_list|(
literal|"SOME executeBatch ERROR["
operator|+
name|executeBatchErrorOpsCount
operator|.
name|get
argument_list|()
operator|+
literal|"]"
argument_list|)
throw|;
block|}
return|return
name|delegate
operator|.
name|executeBatch
argument_list|()
return|;
block|}
specifier|public
name|Connection
name|getConnection
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|delegate
operator|.
name|getConnection
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|getMoreResults
parameter_list|(
name|int
name|current
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|delegate
operator|.
name|getMoreResults
argument_list|(
name|current
argument_list|)
return|;
block|}
specifier|public
name|ResultSet
name|getGeneratedKeys
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|delegate
operator|.
name|getGeneratedKeys
argument_list|()
return|;
block|}
specifier|public
name|int
name|executeUpdate
parameter_list|(
name|String
name|sql
parameter_list|,
name|int
name|autoGeneratedKeys
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|delegate
operator|.
name|executeUpdate
argument_list|(
name|sql
argument_list|,
name|autoGeneratedKeys
argument_list|)
return|;
block|}
specifier|public
name|int
name|executeUpdate
parameter_list|(
name|String
name|sql
parameter_list|,
name|int
index|[]
name|columnIndexes
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|delegate
operator|.
name|executeUpdate
argument_list|(
name|sql
argument_list|,
name|columnIndexes
argument_list|)
return|;
block|}
specifier|public
name|int
name|executeUpdate
parameter_list|(
name|String
name|sql
parameter_list|,
name|String
index|[]
name|columnNames
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|delegate
operator|.
name|executeUpdate
argument_list|(
name|sql
argument_list|,
name|columnNames
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|execute
parameter_list|(
name|String
name|sql
parameter_list|,
name|int
name|autoGeneratedKeys
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|delegate
operator|.
name|execute
argument_list|(
name|sql
argument_list|,
name|autoGeneratedKeys
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|execute
parameter_list|(
name|String
name|sql
parameter_list|,
name|int
index|[]
name|columnIndexes
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|delegate
operator|.
name|execute
argument_list|(
name|sql
argument_list|,
name|columnIndexes
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|execute
parameter_list|(
name|String
name|sql
parameter_list|,
name|String
index|[]
name|columnNames
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|delegate
operator|.
name|execute
argument_list|(
name|sql
argument_list|,
name|columnNames
argument_list|)
return|;
block|}
specifier|public
name|int
name|getResultSetHoldability
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|delegate
operator|.
name|getResultSetHoldability
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|isClosed
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|delegate
operator|.
name|isClosed
argument_list|()
return|;
block|}
specifier|public
name|void
name|setPoolable
parameter_list|(
name|boolean
name|poolable
parameter_list|)
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|setPoolable
argument_list|(
name|poolable
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|isPoolable
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|delegate
operator|.
name|isPoolable
argument_list|()
return|;
block|}
specifier|public
name|void
name|closeOnCompletion
parameter_list|()
throws|throws
name|SQLException
block|{
name|delegate
operator|.
name|closeOnCompletion
argument_list|()
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCloseOnCompletion
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|delegate
operator|.
name|isCloseOnCompletion
argument_list|()
return|;
block|}
comment|/*                 public long getLargeUpdateCount() throws SQLException {                     return delegate.getLargeUpdateCount();                 }                  public void setLargeMaxRows(long max) throws SQLException {                     delegate.setLargeMaxRows(max);                 }                  public long getLargeMaxRows() throws SQLException {                     return delegate.getLargeMaxRows();                 }                  public long[] executeLargeBatch() throws SQLException {                     return delegate.executeLargeBatch();                 }                  public long executeLargeUpdate(String sql) throws SQLException {                     return delegate.executeLargeUpdate(sql);                 }                  public long executeLargeUpdate(String sql, int autoGeneratedKeys) throws SQLException {                     return delegate.executeLargeUpdate(sql, autoGeneratedKeys);                 }                  public long executeLargeUpdate(String sql, int[] columnIndexes) throws SQLException {                     return delegate.executeLargeUpdate(sql, columnIndexes);                 }                  public long executeLargeUpdate(String sql, String[] columnNames) throws SQLException {                     return delegate.executeLargeUpdate(sql, columnNames);                 } */
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|unwrap
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|iface
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|delegate
operator|.
name|unwrap
argument_list|(
name|iface
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|isWrapperFor
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|iface
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|delegate
operator|.
name|isWrapperFor
argument_list|(
name|iface
argument_list|)
return|;
block|}
block|}
return|;
block|}
annotation|@
name|Override
specifier|public
name|CallableStatement
name|prepareCall
parameter_list|(
name|String
name|sql
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|realConnection
operator|.
name|prepareCall
argument_list|(
name|sql
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|nativeSQL
parameter_list|(
name|String
name|sql
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|realConnection
operator|.
name|nativeSQL
argument_list|(
name|sql
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setAutoCommit
parameter_list|(
name|boolean
name|autoCommit
parameter_list|)
throws|throws
name|SQLException
block|{
name|realConnection
operator|.
name|setAutoCommit
argument_list|(
name|autoCommit
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|getAutoCommit
parameter_list|()
throws|throws
name|SQLException
block|{
if|if
condition|(
name|getAutoCommitErrors
operator|.
name|contains
argument_list|(
name|getAutoCommitCount
operator|.
name|incrementAndGet
argument_list|()
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|SQLRecoverableException
argument_list|(
literal|"AutoCommit["
operator|+
name|getAutoCommitCount
operator|.
name|get
argument_list|()
operator|+
literal|"]"
argument_list|)
throw|;
block|}
return|return
name|realConnection
operator|.
name|getAutoCommit
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|rollback
parameter_list|()
throws|throws
name|SQLException
block|{
name|realConnection
operator|.
name|rollback
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|SQLException
block|{
name|realConnection
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isClosed
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|realConnection
operator|.
name|isClosed
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|DatabaseMetaData
name|getMetaData
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|realConnection
operator|.
name|getMetaData
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setReadOnly
parameter_list|(
name|boolean
name|readOnly
parameter_list|)
throws|throws
name|SQLException
block|{
name|realConnection
operator|.
name|setReadOnly
argument_list|(
name|readOnly
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isReadOnly
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|realConnection
operator|.
name|isReadOnly
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setCatalog
parameter_list|(
name|String
name|catalog
parameter_list|)
throws|throws
name|SQLException
block|{
name|realConnection
operator|.
name|setCatalog
argument_list|(
name|catalog
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getCatalog
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|realConnection
operator|.
name|getCatalog
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setTransactionIsolation
parameter_list|(
name|int
name|level
parameter_list|)
throws|throws
name|SQLException
block|{
name|realConnection
operator|.
name|setTransactionIsolation
argument_list|(
name|level
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getTransactionIsolation
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|realConnection
operator|.
name|getTransactionIsolation
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|SQLWarning
name|getWarnings
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|realConnection
operator|.
name|getWarnings
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|clearWarnings
parameter_list|()
throws|throws
name|SQLException
block|{
name|realConnection
operator|.
name|clearWarnings
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Statement
name|createStatement
parameter_list|(
name|int
name|resultSetType
parameter_list|,
name|int
name|resultSetConcurrency
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|realConnection
operator|.
name|createStatement
argument_list|(
name|resultSetType
argument_list|,
name|resultSetConcurrency
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|PreparedStatement
name|prepareStatement
parameter_list|(
name|String
name|sql
parameter_list|,
name|int
name|resultSetType
parameter_list|,
name|int
name|resultSetConcurrency
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|realConnection
operator|.
name|prepareStatement
argument_list|(
name|sql
argument_list|,
name|resultSetType
argument_list|,
name|resultSetConcurrency
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|CallableStatement
name|prepareCall
parameter_list|(
name|String
name|sql
parameter_list|,
name|int
name|resultSetType
parameter_list|,
name|int
name|resultSetConcurrency
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|realConnection
operator|.
name|prepareCall
argument_list|(
name|sql
argument_list|,
name|resultSetType
argument_list|,
name|resultSetConcurrency
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|getTypeMap
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|realConnection
operator|.
name|getTypeMap
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setTypeMap
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|map
parameter_list|)
throws|throws
name|SQLException
block|{
name|realConnection
operator|.
name|setTypeMap
argument_list|(
name|map
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setHoldability
parameter_list|(
name|int
name|holdability
parameter_list|)
throws|throws
name|SQLException
block|{
name|realConnection
operator|.
name|setHoldability
argument_list|(
name|holdability
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getHoldability
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|realConnection
operator|.
name|getHoldability
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Savepoint
name|setSavepoint
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|realConnection
operator|.
name|setSavepoint
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Savepoint
name|setSavepoint
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|realConnection
operator|.
name|setSavepoint
argument_list|(
name|name
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|rollback
parameter_list|(
name|Savepoint
name|savepoint
parameter_list|)
throws|throws
name|SQLException
block|{
name|realConnection
operator|.
name|rollback
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|releaseSavepoint
parameter_list|(
name|Savepoint
name|savepoint
parameter_list|)
throws|throws
name|SQLException
block|{
name|realConnection
operator|.
name|releaseSavepoint
argument_list|(
name|savepoint
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Statement
name|createStatement
parameter_list|(
name|int
name|resultSetType
parameter_list|,
name|int
name|resultSetConcurrency
parameter_list|,
name|int
name|resultSetHoldability
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|realConnection
operator|.
name|createStatement
argument_list|(
name|resultSetType
argument_list|,
name|resultSetConcurrency
argument_list|,
name|resultSetHoldability
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|PreparedStatement
name|prepareStatement
parameter_list|(
name|String
name|sql
parameter_list|,
name|int
name|resultSetType
parameter_list|,
name|int
name|resultSetConcurrency
parameter_list|,
name|int
name|resultSetHoldability
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|realConnection
operator|.
name|prepareStatement
argument_list|(
name|sql
argument_list|,
name|resultSetType
argument_list|,
name|resultSetConcurrency
argument_list|,
name|resultSetHoldability
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|CallableStatement
name|prepareCall
parameter_list|(
name|String
name|sql
parameter_list|,
name|int
name|resultSetType
parameter_list|,
name|int
name|resultSetConcurrency
parameter_list|,
name|int
name|resultSetHoldability
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|realConnection
operator|.
name|prepareCall
argument_list|(
name|sql
argument_list|,
name|resultSetType
argument_list|,
name|resultSetConcurrency
argument_list|,
name|resultSetHoldability
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|PreparedStatement
name|prepareStatement
parameter_list|(
name|String
name|sql
parameter_list|,
name|int
name|autoGeneratedKeys
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|realConnection
operator|.
name|prepareStatement
argument_list|(
name|sql
argument_list|,
name|autoGeneratedKeys
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|PreparedStatement
name|prepareStatement
parameter_list|(
name|String
name|sql
parameter_list|,
name|int
index|[]
name|columnIndexes
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|realConnection
operator|.
name|prepareStatement
argument_list|(
name|sql
argument_list|,
name|columnIndexes
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|PreparedStatement
name|prepareStatement
parameter_list|(
name|String
name|sql
parameter_list|,
name|String
index|[]
name|columnNames
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|realConnection
operator|.
name|prepareStatement
argument_list|(
name|sql
argument_list|,
name|columnNames
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Clob
name|createClob
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|realConnection
operator|.
name|createClob
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Blob
name|createBlob
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|realConnection
operator|.
name|createBlob
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|NClob
name|createNClob
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|realConnection
operator|.
name|createNClob
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|SQLXML
name|createSQLXML
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|realConnection
operator|.
name|createSQLXML
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isValid
parameter_list|(
name|int
name|timeout
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|realConnection
operator|.
name|isValid
argument_list|(
name|timeout
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setClientInfo
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|value
parameter_list|)
throws|throws
name|SQLClientInfoException
block|{
name|realConnection
operator|.
name|setClientInfo
argument_list|(
name|name
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setClientInfo
parameter_list|(
name|Properties
name|properties
parameter_list|)
throws|throws
name|SQLClientInfoException
block|{
name|realConnection
operator|.
name|setClientInfo
argument_list|(
name|properties
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getClientInfo
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|realConnection
operator|.
name|getClientInfo
argument_list|(
name|name
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Properties
name|getClientInfo
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|realConnection
operator|.
name|getClientInfo
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Array
name|createArrayOf
parameter_list|(
name|String
name|typeName
parameter_list|,
name|Object
index|[]
name|elements
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|realConnection
operator|.
name|createArrayOf
argument_list|(
name|typeName
argument_list|,
name|elements
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Struct
name|createStruct
parameter_list|(
name|String
name|typeName
parameter_list|,
name|Object
index|[]
name|attributes
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|realConnection
operator|.
name|createStruct
argument_list|(
name|typeName
argument_list|,
name|attributes
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setSchema
parameter_list|(
name|String
name|schema
parameter_list|)
throws|throws
name|SQLException
block|{
name|realConnection
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getSchema
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|realConnection
operator|.
name|getSchema
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|abort
parameter_list|(
name|Executor
name|executor
parameter_list|)
throws|throws
name|SQLException
block|{
name|realConnection
operator|.
name|abort
argument_list|(
name|executor
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setNetworkTimeout
parameter_list|(
name|Executor
name|executor
parameter_list|,
name|int
name|milliseconds
parameter_list|)
throws|throws
name|SQLException
block|{
name|realConnection
operator|.
name|setNetworkTimeout
argument_list|(
name|executor
argument_list|,
name|milliseconds
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getNetworkTimeout
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|realConnection
operator|.
name|getNetworkTimeout
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|unwrap
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|iface
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|realConnection
operator|.
name|unwrap
argument_list|(
name|iface
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isWrapperFor
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|iface
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|realConnection
operator|.
name|isWrapperFor
argument_list|(
name|iface
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

