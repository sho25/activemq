begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|amqp
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|amqp
operator|.
name|AmqpTestSupport
import|;
end_import

begin_comment
comment|/**  * Test support class for tests that will be using the AMQP Proton wrapper client.  */
end_comment

begin_class
specifier|public
class|class
name|AmqpClientTestSupport
extends|extends
name|AmqpTestSupport
block|{
specifier|public
name|String
name|getAmqpConnectionURIOptions
parameter_list|()
block|{
return|return
literal|""
return|;
block|}
specifier|public
name|URI
name|getBrokerAmqpConnectionURI
parameter_list|()
block|{
try|try
block|{
name|String
name|uri
init|=
literal|"tcp://127.0.0.1:"
operator|+
name|amqpPort
decl_stmt|;
if|if
condition|(
operator|!
name|getAmqpConnectionURIOptions
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|uri
operator|=
name|uri
operator|+
literal|"?"
operator|+
name|getAmqpConnectionURIOptions
argument_list|()
expr_stmt|;
block|}
return|return
operator|new
name|URI
argument_list|(
name|uri
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|()
throw|;
block|}
block|}
specifier|public
name|AmqpConnection
name|createAmqpConnection
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|createAmqpConnection
argument_list|(
name|getBrokerAmqpConnectionURI
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|AmqpConnection
name|createAmqpConnection
parameter_list|(
name|String
name|username
parameter_list|,
name|String
name|password
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|createAmqpConnection
argument_list|(
name|getBrokerAmqpConnectionURI
argument_list|()
argument_list|,
name|username
argument_list|,
name|password
argument_list|)
return|;
block|}
specifier|public
name|AmqpConnection
name|createAmqpConnection
parameter_list|(
name|URI
name|brokerURI
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|createAmqpConnection
argument_list|(
name|brokerURI
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
return|;
block|}
specifier|public
name|AmqpConnection
name|createAmqpConnection
parameter_list|(
name|URI
name|brokerURI
parameter_list|,
name|String
name|username
parameter_list|,
name|String
name|password
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|createAmqpClient
argument_list|(
name|brokerURI
argument_list|,
name|username
argument_list|,
name|password
argument_list|)
operator|.
name|connect
argument_list|()
return|;
block|}
specifier|public
name|AmqpClient
name|createAmqpClient
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|createAmqpClient
argument_list|(
name|getBrokerAmqpConnectionURI
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
return|;
block|}
specifier|public
name|AmqpClient
name|createAmqpClient
parameter_list|(
name|URI
name|brokerURI
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|createAmqpClient
argument_list|(
name|brokerURI
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
return|;
block|}
specifier|public
name|AmqpClient
name|createAmqpClient
parameter_list|(
name|String
name|username
parameter_list|,
name|String
name|password
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|createAmqpClient
argument_list|(
name|getBrokerAmqpConnectionURI
argument_list|()
argument_list|,
name|username
argument_list|,
name|password
argument_list|)
return|;
block|}
specifier|public
name|AmqpClient
name|createAmqpClient
parameter_list|(
name|URI
name|brokerURI
parameter_list|,
name|String
name|username
parameter_list|,
name|String
name|password
parameter_list|)
throws|throws
name|Exception
block|{
return|return
operator|new
name|AmqpClient
argument_list|(
name|brokerURI
argument_list|,
name|username
argument_list|,
name|password
argument_list|)
return|;
block|}
block|}
end_class

end_unit

