begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|leveldb
operator|.
name|test
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|leveldb
operator|.
name|CountDownFuture
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|leveldb
operator|.
name|util
operator|.
name|FileSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|zookeeper
operator|.
name|server
operator|.
name|NIOServerCnxnFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|zookeeper
operator|.
name|server
operator|.
name|ZooKeeperServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|zookeeper
operator|.
name|server
operator|.
name|persistence
operator|.
name|FileTxnSnapLog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetSocketAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_comment
comment|/**  * Created by chirino on 10/30/13.  */
end_comment

begin_class
specifier|public
class|class
name|ZooKeeperTestSupport
block|{
specifier|protected
name|NIOServerCnxnFactory
name|connector
decl_stmt|;
specifier|static
name|File
name|data_dir
parameter_list|()
block|{
return|return
operator|new
name|File
argument_list|(
literal|"target/activemq-data/leveldb-elections"
argument_list|)
return|;
block|}
annotation|@
name|Before
specifier|public
name|void
name|startZooKeeper
parameter_list|()
throws|throws
name|Exception
block|{
name|FileSupport
operator|.
name|toRichFile
argument_list|(
name|data_dir
argument_list|()
argument_list|)
operator|.
name|recursiveDelete
argument_list|()
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Starting ZooKeeper"
argument_list|)
expr_stmt|;
name|ZooKeeperServer
name|zk_server
init|=
operator|new
name|ZooKeeperServer
argument_list|()
decl_stmt|;
name|zk_server
operator|.
name|setTickTime
argument_list|(
literal|500
argument_list|)
expr_stmt|;
name|zk_server
operator|.
name|setTxnLogFactory
argument_list|(
operator|new
name|FileTxnSnapLog
argument_list|(
operator|new
name|File
argument_list|(
name|data_dir
argument_list|()
argument_list|,
literal|"zk-log"
argument_list|)
argument_list|,
operator|new
name|File
argument_list|(
name|data_dir
argument_list|()
argument_list|,
literal|"zk-data"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connector
operator|=
operator|new
name|NIOServerCnxnFactory
argument_list|()
expr_stmt|;
name|connector
operator|.
name|configure
argument_list|(
operator|new
name|InetSocketAddress
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|connector
operator|.
name|startup
argument_list|(
name|zk_server
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"ZooKeeper started"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|stopZooKeeper
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|connector
operator|!=
literal|null
condition|)
block|{
name|connector
operator|.
name|shutdown
argument_list|()
expr_stmt|;
name|connector
operator|=
literal|null
expr_stmt|;
block|}
name|deleteDirectory
argument_list|(
literal|"zk-log"
argument_list|)
expr_stmt|;
name|deleteDirectory
argument_list|(
literal|"zk-data"
argument_list|)
expr_stmt|;
block|}
specifier|protected
specifier|static
interface|interface
name|Task
block|{
specifier|public
name|void
name|run
parameter_list|()
throws|throws
name|Exception
function_decl|;
block|}
specifier|protected
name|void
name|within
parameter_list|(
name|int
name|time
parameter_list|,
name|TimeUnit
name|unit
parameter_list|,
name|Task
name|task
parameter_list|)
throws|throws
name|InterruptedException
block|{
name|long
name|timeMS
init|=
name|unit
operator|.
name|toMillis
argument_list|(
name|time
argument_list|)
decl_stmt|;
name|long
name|deadline
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|+
name|timeMS
decl_stmt|;
while|while
condition|(
literal|true
condition|)
block|{
try|try
block|{
name|task
operator|.
name|run
argument_list|()
expr_stmt|;
return|return;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|long
name|remaining
init|=
name|deadline
operator|-
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
if|if
condition|(
name|remaining
operator|<=
literal|0
condition|)
block|{
if|if
condition|(
name|e
operator|instanceof
name|RuntimeException
condition|)
block|{
throw|throw
operator|(
name|RuntimeException
operator|)
name|e
throw|;
block|}
if|if
condition|(
name|e
operator|instanceof
name|Error
condition|)
block|{
throw|throw
operator|(
name|Error
operator|)
name|e
throw|;
block|}
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
name|Thread
operator|.
name|sleep
argument_list|(
name|Math
operator|.
name|min
argument_list|(
name|timeMS
operator|/
literal|10
argument_list|,
name|remaining
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|protected
name|CountDownFuture
name|waitFor
parameter_list|(
name|int
name|timeout
parameter_list|,
name|CountDownFuture
modifier|...
name|futures
parameter_list|)
throws|throws
name|InterruptedException
block|{
name|long
name|deadline
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|+
name|timeout
decl_stmt|;
while|while
condition|(
literal|true
condition|)
block|{
for|for
control|(
name|CountDownFuture
name|f
range|:
name|futures
control|)
block|{
if|if
condition|(
name|f
operator|.
name|await
argument_list|(
literal|1
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
condition|)
block|{
return|return
name|f
return|;
block|}
block|}
name|long
name|remaining
init|=
name|deadline
operator|-
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
if|if
condition|(
name|remaining
operator|<
literal|0
condition|)
block|{
return|return
literal|null
return|;
block|}
else|else
block|{
name|Thread
operator|.
name|sleep
argument_list|(
name|Math
operator|.
name|min
argument_list|(
name|remaining
operator|/
literal|10
argument_list|,
literal|100L
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|protected
name|void
name|deleteDirectory
parameter_list|(
name|String
name|s
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
try|try
block|{
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
operator|new
name|File
argument_list|(
name|data_dir
argument_list|()
argument_list|,
name|s
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{         }
block|}
block|}
end_class

end_unit

