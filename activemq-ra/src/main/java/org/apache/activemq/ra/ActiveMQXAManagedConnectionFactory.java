begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ra
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|resource
operator|.
name|ResourceException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|resource
operator|.
name|spi
operator|.
name|ConnectionManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQXAConnectionFactory
import|;
end_import

begin_comment
comment|/**  * Impl that will create an XAConnectionFactory that allows   * org.jboss.jms.server.recovery.MessagingXAResourceRecovery to deal with recovery via jms apis  * on the connectionfactory registered in jndi   * to use, reference in the ra.xml as follows:  * {@code<managedconnectionfactory-class>org.apache.activemq.ra.ActiveMQXAManagedConnectionFactory</managedconnectionfactory-class>}  *                 */
end_comment

begin_class
specifier|public
class|class
name|ActiveMQXAManagedConnectionFactory
extends|extends
name|ActiveMQManagedConnectionFactory
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|2032273395660212918L
decl_stmt|;
comment|/**     * This method returns an ActiveMQXAConnectonFactory<br/>     *      * @see javax.resource.spi.ManagedConnectionFactory#createConnectionFactory(javax.resource.spi.ConnectionManager)     */
annotation|@
name|Override
specifier|public
name|Object
name|createConnectionFactory
parameter_list|(
name|ConnectionManager
name|manager
parameter_list|)
throws|throws
name|ResourceException
block|{
return|return
operator|new
name|ActiveMQXAConnectionFactory
argument_list|(
name|getInfo
argument_list|()
operator|.
name|getUserName
argument_list|()
argument_list|,
name|getInfo
argument_list|()
operator|.
name|getPassword
argument_list|()
argument_list|,
name|getInfo
argument_list|()
operator|.
name|getServerUrl
argument_list|()
argument_list|)
return|;
block|}
comment|/**     * @see java.lang.Object#equals(java.lang.Object)     */
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|object
parameter_list|)
block|{
if|if
condition|(
name|object
operator|==
literal|null
operator|||
name|object
operator|.
name|getClass
argument_list|()
operator|!=
name|ActiveMQXAManagedConnectionFactory
operator|.
name|class
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
operator|(
operator|(
name|ActiveMQXAManagedConnectionFactory
operator|)
name|object
operator|)
operator|.
name|getInfo
argument_list|()
operator|.
name|equals
argument_list|(
name|getInfo
argument_list|()
argument_list|)
return|;
block|}
comment|/**     * @see java.lang.Object#hashCode()     */
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getInfo
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
block|}
end_class

end_unit

