begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|blob
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|JMSException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQConnection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|EmbeddedBrokerTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ActiveMQBlobMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|MessageId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|net
operator|.
name|ftp
operator|.
name|FTPClient
import|;
end_import

begin_comment
comment|/**  * To start this test make sure an ftp server is running with  * user: activemq and password: activemq  */
end_comment

begin_class
specifier|public
class|class
name|FTPBlobUploadStrategyTest
extends|extends
name|EmbeddedBrokerTestSupport
block|{
specifier|private
name|Connection
name|connection
decl_stmt|;
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|bindAddress
operator|=
literal|"vm://localhost?jms.blobTransferPolicy.defaultUploadUrl=ftp://activemq:activemq@localhost/ftptest/"
expr_stmt|;
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|connection
operator|=
name|createConnection
argument_list|()
expr_stmt|;
name|connection
operator|.
name|start
argument_list|()
expr_stmt|;
comment|// check if file exist and delete it
name|URL
name|url
init|=
operator|new
name|URL
argument_list|(
literal|"ftp://activemq:activemq@localhost/ftptest/"
argument_list|)
decl_stmt|;
name|String
name|connectUrl
init|=
name|url
operator|.
name|getHost
argument_list|()
decl_stmt|;
name|int
name|port
init|=
name|url
operator|.
name|getPort
argument_list|()
operator|<
literal|1
condition|?
literal|21
else|:
name|url
operator|.
name|getPort
argument_list|()
decl_stmt|;
name|FTPClient
name|ftp
init|=
operator|new
name|FTPClient
argument_list|()
decl_stmt|;
name|ftp
operator|.
name|connect
argument_list|(
name|connectUrl
argument_list|,
name|port
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|ftp
operator|.
name|login
argument_list|(
literal|"activemq"
argument_list|,
literal|"activemq"
argument_list|)
condition|)
block|{
name|ftp
operator|.
name|quit
argument_list|()
expr_stmt|;
name|ftp
operator|.
name|disconnect
argument_list|()
expr_stmt|;
throw|throw
operator|new
name|JMSException
argument_list|(
literal|"Cant Authentificate to FTP-Server"
argument_list|)
throw|;
block|}
name|ftp
operator|.
name|changeWorkingDirectory
argument_list|(
literal|"ftptest"
argument_list|)
expr_stmt|;
name|ftp
operator|.
name|deleteFile
argument_list|(
literal|"testmessage"
argument_list|)
expr_stmt|;
name|ftp
operator|.
name|quit
argument_list|()
expr_stmt|;
name|ftp
operator|.
name|disconnect
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testFileUpload
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|file
init|=
name|File
operator|.
name|createTempFile
argument_list|(
literal|"amq-data-file-"
argument_list|,
literal|".dat"
argument_list|)
decl_stmt|;
comment|// lets write some data
name|BufferedWriter
name|writer
init|=
operator|new
name|BufferedWriter
argument_list|(
operator|new
name|FileWriter
argument_list|(
name|file
argument_list|)
argument_list|)
decl_stmt|;
name|writer
operator|.
name|append
argument_list|(
literal|"hello world"
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Session
name|session
init|=
name|connection
operator|.
name|createSession
argument_list|(
literal|false
argument_list|,
name|Session
operator|.
name|AUTO_ACKNOWLEDGE
argument_list|)
decl_stmt|;
operator|(
operator|(
name|ActiveMQConnection
operator|)
name|connection
operator|)
operator|.
name|setCopyMessageOnSend
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|ActiveMQBlobMessage
name|message
init|=
call|(
name|ActiveMQBlobMessage
call|)
argument_list|(
operator|(
name|ActiveMQSession
operator|)
name|session
argument_list|)
operator|.
name|createBlobMessage
argument_list|(
name|file
argument_list|)
decl_stmt|;
name|message
operator|.
name|setMessageId
argument_list|(
operator|new
name|MessageId
argument_list|(
literal|"testmessage"
argument_list|)
argument_list|)
expr_stmt|;
name|message
operator|.
name|onSend
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"ftp://activemq:activemq@localhost/ftptest/testmessage"
argument_list|,
name|message
operator|.
name|getURL
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

