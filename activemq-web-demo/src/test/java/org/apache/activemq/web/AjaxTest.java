begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|web
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|HttpClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|HttpMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|methods
operator|.
name|GetMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|methods
operator|.
name|PostMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageProducer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|TextMessage
import|;
end_import

begin_class
specifier|public
class|class
name|AjaxTest
extends|extends
name|JettyTestSupport
block|{
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|AjaxTest
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|String
name|expectedResponse
init|=
literal|"<ajax-response>\n"
operator|+
literal|"<response id='handler' destination='queue://test'>test one</response>\n"
operator|+
literal|"<response id='handler' destination='queue://test'>test two</response>\n"
operator|+
literal|"<response id='handler' destination='queue://test'>test three</response>\n"
operator|+
literal|"</ajax-response>"
decl_stmt|;
specifier|public
name|void
name|testReceiveMultipleMessagesFromQueue
parameter_list|()
throws|throws
name|Exception
block|{
name|MessageProducer
name|local_producer
init|=
name|session
operator|.
name|createProducer
argument_list|(
name|session
operator|.
name|createQueue
argument_list|(
literal|"test"
argument_list|)
argument_list|)
decl_stmt|;
name|HttpClient
name|httpClient
init|=
operator|new
name|HttpClient
argument_list|()
decl_stmt|;
name|PostMethod
name|post
init|=
operator|new
name|PostMethod
argument_list|(
literal|"http://localhost:8080/amq"
argument_list|)
decl_stmt|;
name|post
operator|.
name|addParameter
argument_list|(
literal|"destination"
argument_list|,
literal|"queue://test"
argument_list|)
expr_stmt|;
name|post
operator|.
name|addParameter
argument_list|(
literal|"type"
argument_list|,
literal|"listen"
argument_list|)
expr_stmt|;
name|post
operator|.
name|addParameter
argument_list|(
literal|"message"
argument_list|,
literal|"handler"
argument_list|)
expr_stmt|;
name|httpClient
operator|.
name|executeMethod
argument_list|(
name|post
argument_list|)
expr_stmt|;
comment|// send message
name|TextMessage
name|msg1
init|=
name|session
operator|.
name|createTextMessage
argument_list|(
literal|"test one"
argument_list|)
decl_stmt|;
name|producer
operator|.
name|send
argument_list|(
name|msg1
argument_list|)
expr_stmt|;
name|TextMessage
name|msg2
init|=
name|session
operator|.
name|createTextMessage
argument_list|(
literal|"test two"
argument_list|)
decl_stmt|;
name|producer
operator|.
name|send
argument_list|(
name|msg2
argument_list|)
expr_stmt|;
name|TextMessage
name|msg3
init|=
name|session
operator|.
name|createTextMessage
argument_list|(
literal|"test three"
argument_list|)
decl_stmt|;
name|producer
operator|.
name|send
argument_list|(
name|msg3
argument_list|)
expr_stmt|;
name|HttpMethod
name|get
init|=
operator|new
name|GetMethod
argument_list|(
literal|"http://localhost:8080/amq?timeout=5000"
argument_list|)
decl_stmt|;
name|httpClient
operator|.
name|executeMethod
argument_list|(
name|get
argument_list|)
expr_stmt|;
name|byte
index|[]
name|responseBody
init|=
name|get
operator|.
name|getResponseBody
argument_list|()
decl_stmt|;
name|String
name|response
init|=
operator|new
name|String
argument_list|(
name|responseBody
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Poll response: "
operator|+
name|response
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Poll response not right"
argument_list|,
name|expectedResponse
operator|.
name|trim
argument_list|()
argument_list|,
name|response
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

