begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|filter
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_comment
comment|/**  * An implementation of {@link DestinationNode} which navigates all the children of the given node  * ignoring the name of the current path (so for navigating using * in a wildcard).  *  *   */
end_comment

begin_class
specifier|public
class|class
name|AnyChildDestinationNode
implements|implements
name|DestinationNode
block|{
specifier|private
name|DestinationNode
name|node
decl_stmt|;
specifier|public
name|AnyChildDestinationNode
parameter_list|(
name|DestinationNode
name|node
parameter_list|)
block|{
name|this
operator|.
name|node
operator|=
name|node
expr_stmt|;
block|}
specifier|public
name|void
name|appendMatchingValues
parameter_list|(
name|Set
name|answer
parameter_list|,
name|String
index|[]
name|paths
parameter_list|,
name|int
name|startIndex
parameter_list|)
block|{
name|Iterator
name|iter
init|=
name|getChildNodes
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|iter
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|DestinationNode
name|child
init|=
operator|(
name|DestinationNode
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|child
operator|.
name|appendMatchingValues
argument_list|(
name|answer
argument_list|,
name|paths
argument_list|,
name|startIndex
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|appendMatchingWildcards
parameter_list|(
name|Set
name|answer
parameter_list|,
name|String
index|[]
name|paths
parameter_list|,
name|int
name|startIndex
parameter_list|)
block|{
name|Iterator
name|iter
init|=
name|getChildNodes
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|iter
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|DestinationNode
name|child
init|=
operator|(
name|DestinationNode
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|child
operator|.
name|appendMatchingWildcards
argument_list|(
name|answer
argument_list|,
name|paths
argument_list|,
name|startIndex
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|appendDescendantValues
parameter_list|(
name|Set
name|answer
parameter_list|)
block|{
name|Iterator
name|iter
init|=
name|getChildNodes
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|iter
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|DestinationNode
name|child
init|=
operator|(
name|DestinationNode
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|child
operator|.
name|appendDescendantValues
argument_list|(
name|answer
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|DestinationNode
name|getChild
parameter_list|(
name|String
name|path
parameter_list|)
block|{
specifier|final
name|Collection
name|list
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
name|Iterator
name|iter
init|=
name|getChildNodes
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|iter
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|DestinationNode
name|child
init|=
operator|(
name|DestinationNode
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|DestinationNode
name|answer
init|=
name|child
operator|.
name|getChild
argument_list|(
name|path
argument_list|)
decl_stmt|;
if|if
condition|(
name|answer
operator|!=
literal|null
condition|)
block|{
name|list
operator|.
name|add
argument_list|(
name|answer
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
operator|!
name|list
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
return|return
operator|new
name|AnyChildDestinationNode
argument_list|(
name|this
argument_list|)
block|{
specifier|protected
name|Collection
name|getChildNodes
parameter_list|()
block|{
return|return
name|list
return|;
block|}
block|}
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|Collection
name|getDesendentValues
parameter_list|()
block|{
name|Collection
name|answer
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
name|Iterator
name|iter
init|=
name|getChildNodes
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|iter
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|DestinationNode
name|child
init|=
operator|(
name|DestinationNode
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|answer
operator|.
name|addAll
argument_list|(
name|child
operator|.
name|getDesendentValues
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|answer
return|;
block|}
specifier|public
name|Collection
name|getValues
parameter_list|()
block|{
name|Collection
name|answer
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
name|Iterator
name|iter
init|=
name|getChildNodes
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|iter
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|DestinationNode
name|child
init|=
operator|(
name|DestinationNode
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|answer
operator|.
name|addAll
argument_list|(
name|child
operator|.
name|getValues
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|answer
return|;
block|}
specifier|public
name|Collection
name|getChildren
parameter_list|()
block|{
name|Collection
name|answer
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
name|Iterator
name|iter
init|=
name|getChildNodes
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|iter
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|DestinationNode
name|child
init|=
operator|(
name|DestinationNode
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|answer
operator|.
name|addAll
argument_list|(
name|child
operator|.
name|getChildren
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|answer
return|;
block|}
specifier|public
name|Collection
name|removeDesendentValues
parameter_list|()
block|{
name|Collection
name|answer
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
name|Iterator
name|iter
init|=
name|getChildNodes
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|iter
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|DestinationNode
name|child
init|=
operator|(
name|DestinationNode
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|answer
operator|.
name|addAll
argument_list|(
name|child
operator|.
name|removeDesendentValues
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|answer
return|;
block|}
specifier|public
name|Collection
name|removeValues
parameter_list|()
block|{
name|Collection
name|answer
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
name|Iterator
name|iter
init|=
name|getChildNodes
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|iter
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|DestinationNode
name|child
init|=
operator|(
name|DestinationNode
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|answer
operator|.
name|addAll
argument_list|(
name|child
operator|.
name|removeValues
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|answer
return|;
block|}
specifier|protected
name|Collection
name|getChildNodes
parameter_list|()
block|{
return|return
name|node
operator|.
name|getChildren
argument_list|()
return|;
block|}
block|}
end_class

end_unit

