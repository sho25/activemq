begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|tcp
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|ServerSocket
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|net
operator|.
name|ServerSocketFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_comment
comment|/**  */
end_comment

begin_class
specifier|public
class|class
name|ServerSocketTstFactory
extends|extends
name|ServerSocketFactory
block|{
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|ServerSocketTstFactory
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
class|class
name|ServerSocketTst
block|{
specifier|private
specifier|final
name|ServerSocket
name|socket
decl_stmt|;
specifier|public
name|ServerSocketTst
parameter_list|(
name|int
name|port
parameter_list|,
name|Random
name|rnd
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|socket
operator|=
name|ServerSocketFactory
operator|.
name|getDefault
argument_list|()
operator|.
name|createServerSocket
argument_list|(
name|port
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ServerSocketTst
parameter_list|(
name|int
name|port
parameter_list|,
name|int
name|backlog
parameter_list|,
name|Random
name|rnd
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|socket
operator|=
name|ServerSocketFactory
operator|.
name|getDefault
argument_list|()
operator|.
name|createServerSocket
argument_list|(
name|port
argument_list|,
name|backlog
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ServerSocketTst
parameter_list|(
name|int
name|port
parameter_list|,
name|int
name|backlog
parameter_list|,
name|InetAddress
name|bindAddr
parameter_list|,
name|Random
name|rnd
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|socket
operator|=
name|ServerSocketFactory
operator|.
name|getDefault
argument_list|()
operator|.
name|createServerSocket
argument_list|(
name|port
argument_list|,
name|backlog
argument_list|,
name|bindAddr
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ServerSocket
name|getSocket
parameter_list|()
block|{
return|return
name|this
operator|.
name|socket
return|;
block|}
block|}
empty_stmt|;
specifier|private
specifier|final
name|Random
name|rnd
decl_stmt|;
specifier|public
name|ServerSocketTstFactory
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Creating a new ServerSocketTstFactory"
argument_list|)
expr_stmt|;
name|this
operator|.
name|rnd
operator|=
operator|new
name|Random
argument_list|()
expr_stmt|;
block|}
specifier|public
name|ServerSocket
name|createServerSocket
parameter_list|(
name|int
name|port
parameter_list|)
throws|throws
name|IOException
block|{
name|ServerSocketTst
name|sSock
init|=
operator|new
name|ServerSocketTst
argument_list|(
name|port
argument_list|,
name|this
operator|.
name|rnd
argument_list|)
decl_stmt|;
return|return
name|sSock
operator|.
name|getSocket
argument_list|()
return|;
block|}
specifier|public
name|ServerSocket
name|createServerSocket
parameter_list|(
name|int
name|port
parameter_list|,
name|int
name|backlog
parameter_list|)
throws|throws
name|IOException
block|{
name|ServerSocketTst
name|sSock
init|=
operator|new
name|ServerSocketTst
argument_list|(
name|port
argument_list|,
name|backlog
argument_list|,
name|this
operator|.
name|rnd
argument_list|)
decl_stmt|;
return|return
name|sSock
operator|.
name|getSocket
argument_list|()
return|;
block|}
specifier|public
name|ServerSocket
name|createServerSocket
parameter_list|(
name|int
name|port
parameter_list|,
name|int
name|backlog
parameter_list|,
name|InetAddress
name|ifAddress
parameter_list|)
throws|throws
name|IOException
block|{
name|ServerSocketTst
name|sSock
init|=
operator|new
name|ServerSocketTst
argument_list|(
name|port
argument_list|,
name|backlog
argument_list|,
name|ifAddress
argument_list|,
name|this
operator|.
name|rnd
argument_list|)
decl_stmt|;
return|return
name|sSock
operator|.
name|getSocket
argument_list|()
return|;
block|}
specifier|private
specifier|final
specifier|static
name|ServerSocketTstFactory
name|server
init|=
operator|new
name|ServerSocketTstFactory
argument_list|()
decl_stmt|;
specifier|public
specifier|static
name|ServerSocketTstFactory
name|getDefault
parameter_list|()
block|{
return|return
name|server
return|;
block|}
block|}
end_class

end_unit

