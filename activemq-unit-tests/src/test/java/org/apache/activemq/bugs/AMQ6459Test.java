begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|bugs
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQConnection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|jmx
operator|.
name|BrokerViewMBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|policy
operator|.
name|PolicyEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|policy
operator|.
name|PolicyMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadb
operator|.
name|plist
operator|.
name|PListStoreImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|usage
operator|.
name|SystemUsage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|util
operator|.
name|Wait
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|ConnectionFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Destination
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageConsumer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageProducer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_comment
comment|/**  * Ensure the tempPercentUsage JMX attribute decreases after temp store usage is decreased  *  */
end_comment

begin_class
specifier|public
class|class
name|AMQ6459Test
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|AMQ6459Test
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|DESTINATION
init|=
literal|"testQ1"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|int
name|MESSAGES_TO_SEND
init|=
literal|4000
decl_stmt|;
specifier|private
name|String
name|TRANSPORT_URL
init|=
literal|"tcp://0.0.0.0:0"
decl_stmt|;
name|BrokerService
name|broker
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|createBroker
parameter_list|()
throws|throws
name|Exception
block|{
name|broker
operator|=
operator|new
name|BrokerService
argument_list|()
expr_stmt|;
name|broker
operator|.
name|setDeleteAllMessagesOnStartup
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|broker
operator|.
name|setUseJmx
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|PolicyMap
name|policyMap
init|=
operator|new
name|PolicyMap
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|PolicyEntry
argument_list|>
name|entries
init|=
operator|new
name|ArrayList
argument_list|<
name|PolicyEntry
argument_list|>
argument_list|()
decl_stmt|;
name|PolicyEntry
name|pe
init|=
operator|new
name|PolicyEntry
argument_list|()
decl_stmt|;
name|pe
operator|.
name|setTopicPrefetch
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|pe
operator|.
name|setTopic
argument_list|(
literal|">"
argument_list|)
expr_stmt|;
name|entries
operator|.
name|add
argument_list|(
name|pe
argument_list|)
expr_stmt|;
name|policyMap
operator|.
name|setPolicyEntries
argument_list|(
name|entries
argument_list|)
expr_stmt|;
name|broker
operator|.
name|setDestinationPolicy
argument_list|(
name|policyMap
argument_list|)
expr_stmt|;
name|SystemUsage
name|systemUsage
init|=
name|broker
operator|.
name|getSystemUsage
argument_list|()
decl_stmt|;
name|systemUsage
operator|.
name|getTempUsage
argument_list|()
operator|.
name|setLimit
argument_list|(
literal|50
operator|*
literal|1024
operator|*
literal|1024
argument_list|)
expr_stmt|;
name|systemUsage
operator|.
name|getMemoryUsage
argument_list|()
operator|.
name|setLimit
argument_list|(
literal|800
operator|*
literal|1024
argument_list|)
expr_stmt|;
name|PListStoreImpl
name|pListStore
init|=
operator|(
name|PListStoreImpl
operator|)
name|broker
operator|.
name|getTempDataStore
argument_list|()
decl_stmt|;
name|pListStore
operator|.
name|setJournalMaxFileLength
argument_list|(
literal|24
operator|*
literal|1024
argument_list|)
expr_stmt|;
name|pListStore
operator|.
name|setCleanupInterval
argument_list|(
literal|2000
argument_list|)
expr_stmt|;
name|broker
operator|.
name|addConnector
argument_list|(
name|TRANSPORT_URL
argument_list|)
expr_stmt|;
name|broker
operator|.
name|start
argument_list|()
expr_stmt|;
name|broker
operator|.
name|waitUntilStarted
argument_list|()
expr_stmt|;
name|TRANSPORT_URL
operator|=
name|broker
operator|.
name|getTransportConnectorByScheme
argument_list|(
literal|"tcp"
argument_list|)
operator|.
name|getPublishableConnectString
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|stopBroker
parameter_list|()
throws|throws
name|Exception
block|{
name|broker
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTempPercentUsageDecreases
parameter_list|()
throws|throws
name|Exception
block|{
comment|//create a topic subscriber, but do not consume messages
name|MessageConsumer
name|messageConsumer
init|=
name|createConsumer
argument_list|()
decl_stmt|;
comment|//send X messages with with a sequence number number in the message property.
name|sendMessages
argument_list|(
name|MESSAGES_TO_SEND
argument_list|)
expr_stmt|;
specifier|final
name|BrokerViewMBean
name|brokerView
init|=
name|getBrokerView
argument_list|(
name|broker
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"tempPercentageUsage is "
operator|+
name|brokerView
operator|.
name|getTempPercentUsage
argument_list|()
argument_list|)
expr_stmt|;
name|Wait
operator|.
name|waitFor
argument_list|(
operator|new
name|Wait
operator|.
name|Condition
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|isSatisified
parameter_list|()
throws|throws
name|Exception
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"tempPercentageUsage now "
operator|+
name|brokerView
operator|.
name|getTempPercentUsage
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|brokerView
operator|.
name|getTempPercentUsage
argument_list|()
operator|>
literal|50
return|;
block|}
block|}
argument_list|)
expr_stmt|;
specifier|final
name|int
name|tempPercentUsageWithConsumer
init|=
name|brokerView
operator|.
name|getTempPercentUsage
argument_list|()
decl_stmt|;
comment|//ensure the tempPercentageUsage is at a high number
name|assertTrue
argument_list|(
literal|" tempPercentageUsage "
argument_list|,
operator|(
literal|50
operator|<
name|tempPercentUsageWithConsumer
operator|)
argument_list|)
expr_stmt|;
comment|//close the consumer, releasing the temp storage
name|messageConsumer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Wait
operator|.
name|waitFor
argument_list|(
operator|new
name|Wait
operator|.
name|Condition
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|isSatisified
parameter_list|()
throws|throws
name|Exception
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"tempPercentageUsage now (after consumer closed) "
operator|+
name|brokerView
operator|.
name|getTempPercentUsage
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|tempPercentUsageWithConsumer
operator|>
name|brokerView
operator|.
name|getTempPercentUsage
argument_list|()
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"tempPercentageUsage should be less after consumer has closed"
argument_list|,
name|tempPercentUsageWithConsumer
operator|>
name|brokerView
operator|.
name|getTempPercentUsage
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|MessageConsumer
name|createConsumer
parameter_list|()
throws|throws
name|Exception
block|{
name|ConnectionFactory
name|connectionFactory
init|=
operator|new
name|ActiveMQConnectionFactory
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|,
name|TRANSPORT_URL
argument_list|)
decl_stmt|;
name|Connection
name|connection
init|=
name|connectionFactory
operator|.
name|createConnection
argument_list|()
decl_stmt|;
name|connection
operator|.
name|start
argument_list|()
expr_stmt|;
name|Session
name|session
init|=
name|connection
operator|.
name|createSession
argument_list|(
literal|false
argument_list|,
name|Session
operator|.
name|AUTO_ACKNOWLEDGE
argument_list|)
decl_stmt|;
name|Destination
name|destination
init|=
name|session
operator|.
name|createTopic
argument_list|(
name|DESTINATION
argument_list|)
decl_stmt|;
name|MessageConsumer
name|messageConsumer
init|=
name|session
operator|.
name|createConsumer
argument_list|(
name|destination
argument_list|)
decl_stmt|;
return|return
name|messageConsumer
return|;
block|}
comment|/*      Send X message with a sequence number held in "appID"      */
specifier|private
name|Long
name|sendMessages
parameter_list|(
name|int
name|messageCount
parameter_list|)
throws|throws
name|Exception
block|{
name|long
name|numberOfMessageSent
init|=
literal|0
decl_stmt|;
name|ConnectionFactory
name|connectionFactory
init|=
operator|new
name|ActiveMQConnectionFactory
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|,
name|TRANSPORT_URL
argument_list|)
decl_stmt|;
name|Connection
name|connection
init|=
operator|(
name|ActiveMQConnection
operator|)
name|connectionFactory
operator|.
name|createConnection
argument_list|()
decl_stmt|;
name|connection
operator|.
name|start
argument_list|()
expr_stmt|;
specifier|final
name|String
name|blob
init|=
operator|new
name|String
argument_list|(
operator|new
name|byte
index|[
literal|4
operator|*
literal|1024
index|]
argument_list|)
decl_stmt|;
try|try
block|{
name|Session
name|producerSession
init|=
name|connection
operator|.
name|createSession
argument_list|(
literal|true
argument_list|,
name|Session
operator|.
name|SESSION_TRANSACTED
argument_list|)
decl_stmt|;
name|MessageProducer
name|jmsProducer
init|=
name|producerSession
operator|.
name|createProducer
argument_list|(
name|producerSession
operator|.
name|createTopic
argument_list|(
name|DESTINATION
argument_list|)
argument_list|)
decl_stmt|;
name|Message
name|sendMessage
init|=
name|producerSession
operator|.
name|createTextMessage
argument_list|(
name|blob
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|messageCount
condition|;
name|i
operator|++
control|)
block|{
name|jmsProducer
operator|.
name|send
argument_list|(
name|sendMessage
argument_list|)
expr_stmt|;
name|producerSession
operator|.
name|commit
argument_list|()
expr_stmt|;
name|numberOfMessageSent
operator|++
expr_stmt|;
block|}
name|LOG
operator|.
name|info
argument_list|(
literal|" Finished after producing : "
operator|+
name|numberOfMessageSent
argument_list|)
expr_stmt|;
return|return
name|numberOfMessageSent
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Exception received producing "
argument_list|,
name|ex
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"finishing after exception :"
operator|+
name|numberOfMessageSent
argument_list|)
expr_stmt|;
return|return
name|numberOfMessageSent
return|;
block|}
finally|finally
block|{
if|if
condition|(
name|connection
operator|!=
literal|null
condition|)
block|{
name|connection
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|BrokerViewMBean
name|getBrokerView
parameter_list|(
name|BrokerService
name|broker
parameter_list|)
throws|throws
name|Exception
block|{
name|BrokerViewMBean
name|brokerViewMBean
init|=
name|broker
operator|.
name|getAdminView
argument_list|()
decl_stmt|;
return|return
name|brokerViewMBean
return|;
block|}
block|}
end_class

end_unit

