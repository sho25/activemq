begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|amqp
operator|.
name|client
operator|.
name|transport
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Holds the defined SSL options for connections that operate over a secure  * transport.  Options are read from the environment and can be overridden by  * specifying them on the connection URI.  */
end_comment

begin_class
specifier|public
class|class
name|NettyTransportSslOptions
extends|extends
name|NettyTransportOptions
block|{
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT_STORE_TYPE
init|=
literal|"jks"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT_CONTEXT_PROTOCOL
init|=
literal|"TLS"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|boolean
name|DEFAULT_TRUST_ALL
init|=
literal|false
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|boolean
name|DEFAULT_VERIFY_HOST
init|=
literal|true
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|DEFAULT_DISABLED_PROTOCOLS
init|=
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"SSLv2Hello"
block|,
literal|"SSLv3"
block|}
argument_list|)
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_SSL_PORT
init|=
literal|5671
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|NettyTransportSslOptions
name|INSTANCE
init|=
operator|new
name|NettyTransportSslOptions
argument_list|()
decl_stmt|;
specifier|private
name|String
name|keyStoreLocation
decl_stmt|;
specifier|private
name|String
name|keyStorePassword
decl_stmt|;
specifier|private
name|String
name|trustStoreLocation
decl_stmt|;
specifier|private
name|String
name|trustStorePassword
decl_stmt|;
specifier|private
name|String
name|storeType
init|=
name|DEFAULT_STORE_TYPE
decl_stmt|;
specifier|private
name|String
index|[]
name|enabledCipherSuites
decl_stmt|;
specifier|private
name|String
index|[]
name|disabledCipherSuites
decl_stmt|;
specifier|private
name|String
index|[]
name|enabledProtocols
decl_stmt|;
specifier|private
name|String
index|[]
name|disabledProtocols
init|=
name|DEFAULT_DISABLED_PROTOCOLS
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
specifier|private
name|String
name|contextProtocol
init|=
name|DEFAULT_CONTEXT_PROTOCOL
decl_stmt|;
specifier|private
name|boolean
name|trustAll
init|=
name|DEFAULT_TRUST_ALL
decl_stmt|;
specifier|private
name|boolean
name|verifyHost
init|=
name|DEFAULT_VERIFY_HOST
decl_stmt|;
specifier|private
name|String
name|keyAlias
decl_stmt|;
specifier|private
name|int
name|defaultSslPort
init|=
name|DEFAULT_SSL_PORT
decl_stmt|;
static|static
block|{
name|INSTANCE
operator|.
name|setKeyStoreLocation
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"javax.net.ssl.keyStore"
argument_list|)
argument_list|)
expr_stmt|;
name|INSTANCE
operator|.
name|setKeyStorePassword
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"javax.net.ssl.keyStorePassword"
argument_list|)
argument_list|)
expr_stmt|;
name|INSTANCE
operator|.
name|setTrustStoreLocation
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"javax.net.ssl.trustStore"
argument_list|)
argument_list|)
expr_stmt|;
name|INSTANCE
operator|.
name|setTrustStorePassword
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"javax.net.ssl.keyStorePassword"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * @return the keyStoreLocation currently configured.      */
specifier|public
name|String
name|getKeyStoreLocation
parameter_list|()
block|{
return|return
name|keyStoreLocation
return|;
block|}
comment|/**      * Sets the location on disk of the key store to use.      *      * @param keyStoreLocation      *        the keyStoreLocation to use to create the key manager.      */
specifier|public
name|void
name|setKeyStoreLocation
parameter_list|(
name|String
name|keyStoreLocation
parameter_list|)
block|{
name|this
operator|.
name|keyStoreLocation
operator|=
name|keyStoreLocation
expr_stmt|;
block|}
comment|/**      * @return the keyStorePassword      */
specifier|public
name|String
name|getKeyStorePassword
parameter_list|()
block|{
return|return
name|keyStorePassword
return|;
block|}
comment|/**      * @param keyStorePassword the keyStorePassword to set      */
specifier|public
name|void
name|setKeyStorePassword
parameter_list|(
name|String
name|keyStorePassword
parameter_list|)
block|{
name|this
operator|.
name|keyStorePassword
operator|=
name|keyStorePassword
expr_stmt|;
block|}
comment|/**      * @return the trustStoreLocation      */
specifier|public
name|String
name|getTrustStoreLocation
parameter_list|()
block|{
return|return
name|trustStoreLocation
return|;
block|}
comment|/**      * @param trustStoreLocation the trustStoreLocation to set      */
specifier|public
name|void
name|setTrustStoreLocation
parameter_list|(
name|String
name|trustStoreLocation
parameter_list|)
block|{
name|this
operator|.
name|trustStoreLocation
operator|=
name|trustStoreLocation
expr_stmt|;
block|}
comment|/**      * @return the trustStorePassword      */
specifier|public
name|String
name|getTrustStorePassword
parameter_list|()
block|{
return|return
name|trustStorePassword
return|;
block|}
comment|/**      * @param trustStorePassword the trustStorePassword to set      */
specifier|public
name|void
name|setTrustStorePassword
parameter_list|(
name|String
name|trustStorePassword
parameter_list|)
block|{
name|this
operator|.
name|trustStorePassword
operator|=
name|trustStorePassword
expr_stmt|;
block|}
comment|/**      * @return the storeType      */
specifier|public
name|String
name|getStoreType
parameter_list|()
block|{
return|return
name|storeType
return|;
block|}
comment|/**      * @param storeType      *        the format that the store files are encoded in.      */
specifier|public
name|void
name|setStoreType
parameter_list|(
name|String
name|storeType
parameter_list|)
block|{
name|this
operator|.
name|storeType
operator|=
name|storeType
expr_stmt|;
block|}
comment|/**      * @return the enabledCipherSuites      */
specifier|public
name|String
index|[]
name|getEnabledCipherSuites
parameter_list|()
block|{
return|return
name|enabledCipherSuites
return|;
block|}
comment|/**      * @param enabledCipherSuites the enabledCipherSuites to set      */
specifier|public
name|void
name|setEnabledCipherSuites
parameter_list|(
name|String
index|[]
name|enabledCipherSuites
parameter_list|)
block|{
name|this
operator|.
name|enabledCipherSuites
operator|=
name|enabledCipherSuites
expr_stmt|;
block|}
comment|/**      * @return the disabledCipherSuites      */
specifier|public
name|String
index|[]
name|getDisabledCipherSuites
parameter_list|()
block|{
return|return
name|disabledCipherSuites
return|;
block|}
comment|/**      * @param disabledCipherSuites the disabledCipherSuites to set      */
specifier|public
name|void
name|setDisabledCipherSuites
parameter_list|(
name|String
index|[]
name|disabledCipherSuites
parameter_list|)
block|{
name|this
operator|.
name|disabledCipherSuites
operator|=
name|disabledCipherSuites
expr_stmt|;
block|}
comment|/**      * @return the enabledProtocols or null if the defaults should be used      */
specifier|public
name|String
index|[]
name|getEnabledProtocols
parameter_list|()
block|{
return|return
name|enabledProtocols
return|;
block|}
comment|/**      * The protocols to be set as enabled.      *      * @param enabledProtocols the enabled protocols to set, or null if the defaults should be used.      */
specifier|public
name|void
name|setEnabledProtocols
parameter_list|(
name|String
index|[]
name|enabledProtocols
parameter_list|)
block|{
name|this
operator|.
name|enabledProtocols
operator|=
name|enabledProtocols
expr_stmt|;
block|}
comment|/**      *      * @return the protocols to disable or null if none should be      */
specifier|public
name|String
index|[]
name|getDisabledProtocols
parameter_list|()
block|{
return|return
name|disabledProtocols
return|;
block|}
comment|/**      * The protocols to be disable.      *      * @param disabledProtocols the protocols to disable, or null if none should be.      */
specifier|public
name|void
name|setDisabledProtocols
parameter_list|(
name|String
index|[]
name|disabledProtocols
parameter_list|)
block|{
name|this
operator|.
name|disabledProtocols
operator|=
name|disabledProtocols
expr_stmt|;
block|}
comment|/**     * @return the context protocol to use     */
specifier|public
name|String
name|getContextProtocol
parameter_list|()
block|{
return|return
name|contextProtocol
return|;
block|}
comment|/**      * The protocol value to use when creating an SSLContext via      * SSLContext.getInstance(protocol).      *      * @param contextProtocol the context protocol to use.      */
specifier|public
name|void
name|setContextProtocol
parameter_list|(
name|String
name|contextProtocol
parameter_list|)
block|{
name|this
operator|.
name|contextProtocol
operator|=
name|contextProtocol
expr_stmt|;
block|}
comment|/**      * @return the trustAll      */
specifier|public
name|boolean
name|isTrustAll
parameter_list|()
block|{
return|return
name|trustAll
return|;
block|}
comment|/**      * @param trustAll the trustAll to set      */
specifier|public
name|void
name|setTrustAll
parameter_list|(
name|boolean
name|trustAll
parameter_list|)
block|{
name|this
operator|.
name|trustAll
operator|=
name|trustAll
expr_stmt|;
block|}
comment|/**      * @return the verifyHost      */
specifier|public
name|boolean
name|isVerifyHost
parameter_list|()
block|{
return|return
name|verifyHost
return|;
block|}
comment|/**      * @param verifyHost the verifyHost to set      */
specifier|public
name|void
name|setVerifyHost
parameter_list|(
name|boolean
name|verifyHost
parameter_list|)
block|{
name|this
operator|.
name|verifyHost
operator|=
name|verifyHost
expr_stmt|;
block|}
comment|/**      * @return the key alias      */
specifier|public
name|String
name|getKeyAlias
parameter_list|()
block|{
return|return
name|keyAlias
return|;
block|}
comment|/**      * @param keyAlias the key alias to use      */
specifier|public
name|void
name|setKeyAlias
parameter_list|(
name|String
name|keyAlias
parameter_list|)
block|{
name|this
operator|.
name|keyAlias
operator|=
name|keyAlias
expr_stmt|;
block|}
specifier|public
name|int
name|getDefaultSslPort
parameter_list|()
block|{
return|return
name|defaultSslPort
return|;
block|}
specifier|public
name|void
name|setDefaultSslPort
parameter_list|(
name|int
name|defaultSslPort
parameter_list|)
block|{
name|this
operator|.
name|defaultSslPort
operator|=
name|defaultSslPort
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|NettyTransportSslOptions
name|clone
parameter_list|()
block|{
return|return
name|copyOptions
argument_list|(
operator|new
name|NettyTransportSslOptions
argument_list|()
argument_list|)
return|;
block|}
specifier|protected
name|NettyTransportSslOptions
name|copyOptions
parameter_list|(
name|NettyTransportSslOptions
name|copy
parameter_list|)
block|{
name|super
operator|.
name|copyOptions
argument_list|(
name|copy
argument_list|)
expr_stmt|;
name|copy
operator|.
name|setKeyStoreLocation
argument_list|(
name|getKeyStoreLocation
argument_list|()
argument_list|)
expr_stmt|;
name|copy
operator|.
name|setKeyStorePassword
argument_list|(
name|getKeyStorePassword
argument_list|()
argument_list|)
expr_stmt|;
name|copy
operator|.
name|setTrustStoreLocation
argument_list|(
name|getTrustStoreLocation
argument_list|()
argument_list|)
expr_stmt|;
name|copy
operator|.
name|setTrustStorePassword
argument_list|(
name|getTrustStorePassword
argument_list|()
argument_list|)
expr_stmt|;
name|copy
operator|.
name|setStoreType
argument_list|(
name|getStoreType
argument_list|()
argument_list|)
expr_stmt|;
name|copy
operator|.
name|setEnabledCipherSuites
argument_list|(
name|getEnabledCipherSuites
argument_list|()
argument_list|)
expr_stmt|;
name|copy
operator|.
name|setDisabledCipherSuites
argument_list|(
name|getDisabledCipherSuites
argument_list|()
argument_list|)
expr_stmt|;
name|copy
operator|.
name|setEnabledProtocols
argument_list|(
name|getEnabledProtocols
argument_list|()
argument_list|)
expr_stmt|;
name|copy
operator|.
name|setDisabledProtocols
argument_list|(
name|getDisabledProtocols
argument_list|()
argument_list|)
expr_stmt|;
name|copy
operator|.
name|setTrustAll
argument_list|(
name|isTrustAll
argument_list|()
argument_list|)
expr_stmt|;
name|copy
operator|.
name|setVerifyHost
argument_list|(
name|isVerifyHost
argument_list|()
argument_list|)
expr_stmt|;
name|copy
operator|.
name|setKeyAlias
argument_list|(
name|getKeyAlias
argument_list|()
argument_list|)
expr_stmt|;
name|copy
operator|.
name|setContextProtocol
argument_list|(
name|getContextProtocol
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|copy
return|;
block|}
block|}
end_class

end_unit

