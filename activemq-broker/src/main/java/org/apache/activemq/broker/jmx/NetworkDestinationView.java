begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|jmx
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|management
operator|.
name|TimeStatisticImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
specifier|public
class|class
name|NetworkDestinationView
implements|implements
name|NetworkDestinationViewMBean
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|NetworkDestinationViewMBean
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|TimeStatisticImpl
name|timeStatistic
init|=
operator|new
name|TimeStatisticImpl
argument_list|(
literal|"networkEnqueue"
argument_list|,
literal|"network messages enqueued"
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|String
name|name
decl_stmt|;
specifier|private
specifier|final
name|NetworkBridgeView
name|networkBridgeView
decl_stmt|;
specifier|private
name|long
name|lastTime
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|NetworkDestinationView
parameter_list|(
name|NetworkBridgeView
name|networkBridgeView
parameter_list|,
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|networkBridgeView
operator|=
name|networkBridgeView
expr_stmt|;
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
comment|/**      * Returns the name of this destination      */
annotation|@
name|Override
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
comment|/**      * Resets the managment counters.      */
annotation|@
name|Override
specifier|public
name|void
name|resetStats
parameter_list|()
block|{
name|timeStatistic
operator|.
name|reset
argument_list|()
expr_stmt|;
name|lastTime
operator|=
operator|-
literal|1
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getCount
parameter_list|()
block|{
return|return
name|timeStatistic
operator|.
name|getCount
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|getRate
parameter_list|()
block|{
return|return
name|timeStatistic
operator|.
name|getAveragePerSecond
argument_list|()
return|;
block|}
specifier|public
name|void
name|messageSent
parameter_list|()
block|{
name|long
name|currentTime
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|long
name|time
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|lastTime
operator|<
literal|0
condition|)
block|{
name|time
operator|=
literal|0
expr_stmt|;
name|lastTime
operator|=
name|currentTime
expr_stmt|;
block|}
else|else
block|{
name|time
operator|=
name|currentTime
operator|-
name|lastTime
expr_stmt|;
block|}
name|timeStatistic
operator|.
name|addTime
argument_list|(
name|time
argument_list|)
expr_stmt|;
name|lastTime
operator|=
name|currentTime
expr_stmt|;
block|}
specifier|public
name|long
name|getLastAccessTime
parameter_list|()
block|{
return|return
name|timeStatistic
operator|.
name|getLastSampleTime
argument_list|()
return|;
block|}
specifier|public
name|void
name|close
parameter_list|()
block|{
name|networkBridgeView
operator|.
name|removeNetworkDestinationView
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

