begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|shiro
operator|.
name|authc
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|ConnectionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|Connector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|ConnectionStatistics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|Command
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ConnectionControl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ConnectionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|shiro
operator|.
name|subject
operator|.
name|SubjectAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|shiro
operator|.
name|subject
operator|.
name|SubjectConnectionReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|shiro
operator|.
name|env
operator|.
name|DefaultEnvironment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|shiro
operator|.
name|subject
operator|.
name|PrincipalCollection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|shiro
operator|.
name|subject
operator|.
name|SimplePrincipalCollection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|shiro
operator|.
name|subject
operator|.
name|Subject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * @since 5.10.0  */
end_comment

begin_class
specifier|public
class|class
name|DefaultAuthenticationPolicyTest
block|{
specifier|private
name|DefaultAuthenticationPolicy
name|policy
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|this
operator|.
name|policy
operator|=
operator|new
name|DefaultAuthenticationPolicy
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testVmConnectionAuthenticationRequired
parameter_list|()
block|{
name|boolean
name|required
init|=
literal|true
decl_stmt|;
name|policy
operator|.
name|setVmConnectionAuthenticationRequired
argument_list|(
name|required
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|required
argument_list|,
name|policy
operator|.
name|isVmConnectionAuthenticationRequired
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSystemAccountUsername
parameter_list|()
block|{
name|String
name|name
init|=
literal|"foo"
decl_stmt|;
name|policy
operator|.
name|setSystemAccountUsername
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|name
argument_list|,
name|policy
operator|.
name|getSystemAccountUsername
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSystemAccountRealmName
parameter_list|()
block|{
name|String
name|name
init|=
literal|"fooRealm"
decl_stmt|;
name|policy
operator|.
name|setSystemAccountRealmName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|name
argument_list|,
name|policy
operator|.
name|getSystemAccountRealmName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAnonymousAllowed
parameter_list|()
block|{
name|boolean
name|allowed
init|=
literal|true
decl_stmt|;
name|policy
operator|.
name|setAnonymousAccessAllowed
argument_list|(
name|allowed
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|allowed
argument_list|,
name|policy
operator|.
name|isAnonymousAccessAllowed
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAnonymousAccountUsername
parameter_list|()
block|{
name|String
name|name
init|=
literal|"blah"
decl_stmt|;
name|policy
operator|.
name|setAnonymousAccountUsername
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|name
argument_list|,
name|policy
operator|.
name|getAnonymousAccountUsername
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAnonymousAccountRealmName
parameter_list|()
block|{
name|String
name|name
init|=
literal|"blahRealm"
decl_stmt|;
name|policy
operator|.
name|setAnonymousAccountRealmName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|name
argument_list|,
name|policy
operator|.
name|getAnonymousAccountRealmName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIsAnonymousAccount
parameter_list|()
block|{
name|Subject
name|subject
init|=
operator|new
name|SubjectAdapter
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|PrincipalCollection
name|getPrincipals
parameter_list|()
block|{
return|return
operator|new
name|SimplePrincipalCollection
argument_list|(
literal|"anonymous"
argument_list|,
literal|"iniRealm"
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|assertTrue
argument_list|(
name|policy
operator|.
name|isAnonymousAccount
argument_list|(
name|subject
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIsAnonymousAccountWithNullPrincipals
parameter_list|()
block|{
name|assertFalse
argument_list|(
name|policy
operator|.
name|isAnonymousAccount
argument_list|(
operator|new
name|SubjectAdapter
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIsSystemAccountWithNullPrincipals
parameter_list|()
block|{
name|assertFalse
argument_list|(
name|policy
operator|.
name|isSystemAccount
argument_list|(
operator|new
name|SubjectAdapter
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIsAuthenticationRequiredWhenAlreadyRequired
parameter_list|()
block|{
name|Subject
name|subject
init|=
operator|new
name|SubjectAdapter
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|isAuthenticated
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
block|}
decl_stmt|;
name|SubjectConnectionReference
name|sc
init|=
operator|new
name|SubjectConnectionReference
argument_list|(
operator|new
name|ConnectionContext
argument_list|()
argument_list|,
operator|new
name|ConnectionInfo
argument_list|()
argument_list|,
operator|new
name|DefaultEnvironment
argument_list|()
argument_list|,
name|subject
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|policy
operator|.
name|isAuthenticationRequired
argument_list|(
name|sc
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIsAuthenticationRequiredWhenAnonymousAllowedAnonymousSubject
parameter_list|()
block|{
name|policy
operator|.
name|setAnonymousAccessAllowed
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Subject
name|subject
init|=
operator|new
name|SubjectAdapter
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|PrincipalCollection
name|getPrincipals
parameter_list|()
block|{
return|return
operator|new
name|SimplePrincipalCollection
argument_list|(
literal|"anonymous"
argument_list|,
literal|"iniRealm"
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|SubjectConnectionReference
name|sc
init|=
operator|new
name|SubjectConnectionReference
argument_list|(
operator|new
name|ConnectionContext
argument_list|()
argument_list|,
operator|new
name|ConnectionInfo
argument_list|()
argument_list|,
operator|new
name|DefaultEnvironment
argument_list|()
argument_list|,
name|subject
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|policy
operator|.
name|isAuthenticationRequired
argument_list|(
name|sc
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIsAuthenticationRequiredWhenAnonymousAllowedAndNotAnonymousSubject
parameter_list|()
block|{
name|policy
operator|.
name|setAnonymousAccessAllowed
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Subject
name|subject
init|=
operator|new
name|SubjectAdapter
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|PrincipalCollection
name|getPrincipals
parameter_list|()
block|{
return|return
operator|new
name|SimplePrincipalCollection
argument_list|(
literal|"system"
argument_list|,
literal|"iniRealm"
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|SubjectConnectionReference
name|sc
init|=
operator|new
name|SubjectConnectionReference
argument_list|(
operator|new
name|ConnectionContext
argument_list|()
argument_list|,
operator|new
name|ConnectionInfo
argument_list|()
argument_list|,
operator|new
name|DefaultEnvironment
argument_list|()
argument_list|,
name|subject
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|policy
operator|.
name|isAuthenticationRequired
argument_list|(
name|sc
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIsAuthenticationRequiredWhenSystemConnectionAndSystemSubject
parameter_list|()
block|{
name|Subject
name|subject
init|=
operator|new
name|SubjectAdapter
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|PrincipalCollection
name|getPrincipals
parameter_list|()
block|{
return|return
operator|new
name|SimplePrincipalCollection
argument_list|(
literal|"system"
argument_list|,
literal|"iniRealm"
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|SubjectConnectionReference
name|sc
init|=
operator|new
name|SubjectConnectionReference
argument_list|(
operator|new
name|ConnectionContext
argument_list|()
argument_list|,
operator|new
name|ConnectionInfo
argument_list|()
argument_list|,
operator|new
name|DefaultEnvironment
argument_list|()
argument_list|,
name|subject
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|policy
operator|.
name|isAuthenticationRequired
argument_list|(
name|sc
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIsAuthenticationRequiredWhenSystemConnectionRequiresAuthentication
parameter_list|()
block|{
name|policy
operator|.
name|setVmConnectionAuthenticationRequired
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Subject
name|subject
init|=
operator|new
name|SubjectAdapter
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|PrincipalCollection
name|getPrincipals
parameter_list|()
block|{
return|return
operator|new
name|SimplePrincipalCollection
argument_list|(
literal|"system"
argument_list|,
literal|"iniRealm"
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|SubjectConnectionReference
name|sc
init|=
operator|new
name|SubjectConnectionReference
argument_list|(
operator|new
name|ConnectionContext
argument_list|()
argument_list|,
operator|new
name|ConnectionInfo
argument_list|()
argument_list|,
operator|new
name|DefaultEnvironment
argument_list|()
argument_list|,
name|subject
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|policy
operator|.
name|isAuthenticationRequired
argument_list|(
name|sc
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIsAuthenticationRequiredWhenSystemConnectionDoesNotRequireAuthenticationAndNotSystemAccount
parameter_list|()
block|{
name|Subject
name|subject
init|=
operator|new
name|SubjectAdapter
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|PrincipalCollection
name|getPrincipals
parameter_list|()
block|{
return|return
operator|new
name|SimplePrincipalCollection
argument_list|(
literal|"foo"
argument_list|,
literal|"iniRealm"
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|SubjectConnectionReference
name|sc
init|=
operator|new
name|SubjectConnectionReference
argument_list|(
operator|new
name|ConnectionContext
argument_list|()
argument_list|,
operator|new
name|ConnectionInfo
argument_list|()
argument_list|,
operator|new
name|DefaultEnvironment
argument_list|()
argument_list|,
name|subject
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|policy
operator|.
name|isAuthenticationRequired
argument_list|(
name|sc
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIsAssumeIdentity
parameter_list|()
block|{
name|policy
operator|.
name|setAnonymousAccessAllowed
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|policy
operator|.
name|isAssumeIdentity
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIsAssumeIdentityWithSystemConnection
parameter_list|()
block|{
name|ConnectionContext
name|ctx
init|=
operator|new
name|ConnectionContext
argument_list|()
decl_stmt|;
name|Connection
name|connection
init|=
operator|new
name|Connection
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Connector
name|getConnector
parameter_list|()
block|{
return|return
literal|null
return|;
comment|//To change body of implemented methods use File | Settings | File Templates.
block|}
annotation|@
name|Override
specifier|public
name|void
name|dispatchSync
parameter_list|(
name|Command
name|message
parameter_list|)
block|{
comment|//To change body of implemented methods use File | Settings | File Templates.
block|}
annotation|@
name|Override
specifier|public
name|void
name|dispatchAsync
parameter_list|(
name|Command
name|command
parameter_list|)
block|{
comment|//To change body of implemented methods use File | Settings | File Templates.
block|}
annotation|@
name|Override
specifier|public
name|Response
name|service
parameter_list|(
name|Command
name|command
parameter_list|)
block|{
return|return
literal|null
return|;
comment|//To change body of implemented methods use File | Settings | File Templates.
block|}
annotation|@
name|Override
specifier|public
name|void
name|serviceException
parameter_list|(
name|Throwable
name|error
parameter_list|)
block|{
comment|//To change body of implemented methods use File | Settings | File Templates.
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isSlow
parameter_list|()
block|{
return|return
literal|false
return|;
comment|//To change body of implemented methods use File | Settings | File Templates.
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isBlocked
parameter_list|()
block|{
return|return
literal|false
return|;
comment|//To change body of implemented methods use File | Settings | File Templates.
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isConnected
parameter_list|()
block|{
return|return
literal|false
return|;
comment|//To change body of implemented methods use File | Settings | File Templates.
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isActive
parameter_list|()
block|{
return|return
literal|false
return|;
comment|//To change body of implemented methods use File | Settings | File Templates.
block|}
annotation|@
name|Override
specifier|public
name|int
name|getDispatchQueueSize
parameter_list|()
block|{
return|return
literal|0
return|;
comment|//To change body of implemented methods use File | Settings | File Templates.
block|}
annotation|@
name|Override
specifier|public
name|ConnectionStatistics
name|getStatistics
parameter_list|()
block|{
return|return
literal|null
return|;
comment|//To change body of implemented methods use File | Settings | File Templates.
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isManageable
parameter_list|()
block|{
return|return
literal|false
return|;
comment|//To change body of implemented methods use File | Settings | File Templates.
block|}
annotation|@
name|Override
specifier|public
name|String
name|getRemoteAddress
parameter_list|()
block|{
return|return
literal|"vm://localhost"
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|serviceExceptionAsync
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|//To change body of implemented methods use File | Settings | File Templates.
block|}
annotation|@
name|Override
specifier|public
name|String
name|getConnectionId
parameter_list|()
block|{
return|return
literal|null
return|;
comment|//To change body of implemented methods use File | Settings | File Templates.
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isNetworkConnection
parameter_list|()
block|{
return|return
literal|false
return|;
comment|//To change body of implemented methods use File | Settings | File Templates.
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isFaultTolerantConnection
parameter_list|()
block|{
return|return
literal|false
return|;
comment|//To change body of implemented methods use File | Settings | File Templates.
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateClient
parameter_list|(
name|ConnectionControl
name|control
parameter_list|)
block|{
comment|//To change body of implemented methods use File | Settings | File Templates.
block|}
annotation|@
name|Override
specifier|public
name|void
name|start
parameter_list|()
throws|throws
name|Exception
block|{
comment|//To change body of implemented methods use File | Settings | File Templates.
block|}
annotation|@
name|Override
specifier|public
name|void
name|stop
parameter_list|()
throws|throws
name|Exception
block|{
comment|//To change body of implemented methods use File | Settings | File Templates.
block|}
annotation|@
name|Override
specifier|public
name|int
name|getActiveTransactionCount
parameter_list|()
block|{
return|return
literal|0
return|;
comment|//To change body of implemented methods use File | Settings | File Templates.
block|}
annotation|@
name|Override
specifier|public
name|Long
name|getOldestActiveTransactionDuration
parameter_list|()
block|{
return|return
literal|null
return|;
comment|//To change body of implemented methods use File | Settings | File Templates.
block|}
block|}
decl_stmt|;
name|ctx
operator|.
name|setConnection
argument_list|(
name|connection
argument_list|)
expr_stmt|;
name|SubjectConnectionReference
name|sc
init|=
operator|new
name|SubjectConnectionReference
argument_list|(
name|ctx
argument_list|,
operator|new
name|ConnectionInfo
argument_list|()
argument_list|,
operator|new
name|DefaultEnvironment
argument_list|()
argument_list|,
operator|new
name|SubjectAdapter
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|policy
operator|.
name|isAssumeIdentity
argument_list|(
name|sc
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

