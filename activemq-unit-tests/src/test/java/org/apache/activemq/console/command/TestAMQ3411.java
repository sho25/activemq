begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|console
operator|.
name|command
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|console
operator|.
name|CommandContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|console
operator|.
name|formatter
operator|.
name|CommandShellOutputFormatter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|support
operator|.
name|AbstractApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|support
operator|.
name|ClassPathXmlApplicationContext
import|;
end_import

begin_class
specifier|public
class|class
name|TestAMQ3411
extends|extends
name|TestCase
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|TestPurgeCommand
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Collection
argument_list|<
name|String
argument_list|>
name|DEFAULT_OPTIONS
init|=
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"--amqurl"
block|,
literal|"tcp://localhost:61616"
block|, }
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Collection
argument_list|<
name|String
argument_list|>
name|DEFAULT_TOKENS
init|=
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"FOO.QUEUE"
block|}
argument_list|)
decl_stmt|;
specifier|protected
name|AbstractApplicationContext
name|context
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|origPassword
init|=
literal|"ABCDEFG"
decl_stmt|;
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|context
operator|=
name|createApplicationContext
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|AbstractApplicationContext
name|createApplicationContext
parameter_list|()
block|{
return|return
operator|new
name|ClassPathXmlApplicationContext
argument_list|(
literal|"org/apache/activemq/console/command/activemq.xml"
argument_list|)
return|;
block|}
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|BrokerService
name|broker
init|=
operator|(
name|BrokerService
operator|)
name|context
operator|.
name|getBean
argument_list|(
literal|"localbroker"
argument_list|)
decl_stmt|;
name|broker
operator|.
name|stop
argument_list|()
expr_stmt|;
name|broker
operator|=
operator|(
name|BrokerService
operator|)
name|context
operator|.
name|getBean
argument_list|(
literal|"default"
argument_list|)
expr_stmt|;
name|broker
operator|.
name|stop
argument_list|()
expr_stmt|;
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testNoFactorySet
parameter_list|()
throws|throws
name|Exception
block|{
name|AmqBrowseCommand
name|command
init|=
operator|new
name|AmqBrowseCommand
argument_list|()
decl_stmt|;
name|CommandContext
name|context
init|=
operator|new
name|CommandContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|setFormatter
argument_list|(
operator|new
name|CommandShellOutputFormatter
argument_list|(
name|System
operator|.
name|out
argument_list|)
argument_list|)
expr_stmt|;
name|command
operator|.
name|setCommandContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|tokens
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|tokens
operator|.
name|addAll
argument_list|(
name|DEFAULT_OPTIONS
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|addAll
argument_list|(
name|DEFAULT_TOKENS
argument_list|)
expr_stmt|;
name|command
operator|.
name|execute
argument_list|(
name|tokens
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|command
operator|.
name|getPasswordFactory
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|command
operator|.
name|getPasswordFactory
argument_list|()
operator|instanceof
name|DefaultPasswordFactory
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|command
operator|.
name|getPassword
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testUsernamePasswordSet
parameter_list|()
throws|throws
name|Exception
block|{
name|AmqBrowseCommand
name|command
init|=
operator|new
name|AmqBrowseCommand
argument_list|()
decl_stmt|;
name|CommandContext
name|context
init|=
operator|new
name|CommandContext
argument_list|()
decl_stmt|;
name|String
name|username
init|=
literal|"user"
decl_stmt|;
name|String
name|password
init|=
literal|"password"
decl_stmt|;
name|context
operator|.
name|setFormatter
argument_list|(
operator|new
name|CommandShellOutputFormatter
argument_list|(
name|System
operator|.
name|out
argument_list|)
argument_list|)
expr_stmt|;
name|command
operator|.
name|setCommandContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|tokens
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|tokens
operator|.
name|addAll
argument_list|(
name|DEFAULT_OPTIONS
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
literal|"--password"
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
name|password
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
literal|"--user"
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
name|username
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|addAll
argument_list|(
name|DEFAULT_TOKENS
argument_list|)
expr_stmt|;
name|command
operator|.
name|execute
argument_list|(
name|tokens
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|command
operator|.
name|getPasswordFactory
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|command
operator|.
name|getPasswordFactory
argument_list|()
operator|instanceof
name|DefaultPasswordFactory
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|password
argument_list|,
name|command
operator|.
name|getPassword
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|username
argument_list|,
name|command
operator|.
name|getUsername
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testFactorySet
parameter_list|()
throws|throws
name|Exception
block|{
name|AmqBrowseCommand
name|command
init|=
operator|new
name|AmqBrowseCommand
argument_list|()
decl_stmt|;
name|CommandContext
name|context
init|=
operator|new
name|CommandContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|setFormatter
argument_list|(
operator|new
name|CommandShellOutputFormatter
argument_list|(
name|System
operator|.
name|out
argument_list|)
argument_list|)
expr_stmt|;
name|command
operator|.
name|setCommandContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|tokens
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|tokens
operator|.
name|addAll
argument_list|(
name|DEFAULT_OPTIONS
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
literal|"--passwordFactory"
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
name|LowercasingPasswordFactory
operator|.
name|class
operator|.
name|getCanonicalName
argument_list|()
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
literal|"--password"
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
name|origPassword
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|addAll
argument_list|(
name|DEFAULT_TOKENS
argument_list|)
expr_stmt|;
name|command
operator|.
name|execute
argument_list|(
name|tokens
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|command
operator|.
name|getPasswordFactory
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|command
operator|.
name|getPasswordFactory
argument_list|()
operator|instanceof
name|LowercasingPasswordFactory
argument_list|)
expr_stmt|;
comment|// validate that the factory is indeed being used for the password.
name|assertEquals
argument_list|(
name|origPassword
operator|.
name|toLowerCase
argument_list|()
argument_list|,
name|command
operator|.
name|getPassword
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testFactorySetWrong1
parameter_list|()
throws|throws
name|Exception
block|{
name|AmqBrowseCommand
name|command
init|=
operator|new
name|AmqBrowseCommand
argument_list|()
decl_stmt|;
name|CommandContext
name|context
init|=
operator|new
name|CommandContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|setFormatter
argument_list|(
operator|new
name|CommandShellOutputFormatter
argument_list|(
name|System
operator|.
name|out
argument_list|)
argument_list|)
expr_stmt|;
name|command
operator|.
name|setCommandContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|tokens
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|tokens
operator|.
name|addAll
argument_list|(
name|DEFAULT_OPTIONS
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
literal|"--passwordFactory"
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
literal|"org.apache.activemq.console.command.TestAMQ3411.DoesntExistFactory"
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
literal|"--password"
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
name|origPassword
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|addAll
argument_list|(
name|DEFAULT_TOKENS
argument_list|)
expr_stmt|;
try|try
block|{
name|command
operator|.
name|execute
argument_list|(
name|tokens
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|Throwable
name|cause
init|=
name|e
decl_stmt|;
while|while
condition|(
literal|null
operator|!=
name|cause
condition|)
block|{
if|if
condition|(
name|cause
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|ClassNotFoundException
condition|)
return|return;
name|cause
operator|=
name|cause
operator|.
name|getCause
argument_list|()
expr_stmt|;
block|}
name|assertFalse
argument_list|(
name|e
operator|.
name|toString
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
name|assertFalse
argument_list|(
literal|"No exception caught"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testFactorySetWrong2
parameter_list|()
throws|throws
name|Exception
block|{
name|AmqBrowseCommand
name|command
init|=
operator|new
name|AmqBrowseCommand
argument_list|()
decl_stmt|;
name|CommandContext
name|context
init|=
operator|new
name|CommandContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|setFormatter
argument_list|(
operator|new
name|CommandShellOutputFormatter
argument_list|(
name|System
operator|.
name|out
argument_list|)
argument_list|)
expr_stmt|;
name|command
operator|.
name|setCommandContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|tokens
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|tokens
operator|.
name|addAll
argument_list|(
name|DEFAULT_OPTIONS
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
literal|"--passwordFactory"
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
literal|"java.lang.Object"
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
literal|"--password"
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
name|origPassword
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|addAll
argument_list|(
name|DEFAULT_TOKENS
argument_list|)
expr_stmt|;
try|try
block|{
name|command
operator|.
name|execute
argument_list|(
name|tokens
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|Throwable
name|cause
init|=
name|e
decl_stmt|;
while|while
condition|(
literal|null
operator|!=
name|cause
condition|)
block|{
if|if
condition|(
name|cause
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|ClassCastException
condition|)
return|return;
name|cause
operator|=
name|cause
operator|.
name|getCause
argument_list|()
expr_stmt|;
block|}
name|assertFalse
argument_list|(
name|e
operator|.
name|toString
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
name|assertFalse
argument_list|(
literal|"No exception caught"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

