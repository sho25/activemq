begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|nio
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetSocketAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|ServerSocket
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|Socket
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|UnknownHostException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|channels
operator|.
name|ServerSocketChannel
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|channels
operator|.
name|SocketChannel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|net
operator|.
name|ServerSocketFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|net
operator|.
name|SocketFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|Transport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|tcp
operator|.
name|TcpTransport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|tcp
operator|.
name|TcpTransportFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|tcp
operator|.
name|TcpTransportServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|wireformat
operator|.
name|WireFormat
import|;
end_import

begin_class
specifier|public
class|class
name|NIOTransportFactory
extends|extends
name|TcpTransportFactory
block|{
specifier|protected
name|TcpTransportServer
name|createTcpTransportServer
parameter_list|(
name|URI
name|location
parameter_list|,
name|ServerSocketFactory
name|serverSocketFactory
parameter_list|)
throws|throws
name|IOException
throws|,
name|URISyntaxException
block|{
return|return
operator|new
name|TcpTransportServer
argument_list|(
name|this
argument_list|,
name|location
argument_list|,
name|serverSocketFactory
argument_list|)
block|{
specifier|protected
name|Transport
name|createTransport
parameter_list|(
name|Socket
name|socket
parameter_list|,
name|WireFormat
name|format
parameter_list|)
throws|throws
name|IOException
block|{
return|return
operator|new
name|NIOTransport
argument_list|(
name|format
argument_list|,
name|socket
argument_list|)
return|;
block|}
block|}
return|;
block|}
specifier|protected
name|TcpTransport
name|createTcpTransport
parameter_list|(
name|WireFormat
name|wf
parameter_list|,
name|SocketFactory
name|socketFactory
parameter_list|,
name|URI
name|location
parameter_list|,
name|URI
name|localLocation
parameter_list|)
throws|throws
name|UnknownHostException
throws|,
name|IOException
block|{
return|return
operator|new
name|NIOTransport
argument_list|(
name|wf
argument_list|,
name|socketFactory
argument_list|,
name|location
argument_list|,
name|localLocation
argument_list|)
return|;
block|}
specifier|protected
name|ServerSocketFactory
name|createServerSocketFactory
parameter_list|()
block|{
return|return
operator|new
name|ServerSocketFactory
argument_list|()
block|{
specifier|public
name|ServerSocket
name|createServerSocket
parameter_list|(
name|int
name|port
parameter_list|)
throws|throws
name|IOException
block|{
name|ServerSocketChannel
name|serverSocketChannel
init|=
name|ServerSocketChannel
operator|.
name|open
argument_list|()
decl_stmt|;
name|serverSocketChannel
operator|.
name|socket
argument_list|()
operator|.
name|bind
argument_list|(
operator|new
name|InetSocketAddress
argument_list|(
name|port
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|serverSocketChannel
operator|.
name|socket
argument_list|()
return|;
block|}
specifier|public
name|ServerSocket
name|createServerSocket
parameter_list|(
name|int
name|port
parameter_list|,
name|int
name|backlog
parameter_list|)
throws|throws
name|IOException
block|{
name|ServerSocketChannel
name|serverSocketChannel
init|=
name|ServerSocketChannel
operator|.
name|open
argument_list|()
decl_stmt|;
name|serverSocketChannel
operator|.
name|socket
argument_list|()
operator|.
name|bind
argument_list|(
operator|new
name|InetSocketAddress
argument_list|(
name|port
argument_list|)
argument_list|,
name|backlog
argument_list|)
expr_stmt|;
return|return
name|serverSocketChannel
operator|.
name|socket
argument_list|()
return|;
block|}
specifier|public
name|ServerSocket
name|createServerSocket
parameter_list|(
name|int
name|port
parameter_list|,
name|int
name|backlog
parameter_list|,
name|InetAddress
name|ifAddress
parameter_list|)
throws|throws
name|IOException
block|{
name|ServerSocketChannel
name|serverSocketChannel
init|=
name|ServerSocketChannel
operator|.
name|open
argument_list|()
decl_stmt|;
name|serverSocketChannel
operator|.
name|socket
argument_list|()
operator|.
name|bind
argument_list|(
operator|new
name|InetSocketAddress
argument_list|(
name|ifAddress
argument_list|,
name|port
argument_list|)
argument_list|,
name|backlog
argument_list|)
expr_stmt|;
return|return
name|serverSocketChannel
operator|.
name|socket
argument_list|()
return|;
block|}
block|}
return|;
block|}
specifier|protected
name|SocketFactory
name|createSocketFactory
parameter_list|()
throws|throws
name|IOException
block|{
return|return
operator|new
name|SocketFactory
argument_list|()
block|{
specifier|public
name|Socket
name|createSocket
parameter_list|()
throws|throws
name|IOException
block|{
name|SocketChannel
name|channel
init|=
name|SocketChannel
operator|.
name|open
argument_list|()
decl_stmt|;
return|return
name|channel
operator|.
name|socket
argument_list|()
return|;
block|}
specifier|public
name|Socket
name|createSocket
parameter_list|(
name|String
name|host
parameter_list|,
name|int
name|port
parameter_list|)
throws|throws
name|IOException
throws|,
name|UnknownHostException
block|{
name|SocketChannel
name|channel
init|=
name|SocketChannel
operator|.
name|open
argument_list|()
decl_stmt|;
name|channel
operator|.
name|connect
argument_list|(
operator|new
name|InetSocketAddress
argument_list|(
name|host
argument_list|,
name|port
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|channel
operator|.
name|socket
argument_list|()
return|;
block|}
specifier|public
name|Socket
name|createSocket
parameter_list|(
name|InetAddress
name|address
parameter_list|,
name|int
name|port
parameter_list|)
throws|throws
name|IOException
block|{
name|SocketChannel
name|channel
init|=
name|SocketChannel
operator|.
name|open
argument_list|()
decl_stmt|;
name|channel
operator|.
name|connect
argument_list|(
operator|new
name|InetSocketAddress
argument_list|(
name|address
argument_list|,
name|port
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|channel
operator|.
name|socket
argument_list|()
return|;
block|}
specifier|public
name|Socket
name|createSocket
parameter_list|(
name|String
name|address
parameter_list|,
name|int
name|port
parameter_list|,
name|InetAddress
name|localAddresss
parameter_list|,
name|int
name|localPort
parameter_list|)
throws|throws
name|IOException
throws|,
name|UnknownHostException
block|{
name|SocketChannel
name|channel
init|=
name|SocketChannel
operator|.
name|open
argument_list|()
decl_stmt|;
name|channel
operator|.
name|socket
argument_list|()
operator|.
name|bind
argument_list|(
operator|new
name|InetSocketAddress
argument_list|(
name|localAddresss
argument_list|,
name|localPort
argument_list|)
argument_list|)
expr_stmt|;
name|channel
operator|.
name|connect
argument_list|(
operator|new
name|InetSocketAddress
argument_list|(
name|address
argument_list|,
name|port
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|channel
operator|.
name|socket
argument_list|()
return|;
block|}
specifier|public
name|Socket
name|createSocket
parameter_list|(
name|InetAddress
name|address
parameter_list|,
name|int
name|port
parameter_list|,
name|InetAddress
name|localAddresss
parameter_list|,
name|int
name|localPort
parameter_list|)
throws|throws
name|IOException
block|{
name|SocketChannel
name|channel
init|=
name|SocketChannel
operator|.
name|open
argument_list|()
decl_stmt|;
name|channel
operator|.
name|socket
argument_list|()
operator|.
name|bind
argument_list|(
operator|new
name|InetSocketAddress
argument_list|(
name|localAddresss
argument_list|,
name|localPort
argument_list|)
argument_list|)
expr_stmt|;
name|channel
operator|.
name|connect
argument_list|(
operator|new
name|InetSocketAddress
argument_list|(
name|address
argument_list|,
name|port
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|channel
operator|.
name|socket
argument_list|()
return|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

