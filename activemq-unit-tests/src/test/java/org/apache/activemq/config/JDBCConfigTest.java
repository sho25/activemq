begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|config
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|PersistenceAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|jdbc
operator|.
name|JDBCPersistenceAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|wireformat
operator|.
name|ObjectStreamWireFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|xbean
operator|.
name|BrokerFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|derby
operator|.
name|jdbc
operator|.
name|EmbeddedDataSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|core
operator|.
name|io
operator|.
name|ClassPathResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|core
operator|.
name|io
operator|.
name|FileSystemResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|core
operator|.
name|io
operator|.
name|Resource
import|;
end_import

begin_class
specifier|public
class|class
name|JDBCConfigTest
block|{
specifier|protected
specifier|static
specifier|final
name|String
name|JOURNAL_ROOT
init|=
literal|"target/test-data/"
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|DERBY_ROOT
init|=
literal|"target/test-data/"
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|CONF_ROOT
init|=
literal|"src/test/resources/org/apache/activemq/config/sample-conf/"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|JDBCConfigTest
operator|.
name|class
argument_list|)
decl_stmt|;
comment|/*      * This tests creating a jdbc persistence adapter using xbeans-spring      */
annotation|@
name|Test
specifier|public
name|void
name|testJdbcConfig
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|journalFile
init|=
operator|new
name|File
argument_list|(
name|JOURNAL_ROOT
operator|+
literal|"testJDBCConfig/journal"
argument_list|)
decl_stmt|;
name|recursiveDelete
argument_list|(
name|journalFile
argument_list|)
expr_stmt|;
name|File
name|derbyFile
init|=
operator|new
name|File
argument_list|(
name|DERBY_ROOT
operator|+
literal|"testJDBCConfig/derbydb"
argument_list|)
decl_stmt|;
comment|// Default
name|recursiveDelete
argument_list|(
name|derbyFile
argument_list|)
expr_stmt|;
name|BrokerService
name|broker
decl_stmt|;
name|broker
operator|=
name|createBroker
argument_list|(
operator|new
name|FileSystemResource
argument_list|(
name|CONF_ROOT
operator|+
literal|"jdbc-example.xml"
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|assertEquals
argument_list|(
literal|"Broker Config Error (brokerName)"
argument_list|,
literal|"brokerJdbcConfigTest"
argument_list|,
name|broker
operator|.
name|getBrokerName
argument_list|()
argument_list|)
expr_stmt|;
name|PersistenceAdapter
name|adapter
init|=
name|broker
operator|.
name|getPersistenceAdapter
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Should have created a jdbc persistence adapter"
argument_list|,
name|adapter
operator|instanceof
name|JDBCPersistenceAdapter
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"JDBC Adapter Config Error (cleanupPeriod)"
argument_list|,
literal|60000
argument_list|,
operator|(
operator|(
name|JDBCPersistenceAdapter
operator|)
name|adapter
operator|)
operator|.
name|getCleanupPeriod
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Should have created an EmbeddedDataSource"
argument_list|,
operator|(
operator|(
name|JDBCPersistenceAdapter
operator|)
name|adapter
operator|)
operator|.
name|getDataSource
argument_list|()
operator|instanceof
name|EmbeddedDataSource
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Should have created a DefaultWireFormat"
argument_list|,
operator|(
operator|(
name|JDBCPersistenceAdapter
operator|)
name|adapter
operator|)
operator|.
name|getWireFormat
argument_list|()
operator|instanceof
name|ObjectStreamWireFormat
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Success"
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|broker
operator|!=
literal|null
condition|)
block|{
name|broker
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
block|}
specifier|protected
specifier|static
name|void
name|recursiveDelete
parameter_list|(
name|File
name|file
parameter_list|)
block|{
if|if
condition|(
name|file
operator|.
name|isDirectory
argument_list|()
condition|)
block|{
name|File
index|[]
name|files
init|=
name|file
operator|.
name|listFiles
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|files
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|recursiveDelete
argument_list|(
name|files
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
block|}
name|file
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|BrokerService
name|createBroker
parameter_list|(
name|String
name|resource
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|createBroker
argument_list|(
operator|new
name|ClassPathResource
argument_list|(
name|resource
argument_list|)
argument_list|)
return|;
block|}
specifier|protected
name|BrokerService
name|createBroker
parameter_list|(
name|Resource
name|resource
parameter_list|)
throws|throws
name|Exception
block|{
name|BrokerFactoryBean
name|factory
init|=
operator|new
name|BrokerFactoryBean
argument_list|(
name|resource
argument_list|)
decl_stmt|;
name|factory
operator|.
name|afterPropertiesSet
argument_list|()
expr_stmt|;
name|BrokerService
name|broker
init|=
name|factory
operator|.
name|getBroker
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Should have a broker!"
argument_list|,
name|broker
operator|!=
literal|null
argument_list|)
expr_stmt|;
comment|// Broker is already started by default when using the XML file
comment|// broker.start();
return|return
name|broker
return|;
block|}
block|}
end_class

end_unit

