begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|atomikos
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageConsumer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|XAConnection
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|XASession
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|transaction
operator|.
name|xa
operator|.
name|XAResource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|transaction
operator|.
name|xa
operator|.
name|Xid
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|com
operator|.
name|atomikos
operator|.
name|datasource
operator|.
name|xa
operator|.
name|DefaultXidFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQXAConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ActiveMQQueue
import|;
end_import

begin_comment
comment|/**  * @version $Revision$  */
end_comment

begin_class
specifier|public
class|class
name|XATest
extends|extends
name|TestCase
block|{
specifier|public
name|void
name|testXA
parameter_list|()
throws|throws
name|Exception
block|{
name|BrokerService
name|broker
init|=
operator|new
name|BrokerService
argument_list|()
decl_stmt|;
name|broker
operator|.
name|addConnector
argument_list|(
literal|"tcp://localhost:61616"
argument_list|)
expr_stmt|;
name|broker
operator|.
name|start
argument_list|()
expr_stmt|;
name|String
name|url
init|=
literal|"tcp://localhost:61616"
decl_stmt|;
name|String
name|qName
init|=
literal|"MyQueue"
decl_stmt|;
name|int
name|timeout
init|=
literal|5
decl_stmt|;
name|DefaultXidFactory
name|xidFactory
init|=
operator|new
name|DefaultXidFactory
argument_list|()
decl_stmt|;
name|ActiveMQXAConnectionFactory
name|xacf
init|=
operator|new
name|ActiveMQXAConnectionFactory
argument_list|()
decl_stmt|;
name|xacf
operator|.
name|setBrokerURL
argument_list|(
name|url
argument_list|)
expr_stmt|;
name|ActiveMQQueue
name|queue
init|=
operator|new
name|ActiveMQQueue
argument_list|()
decl_stmt|;
name|queue
operator|.
name|setPhysicalName
argument_list|(
name|qName
argument_list|)
expr_stmt|;
name|XAConnection
name|xaconn
init|=
name|xacf
operator|.
name|createXAConnection
argument_list|()
decl_stmt|;
name|xaconn
operator|.
name|start
argument_list|()
expr_stmt|;
name|XASession
name|session
init|=
name|xaconn
operator|.
name|createXASession
argument_list|()
decl_stmt|;
name|XAResource
name|xares
init|=
name|session
operator|.
name|getXAResource
argument_list|()
decl_stmt|;
name|MessageConsumer
name|receiver
init|=
name|session
operator|.
name|getSession
argument_list|()
operator|.
name|createConsumer
argument_list|(
name|queue
argument_list|)
decl_stmt|;
name|xares
operator|.
name|recover
argument_list|(
name|XAResource
operator|.
name|TMSTARTRSCAN
argument_list|)
expr_stmt|;
name|xares
operator|.
name|recover
argument_list|(
name|XAResource
operator|.
name|TMNOFLAGS
argument_list|)
expr_stmt|;
name|xares
operator|.
name|setTransactionTimeout
argument_list|(
name|timeout
argument_list|)
expr_stmt|;
name|xares
operator|.
name|isSameRM
argument_list|(
name|xares
argument_list|)
expr_stmt|;
name|Xid
name|xid
init|=
name|xidFactory
operator|.
name|createXid
argument_list|(
literal|"part1"
argument_list|,
literal|"part2"
argument_list|)
decl_stmt|;
name|xares
operator|.
name|start
argument_list|(
name|xid
argument_list|,
name|XAResource
operator|.
name|TMNOFLAGS
argument_list|)
expr_stmt|;
name|receiver
operator|.
name|receive
argument_list|(
name|timeout
argument_list|)
expr_stmt|;
name|xares
operator|.
name|end
argument_list|(
name|xid
argument_list|,
name|XAResource
operator|.
name|TMSUCCESS
argument_list|)
expr_stmt|;
name|xares
operator|.
name|rollback
argument_list|(
name|xid
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Done!"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

