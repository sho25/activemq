begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileDescriptor
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|RandomAccessFile
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|channels
operator|.
name|FileChannel
import|;
end_import

begin_class
specifier|public
class|class
name|RecoverableRandomAccessFile
implements|implements
name|java
operator|.
name|io
operator|.
name|DataOutput
implements|,
name|java
operator|.
name|io
operator|.
name|DataInput
implements|,
name|java
operator|.
name|io
operator|.
name|Closeable
block|{
specifier|private
specifier|static
specifier|final
name|boolean
name|SKIP_METADATA_UPDATE
init|=
name|Boolean
operator|.
name|getBoolean
argument_list|(
literal|"org.apache.activemq.kahaDB.files.skipMetadataUpdate"
argument_list|)
decl_stmt|;
name|RandomAccessFile
name|raf
decl_stmt|;
name|File
name|file
decl_stmt|;
name|String
name|mode
decl_stmt|;
specifier|public
name|RecoverableRandomAccessFile
parameter_list|(
name|File
name|file
parameter_list|,
name|String
name|mode
parameter_list|)
throws|throws
name|FileNotFoundException
block|{
name|this
operator|.
name|file
operator|=
name|file
expr_stmt|;
name|this
operator|.
name|mode
operator|=
name|mode
expr_stmt|;
name|raf
operator|=
operator|new
name|RandomAccessFile
argument_list|(
name|file
argument_list|,
name|mode
argument_list|)
expr_stmt|;
block|}
specifier|public
name|RecoverableRandomAccessFile
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|mode
parameter_list|)
throws|throws
name|FileNotFoundException
block|{
name|this
operator|.
name|file
operator|=
operator|new
name|File
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|this
operator|.
name|mode
operator|=
name|mode
expr_stmt|;
name|raf
operator|=
operator|new
name|RandomAccessFile
argument_list|(
name|file
argument_list|,
name|mode
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|RandomAccessFile
name|getRaf
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
name|raf
operator|==
literal|null
condition|)
block|{
name|raf
operator|=
operator|new
name|RandomAccessFile
argument_list|(
name|file
argument_list|,
name|mode
argument_list|)
expr_stmt|;
block|}
return|return
name|raf
return|;
block|}
specifier|protected
name|void
name|handleException
parameter_list|()
throws|throws
name|IOException
block|{
try|try
block|{
if|if
condition|(
name|raf
operator|!=
literal|null
condition|)
block|{
name|raf
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Throwable
name|ignore
parameter_list|)
block|{         }
finally|finally
block|{
name|raf
operator|=
literal|null
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
name|raf
operator|!=
literal|null
condition|)
block|{
name|raf
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|readFully
parameter_list|(
name|byte
index|[]
name|bytes
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|getRaf
argument_list|()
operator|.
name|readFully
argument_list|(
name|bytes
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|handleException
argument_list|()
expr_stmt|;
throw|throw
name|ioe
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|readFully
parameter_list|(
name|byte
index|[]
name|bytes
parameter_list|,
name|int
name|i
parameter_list|,
name|int
name|i2
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|getRaf
argument_list|()
operator|.
name|readFully
argument_list|(
name|bytes
argument_list|,
name|i
argument_list|,
name|i2
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|handleException
argument_list|()
expr_stmt|;
throw|throw
name|ioe
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|int
name|skipBytes
parameter_list|(
name|int
name|i
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
return|return
name|getRaf
argument_list|()
operator|.
name|skipBytes
argument_list|(
name|i
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|handleException
argument_list|()
expr_stmt|;
throw|throw
name|ioe
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|readBoolean
parameter_list|()
throws|throws
name|IOException
block|{
try|try
block|{
return|return
name|getRaf
argument_list|()
operator|.
name|readBoolean
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|handleException
argument_list|()
expr_stmt|;
throw|throw
name|ioe
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|byte
name|readByte
parameter_list|()
throws|throws
name|IOException
block|{
try|try
block|{
return|return
name|getRaf
argument_list|()
operator|.
name|readByte
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|handleException
argument_list|()
expr_stmt|;
throw|throw
name|ioe
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|int
name|readUnsignedByte
parameter_list|()
throws|throws
name|IOException
block|{
try|try
block|{
return|return
name|getRaf
argument_list|()
operator|.
name|readUnsignedByte
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|handleException
argument_list|()
expr_stmt|;
throw|throw
name|ioe
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|short
name|readShort
parameter_list|()
throws|throws
name|IOException
block|{
try|try
block|{
return|return
name|getRaf
argument_list|()
operator|.
name|readShort
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|handleException
argument_list|()
expr_stmt|;
throw|throw
name|ioe
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|int
name|readUnsignedShort
parameter_list|()
throws|throws
name|IOException
block|{
try|try
block|{
return|return
name|getRaf
argument_list|()
operator|.
name|readUnsignedShort
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|handleException
argument_list|()
expr_stmt|;
throw|throw
name|ioe
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|char
name|readChar
parameter_list|()
throws|throws
name|IOException
block|{
try|try
block|{
return|return
name|getRaf
argument_list|()
operator|.
name|readChar
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|handleException
argument_list|()
expr_stmt|;
throw|throw
name|ioe
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|int
name|readInt
parameter_list|()
throws|throws
name|IOException
block|{
try|try
block|{
return|return
name|getRaf
argument_list|()
operator|.
name|readInt
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|handleException
argument_list|()
expr_stmt|;
throw|throw
name|ioe
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|long
name|readLong
parameter_list|()
throws|throws
name|IOException
block|{
try|try
block|{
return|return
name|getRaf
argument_list|()
operator|.
name|readLong
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|handleException
argument_list|()
expr_stmt|;
throw|throw
name|ioe
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|float
name|readFloat
parameter_list|()
throws|throws
name|IOException
block|{
try|try
block|{
return|return
name|getRaf
argument_list|()
operator|.
name|readFloat
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|handleException
argument_list|()
expr_stmt|;
throw|throw
name|ioe
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|double
name|readDouble
parameter_list|()
throws|throws
name|IOException
block|{
try|try
block|{
return|return
name|getRaf
argument_list|()
operator|.
name|readDouble
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|handleException
argument_list|()
expr_stmt|;
throw|throw
name|ioe
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|String
name|readLine
parameter_list|()
throws|throws
name|IOException
block|{
try|try
block|{
return|return
name|getRaf
argument_list|()
operator|.
name|readLine
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|handleException
argument_list|()
expr_stmt|;
throw|throw
name|ioe
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|String
name|readUTF
parameter_list|()
throws|throws
name|IOException
block|{
try|try
block|{
return|return
name|getRaf
argument_list|()
operator|.
name|readUTF
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|handleException
argument_list|()
expr_stmt|;
throw|throw
name|ioe
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|write
parameter_list|(
name|int
name|i
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|getRaf
argument_list|()
operator|.
name|write
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|handleException
argument_list|()
expr_stmt|;
throw|throw
name|ioe
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|write
parameter_list|(
name|byte
index|[]
name|bytes
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|getRaf
argument_list|()
operator|.
name|write
argument_list|(
name|bytes
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|handleException
argument_list|()
expr_stmt|;
throw|throw
name|ioe
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|write
parameter_list|(
name|byte
index|[]
name|bytes
parameter_list|,
name|int
name|i
parameter_list|,
name|int
name|i2
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|getRaf
argument_list|()
operator|.
name|write
argument_list|(
name|bytes
argument_list|,
name|i
argument_list|,
name|i2
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|handleException
argument_list|()
expr_stmt|;
throw|throw
name|ioe
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|writeBoolean
parameter_list|(
name|boolean
name|b
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|getRaf
argument_list|()
operator|.
name|writeBoolean
argument_list|(
name|b
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|handleException
argument_list|()
expr_stmt|;
throw|throw
name|ioe
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|writeByte
parameter_list|(
name|int
name|i
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|getRaf
argument_list|()
operator|.
name|writeByte
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|handleException
argument_list|()
expr_stmt|;
throw|throw
name|ioe
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|writeShort
parameter_list|(
name|int
name|i
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|getRaf
argument_list|()
operator|.
name|writeShort
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|handleException
argument_list|()
expr_stmt|;
throw|throw
name|ioe
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|writeChar
parameter_list|(
name|int
name|i
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|getRaf
argument_list|()
operator|.
name|writeChar
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|handleException
argument_list|()
expr_stmt|;
throw|throw
name|ioe
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|writeInt
parameter_list|(
name|int
name|i
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|getRaf
argument_list|()
operator|.
name|writeInt
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|handleException
argument_list|()
expr_stmt|;
throw|throw
name|ioe
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|writeLong
parameter_list|(
name|long
name|l
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|getRaf
argument_list|()
operator|.
name|writeLong
argument_list|(
name|l
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|handleException
argument_list|()
expr_stmt|;
throw|throw
name|ioe
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|writeFloat
parameter_list|(
name|float
name|v
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|getRaf
argument_list|()
operator|.
name|writeFloat
argument_list|(
name|v
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|handleException
argument_list|()
expr_stmt|;
throw|throw
name|ioe
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|writeDouble
parameter_list|(
name|double
name|v
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|getRaf
argument_list|()
operator|.
name|writeDouble
argument_list|(
name|v
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|handleException
argument_list|()
expr_stmt|;
throw|throw
name|ioe
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|writeBytes
parameter_list|(
name|String
name|s
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|getRaf
argument_list|()
operator|.
name|writeBytes
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|handleException
argument_list|()
expr_stmt|;
throw|throw
name|ioe
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|writeChars
parameter_list|(
name|String
name|s
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|getRaf
argument_list|()
operator|.
name|writeChars
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|handleException
argument_list|()
expr_stmt|;
throw|throw
name|ioe
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|writeUTF
parameter_list|(
name|String
name|s
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|getRaf
argument_list|()
operator|.
name|writeUTF
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|handleException
argument_list|()
expr_stmt|;
throw|throw
name|ioe
throw|;
block|}
block|}
comment|//RAF methods
specifier|public
name|long
name|length
parameter_list|()
throws|throws
name|IOException
block|{
try|try
block|{
return|return
name|getRaf
argument_list|()
operator|.
name|length
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|handleException
argument_list|()
expr_stmt|;
throw|throw
name|ioe
throw|;
block|}
block|}
specifier|public
name|void
name|setLength
parameter_list|(
name|long
name|length
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"File size is pre allocated"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|seek
parameter_list|(
name|long
name|pos
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|getRaf
argument_list|()
operator|.
name|seek
argument_list|(
name|pos
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|handleException
argument_list|()
expr_stmt|;
throw|throw
name|ioe
throw|;
block|}
block|}
specifier|public
name|FileDescriptor
name|getFD
parameter_list|()
throws|throws
name|IOException
block|{
try|try
block|{
return|return
name|getRaf
argument_list|()
operator|.
name|getFD
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|handleException
argument_list|()
expr_stmt|;
throw|throw
name|ioe
throw|;
block|}
block|}
specifier|public
name|void
name|sync
parameter_list|()
throws|throws
name|IOException
block|{
try|try
block|{
name|getRaf
argument_list|()
operator|.
name|getChannel
argument_list|()
operator|.
name|force
argument_list|(
operator|!
name|SKIP_METADATA_UPDATE
argument_list|)
expr_stmt|;
empty_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|handleException
argument_list|()
expr_stmt|;
throw|throw
name|ioe
throw|;
block|}
block|}
specifier|public
name|FileChannel
name|getChannel
parameter_list|()
throws|throws
name|IOException
block|{
try|try
block|{
return|return
name|getRaf
argument_list|()
operator|.
name|getChannel
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|handleException
argument_list|()
expr_stmt|;
throw|throw
name|ioe
throw|;
block|}
block|}
specifier|public
name|int
name|read
parameter_list|(
name|byte
index|[]
name|b
parameter_list|,
name|int
name|off
parameter_list|,
name|int
name|len
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
return|return
name|getRaf
argument_list|()
operator|.
name|read
argument_list|(
name|b
argument_list|,
name|off
argument_list|,
name|len
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|handleException
argument_list|()
expr_stmt|;
throw|throw
name|ioe
throw|;
block|}
block|}
specifier|public
name|int
name|read
parameter_list|(
name|byte
index|[]
name|b
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
return|return
name|getRaf
argument_list|()
operator|.
name|read
argument_list|(
name|b
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|handleException
argument_list|()
expr_stmt|;
throw|throw
name|ioe
throw|;
block|}
block|}
block|}
end_class

end_unit

