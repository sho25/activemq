begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ra
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|BytesMessage
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Destination
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|JMSException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MapMessage
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageConsumer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageListener
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageProducer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|ObjectMessage
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Queue
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|QueueBrowser
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|QueueReceiver
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|QueueSender
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|QueueSession
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|StreamMessage
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|TemporaryQueue
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|TemporaryTopic
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|TextMessage
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Topic
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|TopicPublisher
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|TopicSession
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|TopicSubscriber
import|;
end_import

begin_comment
comment|/**  * A {@link Session} implementation which can be used with the ActiveMQ JCA  * Resource Adapter to publish messages using the same JMS session that is used  * to dispatch messages.  *   *   */
end_comment

begin_class
specifier|public
class|class
name|InboundSessionProxy
implements|implements
name|Session
implements|,
name|QueueSession
implements|,
name|TopicSession
block|{
specifier|private
name|InboundContext
name|sessionAndProducer
decl_stmt|;
specifier|public
name|Session
name|getSession
parameter_list|()
throws|throws
name|JMSException
block|{
return|return
name|getSessionAndProducer
argument_list|()
operator|.
name|getSession
argument_list|()
return|;
block|}
specifier|public
name|QueueSession
name|getQueueSession
parameter_list|()
throws|throws
name|JMSException
block|{
name|Session
name|session
init|=
name|getSession
argument_list|()
decl_stmt|;
if|if
condition|(
name|session
operator|instanceof
name|QueueSession
condition|)
block|{
return|return
operator|(
name|QueueSession
operator|)
name|session
return|;
block|}
else|else
block|{
throw|throw
operator|new
name|JMSException
argument_list|(
literal|"The underlying JMS Session does not support QueueSession semantics: "
operator|+
name|session
argument_list|)
throw|;
block|}
block|}
specifier|public
name|TopicSession
name|getTopicSession
parameter_list|()
throws|throws
name|JMSException
block|{
name|Session
name|session
init|=
name|getSession
argument_list|()
decl_stmt|;
if|if
condition|(
name|session
operator|instanceof
name|TopicSession
condition|)
block|{
return|return
operator|(
name|TopicSession
operator|)
name|session
return|;
block|}
else|else
block|{
throw|throw
operator|new
name|JMSException
argument_list|(
literal|"The underlying JMS Session does not support TopicSession semantics: "
operator|+
name|session
argument_list|)
throw|;
block|}
block|}
specifier|public
name|InboundContext
name|getSessionAndProducer
parameter_list|()
throws|throws
name|JMSException
block|{
if|if
condition|(
name|sessionAndProducer
operator|==
literal|null
condition|)
block|{
name|sessionAndProducer
operator|=
name|InboundContextSupport
operator|.
name|getActiveSessionAndProducer
argument_list|()
expr_stmt|;
if|if
condition|(
name|sessionAndProducer
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|JMSException
argument_list|(
literal|"No currently active Session. This JMS provider cannot be used outside a MessageListener.onMessage() invocation"
argument_list|)
throw|;
block|}
block|}
return|return
name|sessionAndProducer
return|;
block|}
specifier|public
name|MessageProducer
name|createProducer
parameter_list|(
name|Destination
name|destination
parameter_list|)
throws|throws
name|JMSException
block|{
return|return
operator|new
name|InboundMessageProducerProxy
argument_list|(
name|getSessionAndProducer
argument_list|()
operator|.
name|getMessageProducer
argument_list|()
argument_list|,
name|destination
argument_list|)
return|;
block|}
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|JMSException
block|{
comment|// we don't allow users to close this session
comment|// as its used by the JCA container
block|}
specifier|public
name|void
name|commit
parameter_list|()
throws|throws
name|JMSException
block|{
comment|// the JCA container will handle transactions
block|}
specifier|public
name|void
name|rollback
parameter_list|()
throws|throws
name|JMSException
block|{
comment|// the JCA container will handle transactions
block|}
specifier|public
name|void
name|recover
parameter_list|()
throws|throws
name|JMSException
block|{
comment|// the JCA container will handle recovery
block|}
specifier|public
name|void
name|run
parameter_list|()
block|{
try|try
block|{
name|getSession
argument_list|()
operator|.
name|run
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JMSException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Failed to run() on session due to: "
operator|+
name|e
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
comment|// Straightforward delegation methods
comment|// -------------------------------------------------------------------------
specifier|public
name|QueueBrowser
name|createBrowser
parameter_list|(
name|Queue
name|queue
parameter_list|)
throws|throws
name|JMSException
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createBrowser
argument_list|(
name|queue
argument_list|)
return|;
block|}
specifier|public
name|QueueBrowser
name|createBrowser
parameter_list|(
name|Queue
name|queue
parameter_list|,
name|String
name|s
parameter_list|)
throws|throws
name|JMSException
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createBrowser
argument_list|(
name|queue
argument_list|,
name|s
argument_list|)
return|;
block|}
specifier|public
name|BytesMessage
name|createBytesMessage
parameter_list|()
throws|throws
name|JMSException
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createBytesMessage
argument_list|()
return|;
block|}
specifier|public
name|MessageConsumer
name|createConsumer
parameter_list|(
name|Destination
name|destination
parameter_list|)
throws|throws
name|JMSException
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createConsumer
argument_list|(
name|destination
argument_list|)
return|;
block|}
specifier|public
name|MessageConsumer
name|createConsumer
parameter_list|(
name|Destination
name|destination
parameter_list|,
name|String
name|s
parameter_list|)
throws|throws
name|JMSException
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createConsumer
argument_list|(
name|destination
argument_list|,
name|s
argument_list|)
return|;
block|}
specifier|public
name|MessageConsumer
name|createConsumer
parameter_list|(
name|Destination
name|destination
parameter_list|,
name|String
name|s
parameter_list|,
name|boolean
name|b
parameter_list|)
throws|throws
name|JMSException
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createConsumer
argument_list|(
name|destination
argument_list|,
name|s
argument_list|,
name|b
argument_list|)
return|;
block|}
specifier|public
name|TopicSubscriber
name|createDurableSubscriber
parameter_list|(
name|Topic
name|topic
parameter_list|,
name|String
name|s
parameter_list|)
throws|throws
name|JMSException
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createDurableSubscriber
argument_list|(
name|topic
argument_list|,
name|s
argument_list|)
return|;
block|}
specifier|public
name|TopicSubscriber
name|createDurableSubscriber
parameter_list|(
name|Topic
name|topic
parameter_list|,
name|String
name|s
parameter_list|,
name|String
name|s1
parameter_list|,
name|boolean
name|b
parameter_list|)
throws|throws
name|JMSException
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createDurableSubscriber
argument_list|(
name|topic
argument_list|,
name|s
argument_list|,
name|s1
argument_list|,
name|b
argument_list|)
return|;
block|}
specifier|public
name|MapMessage
name|createMapMessage
parameter_list|()
throws|throws
name|JMSException
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createMapMessage
argument_list|()
return|;
block|}
specifier|public
name|Message
name|createMessage
parameter_list|()
throws|throws
name|JMSException
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createMessage
argument_list|()
return|;
block|}
specifier|public
name|ObjectMessage
name|createObjectMessage
parameter_list|()
throws|throws
name|JMSException
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createObjectMessage
argument_list|()
return|;
block|}
specifier|public
name|ObjectMessage
name|createObjectMessage
parameter_list|(
name|Serializable
name|serializable
parameter_list|)
throws|throws
name|JMSException
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createObjectMessage
argument_list|(
name|serializable
argument_list|)
return|;
block|}
specifier|public
name|Queue
name|createQueue
parameter_list|(
name|String
name|s
parameter_list|)
throws|throws
name|JMSException
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createQueue
argument_list|(
name|s
argument_list|)
return|;
block|}
specifier|public
name|StreamMessage
name|createStreamMessage
parameter_list|()
throws|throws
name|JMSException
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createStreamMessage
argument_list|()
return|;
block|}
specifier|public
name|TemporaryQueue
name|createTemporaryQueue
parameter_list|()
throws|throws
name|JMSException
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createTemporaryQueue
argument_list|()
return|;
block|}
specifier|public
name|TemporaryTopic
name|createTemporaryTopic
parameter_list|()
throws|throws
name|JMSException
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createTemporaryTopic
argument_list|()
return|;
block|}
specifier|public
name|TextMessage
name|createTextMessage
parameter_list|()
throws|throws
name|JMSException
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createTextMessage
argument_list|()
return|;
block|}
specifier|public
name|TextMessage
name|createTextMessage
parameter_list|(
name|String
name|s
parameter_list|)
throws|throws
name|JMSException
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createTextMessage
argument_list|(
name|s
argument_list|)
return|;
block|}
specifier|public
name|Topic
name|createTopic
parameter_list|(
name|String
name|s
parameter_list|)
throws|throws
name|JMSException
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createTopic
argument_list|(
name|s
argument_list|)
return|;
block|}
specifier|public
name|int
name|getAcknowledgeMode
parameter_list|()
throws|throws
name|JMSException
block|{
return|return
name|getSession
argument_list|()
operator|.
name|getAcknowledgeMode
argument_list|()
return|;
block|}
specifier|public
name|MessageListener
name|getMessageListener
parameter_list|()
throws|throws
name|JMSException
block|{
return|return
name|getSession
argument_list|()
operator|.
name|getMessageListener
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|getTransacted
parameter_list|()
throws|throws
name|JMSException
block|{
return|return
name|getSession
argument_list|()
operator|.
name|getTransacted
argument_list|()
return|;
block|}
specifier|public
name|void
name|setMessageListener
parameter_list|(
name|MessageListener
name|messageListener
parameter_list|)
throws|throws
name|JMSException
block|{
name|getSession
argument_list|()
operator|.
name|setMessageListener
argument_list|(
name|messageListener
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|unsubscribe
parameter_list|(
name|String
name|s
parameter_list|)
throws|throws
name|JMSException
block|{
name|getSession
argument_list|()
operator|.
name|unsubscribe
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
specifier|public
name|QueueReceiver
name|createReceiver
parameter_list|(
name|Queue
name|queue
parameter_list|)
throws|throws
name|JMSException
block|{
return|return
name|getQueueSession
argument_list|()
operator|.
name|createReceiver
argument_list|(
name|queue
argument_list|)
return|;
block|}
specifier|public
name|QueueReceiver
name|createReceiver
parameter_list|(
name|Queue
name|queue
parameter_list|,
name|String
name|s
parameter_list|)
throws|throws
name|JMSException
block|{
return|return
name|getQueueSession
argument_list|()
operator|.
name|createReceiver
argument_list|(
name|queue
argument_list|,
name|s
argument_list|)
return|;
block|}
specifier|public
name|QueueSender
name|createSender
parameter_list|(
name|Queue
name|queue
parameter_list|)
throws|throws
name|JMSException
block|{
return|return
operator|new
name|InboundMessageProducerProxy
argument_list|(
name|getSessionAndProducer
argument_list|()
operator|.
name|getMessageProducer
argument_list|()
argument_list|,
name|queue
argument_list|)
return|;
block|}
specifier|public
name|TopicSubscriber
name|createSubscriber
parameter_list|(
name|Topic
name|topic
parameter_list|)
throws|throws
name|JMSException
block|{
return|return
name|getTopicSession
argument_list|()
operator|.
name|createSubscriber
argument_list|(
name|topic
argument_list|)
return|;
block|}
specifier|public
name|TopicSubscriber
name|createSubscriber
parameter_list|(
name|Topic
name|topic
parameter_list|,
name|String
name|s
parameter_list|,
name|boolean
name|b
parameter_list|)
throws|throws
name|JMSException
block|{
return|return
name|getTopicSession
argument_list|()
operator|.
name|createSubscriber
argument_list|(
name|topic
argument_list|,
name|s
argument_list|,
name|b
argument_list|)
return|;
block|}
specifier|public
name|TopicPublisher
name|createPublisher
parameter_list|(
name|Topic
name|topic
parameter_list|)
throws|throws
name|JMSException
block|{
return|return
name|getTopicSession
argument_list|()
operator|.
name|createPublisher
argument_list|(
name|topic
argument_list|)
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
try|try
block|{
return|return
literal|"InboundSessionProxy { "
operator|+
name|getSession
argument_list|()
operator|+
literal|" }"
return|;
block|}
catch|catch
parameter_list|(
name|JMSException
name|e
parameter_list|)
block|{
return|return
literal|"InboundSessionProxy { null }"
return|;
block|}
block|}
block|}
end_class

end_unit

