begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|tool
operator|.
name|reports
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|tool
operator|.
name|reports
operator|.
name|plugins
operator|.
name|ThroughputReportPlugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|tool
operator|.
name|reports
operator|.
name|plugins
operator|.
name|CpuReportPlugin
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_class
specifier|public
class|class
name|VerbosePerfReportWriter
extends|extends
name|AbstractPerfReportWriter
block|{
specifier|public
name|void
name|openReportWriter
parameter_list|()
block|{
comment|// Do nothing
block|}
specifier|public
name|void
name|closeReportWriter
parameter_list|()
block|{
name|writeHeader
argument_list|(
literal|"Performance Summary"
argument_list|)
expr_stmt|;
name|writePerfSummary
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|writeInfo
parameter_list|(
name|String
name|info
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[PERF-INFO]: "
operator|+
name|info
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|writeCsvData
parameter_list|(
name|int
name|csvType
parameter_list|,
name|String
name|csvData
parameter_list|)
block|{
if|if
condition|(
name|csvType
operator|==
name|REPORT_PLUGIN_THROUGHPUT
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[PERF-TP]: "
operator|+
name|csvData
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|csvType
operator|==
name|REPORT_PLUGIN_CPU
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[PERF-CPU]: "
operator|+
name|csvData
argument_list|)
expr_stmt|;
block|}
name|handleCsvData
argument_list|(
name|csvType
argument_list|,
name|csvData
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|writeProperties
parameter_list|(
name|String
name|header
parameter_list|,
name|Properties
name|props
parameter_list|)
block|{
name|writeHeader
argument_list|(
name|header
argument_list|)
expr_stmt|;
name|writeProperties
argument_list|(
name|props
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|writeProperties
parameter_list|(
name|Properties
name|props
parameter_list|)
block|{
for|for
control|(
name|Iterator
name|i
init|=
name|props
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|String
name|key
init|=
operator|(
name|String
operator|)
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
name|String
name|val
init|=
name|props
operator|.
name|getProperty
argument_list|(
name|key
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[PERF-PROP]: "
operator|+
name|key
operator|+
literal|"="
operator|+
name|val
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|writePerfSummary
parameter_list|()
block|{
name|Map
name|summary
decl_stmt|;
name|summary
operator|=
name|getSummary
argument_list|(
name|REPORT_PLUGIN_THROUGHPUT
argument_list|)
expr_stmt|;
if|if
condition|(
name|summary
operator|!=
literal|null
operator|&&
name|summary
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|writeThroughputSummary
argument_list|(
name|summary
argument_list|)
expr_stmt|;
block|}
name|summary
operator|=
name|getSummary
argument_list|(
name|REPORT_PLUGIN_CPU
argument_list|)
expr_stmt|;
if|if
condition|(
name|summary
operator|!=
literal|null
operator|&&
name|summary
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|writeCpuSummary
argument_list|(
name|summary
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|writeThroughputSummary
parameter_list|(
name|Map
name|summary
parameter_list|)
block|{
name|writeHeader
argument_list|(
literal|"SYSTEM THROUGHPUT SUMMARY"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[PERF-TP-SUMMARY] System Total Throughput: "
operator|+
name|summary
operator|.
name|get
argument_list|(
name|ThroughputReportPlugin
operator|.
name|KEY_SYS_TOTAL_TP
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[PERF-TP-SUMMARY] System Total Clients: "
operator|+
name|summary
operator|.
name|get
argument_list|(
name|ThroughputReportPlugin
operator|.
name|KEY_SYS_TOTAL_CLIENTS
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[PERF-TP-SUMMARY] System Average Throughput: "
operator|+
name|summary
operator|.
name|get
argument_list|(
name|ThroughputReportPlugin
operator|.
name|KEY_SYS_AVE_TP
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[PERF-TP-SUMMARY] System Average Throughput Excluding Min/Max: "
operator|+
name|summary
operator|.
name|get
argument_list|(
name|ThroughputReportPlugin
operator|.
name|KEY_SYS_AVE_EMM_TP
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[PERF-TP-SUMMARY] System Average Client Throughput: "
operator|+
name|summary
operator|.
name|get
argument_list|(
name|ThroughputReportPlugin
operator|.
name|KEY_SYS_AVE_CLIENT_TP
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[PERF-TP-SUMMARY] System Average Client Throughput Excluding Min/Max: "
operator|+
name|summary
operator|.
name|get
argument_list|(
name|ThroughputReportPlugin
operator|.
name|KEY_SYS_AVE_CLIENT_EMM_TP
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[PERF-TP-SUMMARY] Min Client Throughput Per Sample: "
operator|+
name|summary
operator|.
name|get
argument_list|(
name|ThroughputReportPlugin
operator|.
name|KEY_MIN_CLIENT_TP
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[PERF-TP-SUMMARY] Max Client Throughput Per Sample: "
operator|+
name|summary
operator|.
name|get
argument_list|(
name|ThroughputReportPlugin
operator|.
name|KEY_MAX_CLIENT_TP
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[PERF-TP-SUMMARY] Min Client Total Throughput: "
operator|+
name|summary
operator|.
name|get
argument_list|(
name|ThroughputReportPlugin
operator|.
name|KEY_MIN_CLIENT_TOTAL_TP
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[PERF-TP-SUMMARY] Max Client Total Throughput: "
operator|+
name|summary
operator|.
name|get
argument_list|(
name|ThroughputReportPlugin
operator|.
name|KEY_MAX_CLIENT_TOTAL_TP
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[PERF-TP-SUMMARY] Min Client Average Throughput: "
operator|+
name|summary
operator|.
name|get
argument_list|(
name|ThroughputReportPlugin
operator|.
name|KEY_MIN_CLIENT_AVE_TP
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[PERF-TP-SUMMARY] Max Client Average Throughput: "
operator|+
name|summary
operator|.
name|get
argument_list|(
name|ThroughputReportPlugin
operator|.
name|KEY_MAX_CLIENT_AVE_TP
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[PERF-TP-SUMMARY] Min Client Average Throughput Excluding Min/Max: "
operator|+
name|summary
operator|.
name|get
argument_list|(
name|ThroughputReportPlugin
operator|.
name|KEY_MIN_CLIENT_AVE_EMM_TP
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[PERF-TP-SUMMARY] Max Client Average Throughput Excluding Min/Max: "
operator|+
name|summary
operator|.
name|get
argument_list|(
name|ThroughputReportPlugin
operator|.
name|KEY_MAX_CLIENT_AVE_EMM_TP
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|writeCpuSummary
parameter_list|(
name|Map
name|summary
parameter_list|)
block|{
name|writeHeader
argument_list|(
literal|"SYSTEM CPU USAGE SUMMARY"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[PERF-CPU-SUMMARY] Total Blocks Received: "
operator|+
name|summary
operator|.
name|get
argument_list|(
name|CpuReportPlugin
operator|.
name|KEY_BLOCK_RECV
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[PERF-CPU-SUMMARY] Ave Blocks Received: "
operator|+
name|summary
operator|.
name|get
argument_list|(
name|CpuReportPlugin
operator|.
name|KEY_AVE_BLOCK_RECV
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[PERF-CPU-SUMMARY] Total Blocks Sent: "
operator|+
name|summary
operator|.
name|get
argument_list|(
name|CpuReportPlugin
operator|.
name|KEY_BLOCK_SENT
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[PERF-CPU-SUMMARY] Ave Blocks Sent: "
operator|+
name|summary
operator|.
name|get
argument_list|(
name|CpuReportPlugin
operator|.
name|KEY_AVE_BLOCK_SENT
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[PERF-CPU-SUMMARY] Total Context Switches: "
operator|+
name|summary
operator|.
name|get
argument_list|(
name|CpuReportPlugin
operator|.
name|KEY_CTX_SWITCH
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[PERF-CPU-SUMMARY] Ave Context Switches: "
operator|+
name|summary
operator|.
name|get
argument_list|(
name|CpuReportPlugin
operator|.
name|KEY_AVE_CTX_SWITCH
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[PERF-CPU-SUMMARY] Total User Time: "
operator|+
name|summary
operator|.
name|get
argument_list|(
name|CpuReportPlugin
operator|.
name|KEY_USER_TIME
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[PERF-CPU-SUMMARY] Ave User Time: "
operator|+
name|summary
operator|.
name|get
argument_list|(
name|CpuReportPlugin
operator|.
name|KEY_AVE_USER_TIME
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[PERF-CPU-SUMMARY] Total System Time: "
operator|+
name|summary
operator|.
name|get
argument_list|(
name|CpuReportPlugin
operator|.
name|KEY_SYS_TIME
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[PERF-CPU-SUMMARY] Ave System Time: "
operator|+
name|summary
operator|.
name|get
argument_list|(
name|CpuReportPlugin
operator|.
name|KEY_AVE_SYS_TIME
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[PERF-CPU-SUMMARY] Total Idle Time: "
operator|+
name|summary
operator|.
name|get
argument_list|(
name|CpuReportPlugin
operator|.
name|KEY_IDLE_TIME
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[PERF-CPU-SUMMARY] Ave Idle Time: "
operator|+
name|summary
operator|.
name|get
argument_list|(
name|CpuReportPlugin
operator|.
name|KEY_AVE_IDLE_TIME
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[PERF-CPU-SUMMARY] Total Wait Time: "
operator|+
name|summary
operator|.
name|get
argument_list|(
name|CpuReportPlugin
operator|.
name|KEY_WAIT_TIME
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"[PERF-CPU-SUMMARY] Ave Wait Time: "
operator|+
name|summary
operator|.
name|get
argument_list|(
name|CpuReportPlugin
operator|.
name|KEY_AVE_WAIT_TIME
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|writeHeader
parameter_list|(
name|String
name|header
parameter_list|)
block|{
name|char
index|[]
name|border
init|=
operator|new
name|char
index|[
name|header
operator|.
name|length
argument_list|()
operator|+
literal|8
index|]
decl_stmt|;
comment|// +8 for spacing
name|Arrays
operator|.
name|fill
argument_list|(
name|border
argument_list|,
literal|'#'
argument_list|)
expr_stmt|;
name|String
name|borderStr
init|=
operator|new
name|String
argument_list|(
name|border
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|borderStr
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"#   "
operator|+
name|header
operator|+
literal|"   #"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|borderStr
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

