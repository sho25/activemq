begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *   * Copyright 2004 Hiram Chirino  *   * Licensed under the Apache License, Version 2.0 (the "License");   * you may not use this file except in compliance with the License.   * You may obtain a copy of the License at   *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   * See the License for the specific language governing permissions and   * limitations under the License.   *   **/
end_comment

begin_package
package|package
name|org
operator|.
name|activeio
operator|.
name|packet
operator|.
name|sync
operator|.
name|filter
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activeio
operator|.
name|packet
operator|.
name|Packet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activeio
operator|.
name|packet
operator|.
name|sync
operator|.
name|FilterSyncChannel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activeio
operator|.
name|packet
operator|.
name|sync
operator|.
name|SyncChannel
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
specifier|public
class|class
name|PushbackSyncChannel
extends|extends
name|FilterSyncChannel
block|{
specifier|private
name|Packet
name|putback
decl_stmt|;
specifier|public
name|PushbackSyncChannel
parameter_list|(
name|SyncChannel
name|next
parameter_list|)
block|{
name|this
argument_list|(
name|next
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|PushbackSyncChannel
parameter_list|(
name|SyncChannel
name|next
parameter_list|,
name|Packet
name|putback
parameter_list|)
block|{
name|super
argument_list|(
name|next
argument_list|)
expr_stmt|;
name|this
operator|.
name|putback
operator|=
name|putback
expr_stmt|;
block|}
specifier|public
name|void
name|putback
parameter_list|(
name|Packet
name|packet
parameter_list|)
block|{
name|this
operator|.
name|putback
operator|=
name|packet
expr_stmt|;
block|}
specifier|public
name|Packet
name|read
parameter_list|(
name|long
name|timeout
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|putback
operator|!=
literal|null
condition|)
block|{
name|Packet
name|p
init|=
name|putback
decl_stmt|;
name|putback
operator|=
literal|null
expr_stmt|;
return|return
name|p
return|;
block|}
return|return
name|super
operator|.
name|read
argument_list|(
name|timeout
argument_list|)
return|;
block|}
block|}
end_class

end_unit

