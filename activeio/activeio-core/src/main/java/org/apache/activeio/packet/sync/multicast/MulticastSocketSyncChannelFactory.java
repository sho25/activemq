begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activeio
operator|.
name|packet
operator|.
name|sync
operator|.
name|multicast
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|MulticastSocket
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activeio
operator|.
name|packet
operator|.
name|sync
operator|.
name|SyncChannel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activeio
operator|.
name|packet
operator|.
name|sync
operator|.
name|SyncChannelFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activeio
operator|.
name|packet
operator|.
name|sync
operator|.
name|SyncChannelServer
import|;
end_import

begin_comment
comment|/**  * @version $Revision: $ $Date: $  */
end_comment

begin_class
specifier|public
class|class
name|MulticastSocketSyncChannelFactory
implements|implements
name|SyncChannelFactory
block|{
specifier|public
name|SyncChannel
name|openSyncChannel
parameter_list|(
name|URI
name|groupURI
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|groupURI
operator|==
literal|null
condition|)
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"group URI cannot be null"
argument_list|)
throw|;
name|MulticastSocket
name|socket
init|=
operator|new
name|MulticastSocket
argument_list|(
name|groupURI
operator|.
name|getPort
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|createSyncChannel
argument_list|(
name|socket
argument_list|,
name|InetAddress
operator|.
name|getByName
argument_list|(
name|groupURI
operator|.
name|getHost
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|SyncChannel
name|openSyncChannel
parameter_list|(
name|URI
name|groupURI
parameter_list|,
name|URI
name|localLocation
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|groupURI
operator|==
literal|null
condition|)
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"group URI cannot be null"
argument_list|)
throw|;
name|MulticastSocket
name|socket
init|=
operator|new
name|MulticastSocket
argument_list|(
name|groupURI
operator|.
name|getPort
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|localLocation
operator|!=
literal|null
condition|)
block|{
name|socket
operator|.
name|setInterface
argument_list|(
name|InetAddress
operator|.
name|getByName
argument_list|(
name|localLocation
operator|.
name|getHost
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|createSyncChannel
argument_list|(
name|socket
argument_list|,
name|InetAddress
operator|.
name|getByName
argument_list|(
name|groupURI
operator|.
name|getHost
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
specifier|protected
name|SyncChannel
name|createSyncChannel
parameter_list|(
name|MulticastSocket
name|socket
parameter_list|,
name|InetAddress
name|groupAddress
parameter_list|)
throws|throws
name|IOException
block|{
return|return
operator|new
name|MulticastSocketSyncChannel
argument_list|(
name|socket
argument_list|,
name|groupAddress
argument_list|)
return|;
block|}
specifier|public
name|SyncChannelServer
name|bindSyncChannel
parameter_list|(
name|URI
name|location
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"A SyncChannelServer is not available for this channel."
argument_list|)
throw|;
block|}
block|}
end_class

end_unit

