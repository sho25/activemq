begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ActiveMQDestination
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ActiveMQQueue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadb
operator|.
name|FilteredKahaDBPersistenceAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadb
operator|.
name|KahaDBPersistenceAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadb
operator|.
name|MultiKahaDBPersistenceAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|leveldb
operator|.
name|LevelDBPersistenceAdapter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
specifier|public
class|class
name|mLevelDBXARecoveryBrokerTest
extends|extends
name|XARecoveryBrokerTest
block|{
annotation|@
name|Override
specifier|protected
name|void
name|configureBroker
parameter_list|(
name|BrokerService
name|broker
parameter_list|)
throws|throws
name|Exception
block|{
name|super
operator|.
name|configureBroker
argument_list|(
name|broker
argument_list|)
expr_stmt|;
name|MultiKahaDBPersistenceAdapter
name|mKahaDB
init|=
operator|new
name|MultiKahaDBPersistenceAdapter
argument_list|()
decl_stmt|;
name|List
name|adapters
init|=
operator|new
name|LinkedList
argument_list|<
name|FilteredKahaDBPersistenceAdapter
argument_list|>
argument_list|()
decl_stmt|;
name|FilteredKahaDBPersistenceAdapter
name|defaultEntry
init|=
operator|new
name|FilteredKahaDBPersistenceAdapter
argument_list|()
decl_stmt|;
name|defaultEntry
operator|.
name|setPersistenceAdapter
argument_list|(
operator|new
name|LevelDBPersistenceAdapter
argument_list|()
argument_list|)
expr_stmt|;
name|adapters
operator|.
name|add
argument_list|(
name|defaultEntry
argument_list|)
expr_stmt|;
name|FilteredKahaDBPersistenceAdapter
name|special
init|=
operator|new
name|FilteredKahaDBPersistenceAdapter
argument_list|()
decl_stmt|;
name|special
operator|.
name|setDestination
argument_list|(
operator|new
name|ActiveMQQueue
argument_list|(
literal|"special"
argument_list|)
argument_list|)
expr_stmt|;
name|special
operator|.
name|setPersistenceAdapter
argument_list|(
operator|new
name|LevelDBPersistenceAdapter
argument_list|()
argument_list|)
expr_stmt|;
name|adapters
operator|.
name|add
argument_list|(
name|special
argument_list|)
expr_stmt|;
name|mKahaDB
operator|.
name|setFilteredPersistenceAdapters
argument_list|(
name|adapters
argument_list|)
expr_stmt|;
name|broker
operator|.
name|setPersistenceAdapter
argument_list|(
name|mKahaDB
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|Test
name|suite
parameter_list|()
block|{
return|return
name|suite
argument_list|(
name|mLevelDBXARecoveryBrokerTest
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
name|junit
operator|.
name|textui
operator|.
name|TestRunner
operator|.
name|run
argument_list|(
name|suite
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|ActiveMQDestination
name|createDestination
parameter_list|()
block|{
return|return
operator|new
name|ActiveMQQueue
argument_list|(
literal|"test,special"
argument_list|)
return|;
block|}
specifier|public
name|void
name|testQueuePersistentPreparedAcksAvailableAfterRestartAndRollback
parameter_list|()
throws|throws
name|Exception
block|{
comment|// super.testQueuePersistentPreparedAcksAvailableAfterRestartAndRollback();
block|}
specifier|public
name|void
name|testQueuePersistentUncommittedAcksLostOnRestart
parameter_list|()
throws|throws
name|Exception
block|{
comment|// super.testQueuePersistentUncommittedAcksLostOnRestart();
block|}
specifier|public
name|void
name|testQueuePersistentPreparedAcksNotLostOnRestart
parameter_list|()
throws|throws
name|Exception
block|{
comment|// pending acks are not tracked in leveldb
block|}
specifier|public
name|void
name|testQueuePersistentPreparedAcksAvailableAfterRollback
parameter_list|()
throws|throws
name|Exception
block|{
comment|// pending acks are not tracked in leveldb
block|}
specifier|public
name|void
name|testTopicPersistentPreparedAcksUnavailableTillRollback
parameter_list|()
throws|throws
name|Exception
block|{     }
block|}
end_class

end_unit

