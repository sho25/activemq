begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|plugin
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBElement
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|virtual
operator|.
name|FilteredDestination
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ActiveMQQueue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ActiveMQTopic
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|schema
operator|.
name|core
operator|.
name|DtoFilteredDestination
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|schema
operator|.
name|core
operator|.
name|DtoTopic
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|schema
operator|.
name|core
operator|.
name|DtoQueue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|schema
operator|.
name|core
operator|.
name|DtoAuthenticationUser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|security
operator|.
name|AuthenticationUser
import|;
end_import

begin_class
specifier|public
class|class
name|JAXBUtils
block|{
specifier|public
specifier|static
name|Method
name|findSetter
parameter_list|(
name|Object
name|instance
parameter_list|,
name|String
name|elementName
parameter_list|)
block|{
name|String
name|setter
init|=
literal|"set"
operator|+
name|elementName
decl_stmt|;
for|for
control|(
name|Method
name|m
range|:
name|instance
operator|.
name|getClass
argument_list|()
operator|.
name|getMethods
argument_list|()
control|)
block|{
if|if
condition|(
name|setter
operator|.
name|equals
argument_list|(
name|m
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
return|return
name|m
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|public
specifier|static
name|Object
name|inferTargetObject
parameter_list|(
name|Object
name|elementContent
parameter_list|)
block|{
if|if
condition|(
name|DtoTopic
operator|.
name|class
operator|.
name|isAssignableFrom
argument_list|(
name|elementContent
operator|.
name|getClass
argument_list|()
argument_list|)
condition|)
block|{
return|return
operator|new
name|ActiveMQTopic
argument_list|()
return|;
block|}
elseif|else
if|if
condition|(
name|DtoQueue
operator|.
name|class
operator|.
name|isAssignableFrom
argument_list|(
name|elementContent
operator|.
name|getClass
argument_list|()
argument_list|)
condition|)
block|{
return|return
operator|new
name|ActiveMQQueue
argument_list|()
return|;
block|}
elseif|else
if|if
condition|(
name|DtoAuthenticationUser
operator|.
name|class
operator|.
name|isAssignableFrom
argument_list|(
name|elementContent
operator|.
name|getClass
argument_list|()
argument_list|)
condition|)
block|{
return|return
operator|new
name|AuthenticationUser
argument_list|()
return|;
block|}
elseif|else
if|if
condition|(
name|DtoFilteredDestination
operator|.
name|class
operator|.
name|isAssignableFrom
argument_list|(
name|elementContent
operator|.
name|getClass
argument_list|()
argument_list|)
condition|)
block|{
return|return
operator|new
name|FilteredDestination
argument_list|()
return|;
block|}
else|else
block|{
return|return
operator|new
name|Object
argument_list|()
return|;
block|}
block|}
specifier|public
specifier|static
name|Object
name|matchType
parameter_list|(
name|List
argument_list|<
name|Object
argument_list|>
name|parameterValues
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|aClass
parameter_list|)
block|{
name|Object
name|result
init|=
name|parameterValues
decl_stmt|;
if|if
condition|(
name|Set
operator|.
name|class
operator|.
name|isAssignableFrom
argument_list|(
name|aClass
argument_list|)
condition|)
block|{
name|result
operator|=
operator|new
name|HashSet
argument_list|(
name|parameterValues
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
block|}
end_class

end_unit

