begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|kahadb
operator|.
name|store
operator|.
name|perf
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|perf
operator|.
name|SimpleQueueTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|kahadb
operator|.
name|replication
operator|.
name|ClusterState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|kahadb
operator|.
name|replication
operator|.
name|ReplicationService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|kahadb
operator|.
name|replication
operator|.
name|StaticClusterStateManager
import|;
end_import

begin_comment
comment|/**  * @version $Revision: 712224 $  */
end_comment

begin_class
specifier|public
class|class
name|ReplicatedKahaStoreQueueTest
extends|extends
name|SimpleQueueTest
block|{
specifier|private
name|StaticClusterStateManager
name|cluster
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|BROKER1_REPLICATION_ID
init|=
literal|"kdbr://localhost:60001"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|BROKER2_REPLICATION_ID
init|=
literal|"kdbr://localhost:60002"
decl_stmt|;
specifier|protected
name|String
name|broker2BindAddress
init|=
literal|"tcp://localhost:61617"
decl_stmt|;
specifier|private
name|ReplicationService
name|rs1
decl_stmt|;
specifier|private
name|ReplicationService
name|rs2
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|BrokerService
name|createBroker
parameter_list|(
name|String
name|uri
parameter_list|)
throws|throws
name|Exception
block|{
name|clientURI
operator|=
literal|"failover:("
operator|+
literal|"tcp://localhost:61616?wireFormat.cacheEnabled=true&wireFormat.tightEncodingEnabled=true&wireFormat.maxInactivityDuration=50000"
operator|+
literal|","
operator|+
literal|"tcp://localhost:61617?wireFormat.cacheEnabled=true&wireFormat.tightEncodingEnabled=true&wireFormat.maxInactivityDuration=50000"
operator|+
literal|")?jms.useAsyncSend=true"
expr_stmt|;
comment|// This cluster object will control who becomes the master.
name|cluster
operator|=
operator|new
name|StaticClusterStateManager
argument_list|()
expr_stmt|;
name|ClusterState
name|clusterState
init|=
operator|new
name|ClusterState
argument_list|()
decl_stmt|;
name|clusterState
operator|.
name|setMaster
argument_list|(
name|BROKER1_REPLICATION_ID
argument_list|)
expr_stmt|;
name|String
index|[]
name|slaves
init|=
block|{
name|BROKER2_REPLICATION_ID
block|}
decl_stmt|;
name|clusterState
operator|.
name|setSlaves
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|slaves
argument_list|)
argument_list|)
expr_stmt|;
name|cluster
operator|.
name|setClusterState
argument_list|(
name|clusterState
argument_list|)
expr_stmt|;
name|rs1
operator|=
operator|new
name|ReplicationService
argument_list|()
expr_stmt|;
name|rs1
operator|.
name|setUri
argument_list|(
name|BROKER1_REPLICATION_ID
argument_list|)
expr_stmt|;
name|rs1
operator|.
name|setCluster
argument_list|(
name|cluster
argument_list|)
expr_stmt|;
name|rs1
operator|.
name|setDirectory
argument_list|(
operator|new
name|File
argument_list|(
literal|"target/replication-test/broker1"
argument_list|)
argument_list|)
expr_stmt|;
name|rs1
operator|.
name|setBrokerURI
argument_list|(
literal|"broker://("
operator|+
name|uri
operator|+
literal|")/broker1"
argument_list|)
expr_stmt|;
name|rs1
operator|.
name|start
argument_list|()
expr_stmt|;
name|rs2
operator|=
operator|new
name|ReplicationService
argument_list|()
expr_stmt|;
name|rs2
operator|.
name|setUri
argument_list|(
name|BROKER2_REPLICATION_ID
argument_list|)
expr_stmt|;
name|rs2
operator|.
name|setCluster
argument_list|(
name|cluster
argument_list|)
expr_stmt|;
name|rs2
operator|.
name|setDirectory
argument_list|(
operator|new
name|File
argument_list|(
literal|"target/replication-test/broker2"
argument_list|)
argument_list|)
expr_stmt|;
name|rs2
operator|.
name|setBrokerURI
argument_list|(
literal|"broker://("
operator|+
name|broker2BindAddress
operator|+
literal|")/broker2"
argument_list|)
expr_stmt|;
name|rs2
operator|.
name|start
argument_list|()
expr_stmt|;
return|return
name|rs1
operator|.
name|getBrokerService
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|rs1
operator|!=
literal|null
condition|)
block|{
name|rs1
operator|.
name|stop
argument_list|()
expr_stmt|;
name|rs1
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
name|rs2
operator|!=
literal|null
condition|)
block|{
name|rs2
operator|.
name|stop
argument_list|()
expr_stmt|;
name|rs2
operator|=
literal|null
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

