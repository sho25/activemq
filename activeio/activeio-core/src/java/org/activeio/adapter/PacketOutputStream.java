begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Copyright 2004 The Apache Software Foundation  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|activeio
operator|.
name|adapter
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activeio
operator|.
name|packet
operator|.
name|Packet
import|;
end_import

begin_comment
comment|/**  * Provides an OutputStream for a given Packet.  *    * @version $Revision$  */
end_comment

begin_class
specifier|public
class|class
name|PacketOutputStream
extends|extends
name|OutputStream
block|{
specifier|final
name|Packet
name|packet
decl_stmt|;
specifier|public
name|PacketOutputStream
parameter_list|(
name|Packet
name|packet
parameter_list|)
block|{
name|this
operator|.
name|packet
operator|=
name|packet
expr_stmt|;
block|}
specifier|public
name|void
name|write
parameter_list|(
name|int
name|b
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|!
name|packet
operator|.
name|write
argument_list|(
name|b
argument_list|)
condition|)
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Packet does not have any remaining space to write to."
argument_list|)
throw|;
block|}
specifier|public
name|void
name|write
parameter_list|(
name|byte
index|[]
name|b
parameter_list|,
name|int
name|off
parameter_list|,
name|int
name|len
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|packet
operator|.
name|write
argument_list|(
name|b
argument_list|,
name|off
argument_list|,
name|len
argument_list|)
operator|!=
name|len
condition|)
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Packet does not have "
operator|+
name|len
operator|+
literal|" byte(s) left to write to."
argument_list|)
throw|;
block|}
block|}
end_class

end_unit

