begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Copyright 2005-2006 The Apache Software Foundation  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|tool
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|tool
operator|.
name|properties
operator|.
name|JmsClientProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|ConnectionFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|JMSException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Destination
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Enumeration
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractJmsClient
block|{
specifier|private
specifier|static
specifier|final
name|Log
name|log
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|AbstractJmsClient
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
name|ConnectionFactory
name|factory
decl_stmt|;
specifier|protected
name|Connection
name|jmsConnection
decl_stmt|;
specifier|protected
name|Session
name|jmsSession
decl_stmt|;
specifier|protected
name|int
name|destCount
init|=
literal|1
decl_stmt|,
name|destIndex
init|=
literal|0
decl_stmt|;
specifier|protected
name|String
name|clientName
init|=
literal|""
decl_stmt|;
specifier|public
name|AbstractJmsClient
parameter_list|(
name|ConnectionFactory
name|factory
parameter_list|)
block|{
name|this
operator|.
name|factory
operator|=
name|factory
expr_stmt|;
block|}
specifier|abstract
specifier|public
name|JmsClientProperties
name|getClient
parameter_list|()
function_decl|;
specifier|abstract
specifier|public
name|void
name|setClient
parameter_list|(
name|JmsClientProperties
name|client
parameter_list|)
function_decl|;
specifier|public
name|ConnectionFactory
name|getFactory
parameter_list|()
block|{
return|return
name|factory
return|;
block|}
specifier|public
name|void
name|setFactory
parameter_list|(
name|ConnectionFactory
name|factory
parameter_list|)
block|{
name|this
operator|.
name|factory
operator|=
name|factory
expr_stmt|;
block|}
specifier|public
name|int
name|getDestCount
parameter_list|()
block|{
return|return
name|destCount
return|;
block|}
specifier|public
name|void
name|setDestCount
parameter_list|(
name|int
name|destCount
parameter_list|)
block|{
name|this
operator|.
name|destCount
operator|=
name|destCount
expr_stmt|;
block|}
specifier|public
name|int
name|getDestIndex
parameter_list|()
block|{
return|return
name|destIndex
return|;
block|}
specifier|public
name|void
name|setDestIndex
parameter_list|(
name|int
name|destIndex
parameter_list|)
block|{
name|this
operator|.
name|destIndex
operator|=
name|destIndex
expr_stmt|;
block|}
specifier|public
name|String
name|getClientName
parameter_list|()
block|{
return|return
name|clientName
return|;
block|}
specifier|public
name|void
name|setClientName
parameter_list|(
name|String
name|clientName
parameter_list|)
block|{
name|this
operator|.
name|clientName
operator|=
name|clientName
expr_stmt|;
block|}
specifier|public
name|Connection
name|getConnection
parameter_list|()
throws|throws
name|JMSException
block|{
if|if
condition|(
name|jmsConnection
operator|==
literal|null
condition|)
block|{
name|jmsConnection
operator|=
name|factory
operator|.
name|createConnection
argument_list|()
expr_stmt|;
name|jmsConnection
operator|.
name|setClientID
argument_list|(
name|getClientName
argument_list|()
argument_list|)
expr_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"Creating JMS Connection: Provider="
operator|+
name|getClient
argument_list|()
operator|.
name|getJmsProvider
argument_list|()
operator|+
literal|", JMS Spec="
operator|+
name|getClient
argument_list|()
operator|.
name|getJmsVersion
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|jmsConnection
return|;
block|}
specifier|public
name|Session
name|getSession
parameter_list|()
throws|throws
name|JMSException
block|{
if|if
condition|(
name|jmsSession
operator|==
literal|null
condition|)
block|{
name|int
name|ackMode
decl_stmt|;
if|if
condition|(
name|getClient
argument_list|()
operator|.
name|getSessAckMode
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
name|JmsClientProperties
operator|.
name|SESSION_AUTO_ACKNOWLEDGE
argument_list|)
condition|)
block|{
name|ackMode
operator|=
name|Session
operator|.
name|AUTO_ACKNOWLEDGE
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|getClient
argument_list|()
operator|.
name|getSessAckMode
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
name|JmsClientProperties
operator|.
name|SESSION_CLIENT_ACKNOWLEDGE
argument_list|)
condition|)
block|{
name|ackMode
operator|=
name|Session
operator|.
name|CLIENT_ACKNOWLEDGE
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|getClient
argument_list|()
operator|.
name|getSessAckMode
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
name|JmsClientProperties
operator|.
name|SESSION_DUPS_OK_ACKNOWLEDGE
argument_list|)
condition|)
block|{
name|ackMode
operator|=
name|Session
operator|.
name|DUPS_OK_ACKNOWLEDGE
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|getClient
argument_list|()
operator|.
name|getSessAckMode
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
name|JmsClientProperties
operator|.
name|SESSION_TRANSACTED
argument_list|)
condition|)
block|{
name|ackMode
operator|=
name|Session
operator|.
name|SESSION_TRANSACTED
expr_stmt|;
block|}
else|else
block|{
name|ackMode
operator|=
name|Session
operator|.
name|AUTO_ACKNOWLEDGE
expr_stmt|;
block|}
name|jmsSession
operator|=
name|getConnection
argument_list|()
operator|.
name|createSession
argument_list|(
name|getClient
argument_list|()
operator|.
name|isSessTransacted
argument_list|()
argument_list|,
name|ackMode
argument_list|)
expr_stmt|;
block|}
return|return
name|jmsSession
return|;
block|}
specifier|public
name|Destination
index|[]
name|createDestination
parameter_list|(
name|int
name|destIndex
parameter_list|,
name|int
name|destCount
parameter_list|)
throws|throws
name|JMSException
block|{
if|if
condition|(
name|getClient
argument_list|()
operator|.
name|isDestComposite
argument_list|()
condition|)
block|{
return|return
operator|new
name|Destination
index|[]
block|{
name|createCompositeDestination
argument_list|(
name|getClient
argument_list|()
operator|.
name|getDestName
argument_list|()
argument_list|,
name|destIndex
argument_list|,
name|destCount
argument_list|)
block|}
return|;
block|}
else|else
block|{
name|Destination
index|[]
name|dest
init|=
operator|new
name|Destination
index|[
name|destCount
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|destCount
condition|;
name|i
operator|++
control|)
block|{
name|dest
index|[
name|i
index|]
operator|=
name|createDestination
argument_list|(
name|getClient
argument_list|()
operator|.
name|getDestName
argument_list|()
operator|+
literal|"."
operator|+
operator|(
name|destIndex
operator|+
name|i
operator|)
argument_list|)
expr_stmt|;
block|}
return|return
name|dest
return|;
block|}
block|}
specifier|public
name|Destination
name|createCompositeDestination
parameter_list|(
name|int
name|destIndex
parameter_list|,
name|int
name|destCount
parameter_list|)
throws|throws
name|JMSException
block|{
return|return
name|createCompositeDestination
argument_list|(
name|getClient
argument_list|()
operator|.
name|getDestName
argument_list|()
argument_list|,
name|destIndex
argument_list|,
name|destCount
argument_list|)
return|;
block|}
specifier|protected
name|Destination
name|createCompositeDestination
parameter_list|(
name|String
name|name
parameter_list|,
name|int
name|destIndex
parameter_list|,
name|int
name|destCount
parameter_list|)
throws|throws
name|JMSException
block|{
name|String
name|compDestName
decl_stmt|;
name|String
name|simpleName
decl_stmt|;
if|if
condition|(
name|name
operator|.
name|startsWith
argument_list|(
literal|"queue://"
argument_list|)
condition|)
block|{
name|simpleName
operator|=
name|name
operator|.
name|substring
argument_list|(
literal|"queue://"
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|name
operator|.
name|startsWith
argument_list|(
literal|"topic://"
argument_list|)
condition|)
block|{
name|simpleName
operator|=
name|name
operator|.
name|substring
argument_list|(
literal|"topic://"
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|simpleName
operator|=
name|name
expr_stmt|;
block|}
name|int
name|i
decl_stmt|;
name|compDestName
operator|=
name|name
operator|+
literal|"."
operator|+
name|destIndex
operator|+
literal|","
expr_stmt|;
comment|// First destination
for|for
control|(
name|i
operator|=
literal|1
init|;
name|i
operator|<
name|destCount
operator|-
literal|1
condition|;
name|i
operator|++
control|)
block|{
name|compDestName
operator|+=
operator|(
name|simpleName
operator|+
literal|"."
operator|+
operator|(
name|destIndex
operator|+
name|i
operator|)
operator|+
literal|","
operator|)
expr_stmt|;
block|}
name|compDestName
operator|+=
operator|(
name|simpleName
operator|+
literal|"."
operator|+
operator|(
name|destIndex
operator|+
name|i
operator|)
operator|)
expr_stmt|;
comment|// Last destination (minus the comma)
return|return
name|createDestination
argument_list|(
name|compDestName
argument_list|)
return|;
block|}
specifier|protected
name|Destination
name|createDestination
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|JMSException
block|{
if|if
condition|(
name|name
operator|.
name|startsWith
argument_list|(
literal|"queue://"
argument_list|)
condition|)
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createQueue
argument_list|(
name|name
operator|.
name|substring
argument_list|(
literal|"queue://"
operator|.
name|length
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|name
operator|.
name|startsWith
argument_list|(
literal|"topic://"
argument_list|)
condition|)
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createTopic
argument_list|(
name|name
operator|.
name|substring
argument_list|(
literal|"topic://"
operator|.
name|length
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createTopic
argument_list|(
name|name
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

