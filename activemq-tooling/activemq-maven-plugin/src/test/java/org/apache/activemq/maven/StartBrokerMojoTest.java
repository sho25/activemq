begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|maven
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|TransportConnector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|model
operator|.
name|Build
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|plugin
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|project
operator|.
name|MavenProject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_class
specifier|public
class|class
name|StartBrokerMojoTest
block|{
comment|/**      * Main object-under-test; configured with mocks and defaults.      */
specifier|private
name|StartBrokerMojo
name|startBrokerMojo
decl_stmt|;
comment|/**      * Secondary object-under-test primarily for setter/getter testing; available for all tests without any      * configuration (i.e. raw).      */
specifier|private
name|StartBrokerMojo
name|startBrokerMojoRaw
decl_stmt|;
comment|////
comment|// MOCKS
comment|////
specifier|private
name|MavenProject
name|mockMavenProject
decl_stmt|;
specifier|private
name|Build
name|mockBuild
decl_stmt|;
specifier|private
name|Properties
name|mockMavenProperties
decl_stmt|;
specifier|private
name|MavenBrokerManager
name|mockBrokerManager
decl_stmt|;
specifier|private
name|XBeanFileResolver
name|mockXbeanFileResolver
decl_stmt|;
specifier|private
name|BrokerService
name|mockBrokerService
decl_stmt|;
specifier|private
name|Log
name|mockMavenLog
decl_stmt|;
comment|////
comment|// Test Objects
comment|////
specifier|private
name|Properties
name|systemProperties
decl_stmt|;
specifier|private
name|List
argument_list|<
name|TransportConnector
argument_list|>
name|transportConnectorList
decl_stmt|;
specifier|private
name|Exception
name|testException
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setupTest
parameter_list|()
block|{
comment|//
comment|// Create the objects-under-test
comment|//
name|this
operator|.
name|startBrokerMojo
operator|=
operator|new
name|StartBrokerMojo
argument_list|()
expr_stmt|;
name|this
operator|.
name|startBrokerMojoRaw
operator|=
operator|new
name|StartBrokerMojo
argument_list|()
expr_stmt|;
comment|//
comment|// Create mocks
comment|//
name|this
operator|.
name|mockMavenProject
operator|=
name|Mockito
operator|.
name|mock
argument_list|(
name|MavenProject
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|mockBuild
operator|=
name|Mockito
operator|.
name|mock
argument_list|(
name|Build
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|mockMavenProperties
operator|=
name|Mockito
operator|.
name|mock
argument_list|(
name|Properties
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|mockBrokerManager
operator|=
name|Mockito
operator|.
name|mock
argument_list|(
name|MavenBrokerManager
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|mockXbeanFileResolver
operator|=
name|Mockito
operator|.
name|mock
argument_list|(
name|XBeanFileResolver
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|mockBrokerService
operator|=
name|Mockito
operator|.
name|mock
argument_list|(
name|BrokerService
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|mockMavenLog
operator|=
name|Mockito
operator|.
name|mock
argument_list|(
name|Log
operator|.
name|class
argument_list|)
expr_stmt|;
comment|//
comment|// Prepare other test objects and configure the object-under-test.
comment|//
name|this
operator|.
name|transportConnectorList
operator|=
operator|new
name|LinkedList
argument_list|<
name|TransportConnector
argument_list|>
argument_list|()
expr_stmt|;
name|this
operator|.
name|systemProperties
operator|=
operator|new
name|Properties
argument_list|()
expr_stmt|;
name|this
operator|.
name|testException
operator|=
operator|new
name|Exception
argument_list|(
literal|"x-test-exc-x"
argument_list|)
expr_stmt|;
name|this
operator|.
name|startBrokerMojo
operator|.
name|setBrokerManager
argument_list|(
name|this
operator|.
name|mockBrokerManager
argument_list|)
expr_stmt|;
name|this
operator|.
name|startBrokerMojo
operator|.
name|setxBeanFileResolver
argument_list|(
name|this
operator|.
name|mockXbeanFileResolver
argument_list|)
expr_stmt|;
name|this
operator|.
name|startBrokerMojo
operator|.
name|setProject
argument_list|(
name|this
operator|.
name|mockMavenProject
argument_list|)
expr_stmt|;
name|this
operator|.
name|startBrokerMojo
operator|.
name|setConnectorPropertyNameFormat
argument_list|(
literal|"x-name-%s"
argument_list|)
expr_stmt|;
name|this
operator|.
name|startBrokerMojo
operator|.
name|setConfigUri
argument_list|(
literal|"x-config-uri-x"
argument_list|)
expr_stmt|;
name|this
operator|.
name|startBrokerMojo
operator|.
name|setFork
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|this
operator|.
name|startBrokerMojo
operator|.
name|setSystemProperties
argument_list|(
name|this
operator|.
name|systemProperties
argument_list|)
expr_stmt|;
name|this
operator|.
name|startBrokerMojo
operator|.
name|setLog
argument_list|(
name|this
operator|.
name|mockMavenLog
argument_list|)
expr_stmt|;
comment|//
comment|// Define standard mock interactions.
comment|//
name|Mockito
operator|.
name|when
argument_list|(
name|this
operator|.
name|mockBrokerManager
operator|.
name|getBroker
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|this
operator|.
name|mockBrokerService
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|this
operator|.
name|mockMavenProject
operator|.
name|getProperties
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|this
operator|.
name|mockMavenProperties
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|this
operator|.
name|mockMavenProject
operator|.
name|getBuild
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|this
operator|.
name|mockBuild
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|this
operator|.
name|mockBuild
operator|.
name|getDirectory
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"x-proj-dir-x"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|this
operator|.
name|mockBrokerService
operator|.
name|getTransportConnectors
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|transportConnectorList
argument_list|)
expr_stmt|;
block|}
comment|/**      * Test the setter and getter for propertyNameFormat.      */
annotation|@
name|Test
specifier|public
name|void
name|testSetGetConnectorPropertyNameFormat
parameter_list|()
block|{
name|assertEquals
argument_list|(
name|StartBrokerMojo
operator|.
name|DEFAULT_CONNECTOR_PROPERTY_NAME_FORMAT
argument_list|,
name|this
operator|.
name|startBrokerMojoRaw
operator|.
name|getConnectorPropertyNameFormat
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|startBrokerMojoRaw
operator|.
name|setConnectorPropertyNameFormat
argument_list|(
literal|"x-name-format-x"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"x-name-format-x"
argument_list|,
name|this
operator|.
name|startBrokerMojoRaw
operator|.
name|getConnectorPropertyNameFormat
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Test the setter and getter for configUri.      */
annotation|@
name|Test
specifier|public
name|void
name|testSetGetConfigUri
parameter_list|()
block|{
name|assertNull
argument_list|(
name|this
operator|.
name|startBrokerMojoRaw
operator|.
name|getConfigUri
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|startBrokerMojoRaw
operator|.
name|setConfigUri
argument_list|(
literal|"x-config-uri-x"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"x-config-uri-x"
argument_list|,
name|this
operator|.
name|startBrokerMojoRaw
operator|.
name|getConfigUri
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Test the setter and getter for mavenProject.      */
annotation|@
name|Test
specifier|public
name|void
name|testSetGetMavenProject
parameter_list|()
block|{
name|assertNull
argument_list|(
name|this
operator|.
name|startBrokerMojoRaw
operator|.
name|getProject
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|startBrokerMojoRaw
operator|.
name|setProject
argument_list|(
name|this
operator|.
name|mockMavenProject
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|this
operator|.
name|mockMavenProject
argument_list|,
name|this
operator|.
name|startBrokerMojoRaw
operator|.
name|getProject
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Test the setter and getter for fork.      */
annotation|@
name|Test
specifier|public
name|void
name|testSetGetFork
parameter_list|()
block|{
name|assertFalse
argument_list|(
name|this
operator|.
name|startBrokerMojoRaw
operator|.
name|isFork
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|startBrokerMojoRaw
operator|.
name|setFork
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|this
operator|.
name|startBrokerMojoRaw
operator|.
name|isFork
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Test the setter and getter for skip.      */
annotation|@
name|Test
specifier|public
name|void
name|testSetGetSkip
parameter_list|()
block|{
name|assertFalse
argument_list|(
name|this
operator|.
name|startBrokerMojoRaw
operator|.
name|isSkip
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|startBrokerMojoRaw
operator|.
name|setSkip
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|this
operator|.
name|startBrokerMojoRaw
operator|.
name|isSkip
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Test the setter and getter for systemProperties.      */
annotation|@
name|Test
specifier|public
name|void
name|testSetGetSystemProperties
parameter_list|()
block|{
name|assertNull
argument_list|(
name|this
operator|.
name|startBrokerMojoRaw
operator|.
name|getSystemProperties
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|startBrokerMojoRaw
operator|.
name|setSystemProperties
argument_list|(
name|this
operator|.
name|systemProperties
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|this
operator|.
name|systemProperties
argument_list|,
name|this
operator|.
name|startBrokerMojoRaw
operator|.
name|getSystemProperties
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Test the setter and getter for brokerManager.      */
annotation|@
name|Test
specifier|public
name|void
name|testSetGetBrokerManager
parameter_list|()
block|{
name|assertNull
argument_list|(
name|this
operator|.
name|startBrokerMojoRaw
operator|.
name|getBrokerManager
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|startBrokerMojoRaw
operator|.
name|setBrokerManager
argument_list|(
name|this
operator|.
name|mockBrokerManager
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|this
operator|.
name|mockBrokerManager
argument_list|,
name|this
operator|.
name|startBrokerMojoRaw
operator|.
name|getBrokerManager
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Test the setter and getter for xbeanFileResolver.      */
annotation|@
name|Test
specifier|public
name|void
name|testSetGetXbeanFileResolver
parameter_list|()
block|{
name|assertTrue
argument_list|(
name|this
operator|.
name|startBrokerMojoRaw
operator|.
name|getxBeanFileResolver
argument_list|()
operator|instanceof
name|XBeanFileResolver
argument_list|)
expr_stmt|;
name|assertNotSame
argument_list|(
name|this
operator|.
name|mockXbeanFileResolver
argument_list|,
name|this
operator|.
name|startBrokerMojoRaw
operator|.
name|getxBeanFileResolver
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|startBrokerMojoRaw
operator|.
name|setxBeanFileResolver
argument_list|(
name|this
operator|.
name|mockXbeanFileResolver
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|this
operator|.
name|mockXbeanFileResolver
argument_list|,
name|this
operator|.
name|startBrokerMojoRaw
operator|.
name|getxBeanFileResolver
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Test normal execution of the mojo leads to startup of the broker.      *      * @throws Exception      */
annotation|@
name|Test
specifier|public
name|void
name|testExecute
parameter_list|()
throws|throws
name|Exception
block|{
name|this
operator|.
name|startBrokerMojo
operator|.
name|execute
argument_list|()
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|this
operator|.
name|mockBrokerManager
argument_list|)
operator|.
name|start
argument_list|(
literal|false
argument_list|,
literal|"x-config-uri-x"
argument_list|)
expr_stmt|;
block|}
comment|/**      * Test the registration of a single transport connector URI when a broker with only one connector is started.      */
annotation|@
name|Test
specifier|public
name|void
name|testExecuteRegistersTransportConnectorOneUri
parameter_list|()
throws|throws
name|Exception
block|{
name|this
operator|.
name|startBrokerMojo
operator|.
name|setProject
argument_list|(
name|this
operator|.
name|mockMavenProject
argument_list|)
expr_stmt|;
name|this
operator|.
name|createTestTransportConnectors
argument_list|(
literal|"openwire-client"
argument_list|)
expr_stmt|;
name|this
operator|.
name|startBrokerMojo
operator|.
name|execute
argument_list|()
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|this
operator|.
name|mockMavenProperties
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"x-name-openwire-client"
argument_list|,
literal|"x-pub-addr-for-openwire-client"
argument_list|)
expr_stmt|;
block|}
comment|/**      * Test the registration of multiple transport connector URIs when a broker with multiple connectors is started.      *      * @throws Exception      */
annotation|@
name|Test
specifier|public
name|void
name|testExecuteRegistersTransportConnectorMultiUri
parameter_list|()
throws|throws
name|Exception
block|{
name|this
operator|.
name|createTestTransportConnectors
argument_list|(
literal|"connector1"
argument_list|,
literal|"connector2"
argument_list|,
literal|"connector3"
argument_list|)
expr_stmt|;
name|this
operator|.
name|startBrokerMojo
operator|.
name|execute
argument_list|()
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|this
operator|.
name|mockMavenProperties
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"x-name-connector1"
argument_list|,
literal|"x-pub-addr-for-connector1"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|this
operator|.
name|mockMavenProperties
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"x-name-connector2"
argument_list|,
literal|"x-pub-addr-for-connector2"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|this
operator|.
name|mockMavenProperties
argument_list|)
operator|.
name|setProperty
argument_list|(
literal|"x-name-connector3"
argument_list|,
literal|"x-pub-addr-for-connector3"
argument_list|)
expr_stmt|;
block|}
comment|/**      * Test handling when TransportConnector.getPublishableConnectString() throws an exception.      *      * @throws Exception      */
annotation|@
name|Test
specifier|public
name|void
name|testExceptionOnGetPublishableConnectString
parameter_list|()
throws|throws
name|Exception
block|{
name|TransportConnector
name|mockTransportConnector
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|TransportConnector
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockTransportConnector
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"x-conn-x"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockTransportConnector
operator|.
name|getPublishableConnectString
argument_list|()
argument_list|)
operator|.
name|thenThrow
argument_list|(
name|testException
argument_list|)
expr_stmt|;
name|this
operator|.
name|transportConnectorList
operator|.
name|add
argument_list|(
name|mockTransportConnector
argument_list|)
expr_stmt|;
name|this
operator|.
name|startBrokerMojo
operator|.
name|execute
argument_list|()
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|this
operator|.
name|mockMavenLog
argument_list|)
operator|.
name|warn
argument_list|(
literal|"error on obtaining broker connector uri; connector=x-conn-x"
argument_list|,
name|this
operator|.
name|testException
argument_list|)
expr_stmt|;
block|}
comment|/**      * Test that an xbean configuration file URI is transformed on use.      *      * @throws Exception      */
annotation|@
name|Test
specifier|public
name|void
name|testUseXbeanConfigFile
parameter_list|()
throws|throws
name|Exception
block|{
name|Mockito
operator|.
name|when
argument_list|(
name|this
operator|.
name|mockXbeanFileResolver
operator|.
name|isXBeanFile
argument_list|(
literal|"x-config-uri-x"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|this
operator|.
name|mockXbeanFileResolver
operator|.
name|toUrlCompliantAbsolutePath
argument_list|(
literal|"x-config-uri-x"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"x-transformed-uri-x"
argument_list|)
expr_stmt|;
name|this
operator|.
name|startBrokerMojo
operator|.
name|execute
argument_list|()
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|this
operator|.
name|mockMavenLog
argument_list|)
operator|.
name|debug
argument_list|(
literal|"configUri before transformation: x-config-uri-x"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|this
operator|.
name|mockMavenLog
argument_list|)
operator|.
name|debug
argument_list|(
literal|"configUri after transformation: x-transformed-uri-x"
argument_list|)
expr_stmt|;
block|}
comment|/**      * Test that a URI that does not represent an xbean configuration file is not translated.      *      * @throws Exception      */
annotation|@
name|Test
specifier|public
name|void
name|testDoNotUseXbeanConfigFile
parameter_list|()
throws|throws
name|Exception
block|{
name|Mockito
operator|.
name|when
argument_list|(
name|this
operator|.
name|mockXbeanFileResolver
operator|.
name|isXBeanFile
argument_list|(
literal|"x-config-uri-x"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|this
operator|.
name|startBrokerMojo
operator|.
name|execute
argument_list|()
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|this
operator|.
name|mockMavenLog
argument_list|,
name|Mockito
operator|.
name|times
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|debug
argument_list|(
literal|"configUri before transformation: x-config-uri-x"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|this
operator|.
name|mockMavenLog
argument_list|,
name|Mockito
operator|.
name|times
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|debug
argument_list|(
literal|"configUri after transformation: x-transformed-uri-x"
argument_list|)
expr_stmt|;
block|}
comment|/**      * Test that execution of the mojo is skipped if so configured.      *      * @throws Exception      */
annotation|@
name|Test
specifier|public
name|void
name|testSkip
parameter_list|()
throws|throws
name|Exception
block|{
name|this
operator|.
name|startBrokerMojo
operator|.
name|setSkip
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|this
operator|.
name|startBrokerMojo
operator|.
name|execute
argument_list|()
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|this
operator|.
name|mockMavenLog
argument_list|)
operator|.
name|info
argument_list|(
literal|"Skipped execution of ActiveMQ Broker"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verifyNoMoreInteractions
argument_list|(
name|this
operator|.
name|mockBrokerManager
argument_list|)
expr_stmt|;
block|}
comment|/**      * Add mock, test transport connectors with the given names.      *      * @param connectorNames names of the mock connectors to add for the test.      * @throws Exception      */
specifier|protected
name|void
name|createTestTransportConnectors
parameter_list|(
name|String
modifier|...
name|connectorNames
parameter_list|)
throws|throws
name|Exception
block|{
for|for
control|(
name|String
name|oneConnectorName
range|:
name|connectorNames
control|)
block|{
comment|//
comment|// Mock the connector
comment|//
name|TransportConnector
name|mockConnector
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|TransportConnector
operator|.
name|class
argument_list|)
decl_stmt|;
comment|//
comment|// Return the connector name on getName() and a unique string on getPublishableConnectString().
comment|//
name|Mockito
operator|.
name|when
argument_list|(
name|mockConnector
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|oneConnectorName
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockConnector
operator|.
name|getPublishableConnectString
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"x-pub-addr-for-"
operator|+
name|oneConnectorName
argument_list|)
expr_stmt|;
comment|//
comment|// Add to the test connector list.
comment|//
name|this
operator|.
name|transportConnectorList
operator|.
name|add
argument_list|(
name|mockConnector
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

