begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|plugin
operator|.
name|jmx
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|plugin
operator|.
name|RuntimeConfigurationBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|core
operator|.
name|io
operator|.
name|Resource
import|;
end_import

begin_class
specifier|public
class|class
name|RuntimeConfigurationView
implements|implements
name|RuntimeConfigurationViewMBean
block|{
specifier|private
specifier|final
name|RuntimeConfigurationBroker
name|runtimeConfigurationBroker
decl_stmt|;
specifier|public
name|RuntimeConfigurationView
parameter_list|(
name|RuntimeConfigurationBroker
name|runtimeConfigurationBroker
parameter_list|)
block|{
name|this
operator|.
name|runtimeConfigurationBroker
operator|=
name|runtimeConfigurationBroker
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getUrl
parameter_list|()
block|{
name|Resource
name|value
init|=
name|runtimeConfigurationBroker
operator|.
name|getConfigToMonitor
argument_list|()
decl_stmt|;
return|return
name|value
operator|!=
literal|null
condition|?
name|value
operator|.
name|toString
argument_list|()
else|:
literal|"null"
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getModified
parameter_list|()
block|{
name|long
name|lastModified
init|=
name|runtimeConfigurationBroker
operator|.
name|getLastModified
argument_list|()
decl_stmt|;
if|if
condition|(
name|lastModified
operator|>
literal|0
condition|)
block|{
return|return
operator|new
name|Date
argument_list|(
name|lastModified
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
return|return
literal|"unknown"
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getCheckPeriod
parameter_list|()
block|{
return|return
name|String
operator|.
name|valueOf
argument_list|(
name|runtimeConfigurationBroker
operator|.
name|getCheckPeriod
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|updateNow
parameter_list|()
block|{
return|return
name|runtimeConfigurationBroker
operator|.
name|updateNow
argument_list|()
return|;
block|}
block|}
end_class

end_unit

