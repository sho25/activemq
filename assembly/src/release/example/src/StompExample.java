begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|stomp
operator|.
name|Stomp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|stomp
operator|.
name|StompConnection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|stomp
operator|.
name|StompFrame
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|stomp
operator|.
name|Stomp
operator|.
name|Headers
operator|.
name|Subscribe
import|;
end_import

begin_comment
comment|/**  *   * This example demonstrates Stomp Java API  *   *   *  */
end_comment

begin_class
specifier|public
class|class
name|StompExample
block|{
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
name|args
index|[]
parameter_list|)
throws|throws
name|Exception
block|{
name|StompConnection
name|connection
init|=
operator|new
name|StompConnection
argument_list|()
decl_stmt|;
name|connection
operator|.
name|open
argument_list|(
literal|"localhost"
argument_list|,
literal|61613
argument_list|)
expr_stmt|;
name|connection
operator|.
name|connect
argument_list|(
literal|"system"
argument_list|,
literal|"manager"
argument_list|)
expr_stmt|;
name|connection
operator|.
name|begin
argument_list|(
literal|"tx1"
argument_list|)
expr_stmt|;
name|connection
operator|.
name|send
argument_list|(
literal|"/queue/test"
argument_list|,
literal|"message1"
argument_list|)
expr_stmt|;
name|connection
operator|.
name|send
argument_list|(
literal|"/queue/test"
argument_list|,
literal|"message2"
argument_list|)
expr_stmt|;
name|connection
operator|.
name|commit
argument_list|(
literal|"tx1"
argument_list|)
expr_stmt|;
name|connection
operator|.
name|subscribe
argument_list|(
literal|"/queue/test"
argument_list|,
name|Subscribe
operator|.
name|AckModeValues
operator|.
name|CLIENT
argument_list|)
expr_stmt|;
name|connection
operator|.
name|begin
argument_list|(
literal|"tx2"
argument_list|)
expr_stmt|;
name|StompFrame
name|message
init|=
name|connection
operator|.
name|receive
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|message
operator|.
name|getBody
argument_list|()
argument_list|)
expr_stmt|;
name|connection
operator|.
name|ack
argument_list|(
name|message
argument_list|,
literal|"tx2"
argument_list|)
expr_stmt|;
name|message
operator|=
name|connection
operator|.
name|receive
argument_list|()
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|message
operator|.
name|getBody
argument_list|()
argument_list|)
expr_stmt|;
name|connection
operator|.
name|ack
argument_list|(
name|message
argument_list|,
literal|"tx2"
argument_list|)
expr_stmt|;
name|connection
operator|.
name|commit
argument_list|(
literal|"tx2"
argument_list|)
expr_stmt|;
name|connection
operator|.
name|disconnect
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

