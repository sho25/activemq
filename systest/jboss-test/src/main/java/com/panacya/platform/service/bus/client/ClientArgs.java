begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**   *   * Copyright 2004 Michael Gaffney  *   * Licensed under the Apache License, Version 2.0 (the "License");   * you may not use this file except in compliance with the License.   * You may obtain a copy of the License at   *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   * See the License for the specific language governing permissions and   * limitations under the License.   *   **/
end_comment

begin_package
package|package
name|com
operator|.
name|panacya
operator|.
name|platform
operator|.
name|service
operator|.
name|bus
operator|.
name|client
package|;
end_package

begin_comment
comment|/**  * @author<a href="mailto:michael.gaffney@panacya.com">Michael Gaffney</a>  */
end_comment

begin_class
specifier|public
class|class
name|ClientArgs
block|{
specifier|private
name|long
name|timeout
init|=
operator|-
literal|1
decl_stmt|;
specifier|private
name|String
name|command
decl_stmt|;
specifier|private
name|String
name|destination
decl_stmt|;
specifier|private
name|int
name|noOfMessages
init|=
literal|1
decl_stmt|;
specifier|public
name|ClientArgs
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
comment|/*         int argCount = args.length;          System.out.println(argCount);         for(int i = 0 ; i< argCount; i++){             System.out.println(args[i] + " ..........");         }          */
switch|switch
condition|(
name|args
operator|.
name|length
condition|)
block|{
case|case
literal|4
case|:
name|setNoOfMessages
argument_list|(
name|args
index|[
literal|3
index|]
argument_list|)
expr_stmt|;
case|case
literal|3
case|:
name|setTimeout
argument_list|(
name|args
index|[
literal|2
index|]
argument_list|)
expr_stmt|;
case|case
literal|2
case|:
name|destination
operator|=
name|args
index|[
literal|1
index|]
expr_stmt|;
name|command
operator|=
name|args
index|[
literal|0
index|]
expr_stmt|;
break|break;
default|default :
name|printHelp
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|String
name|getCommand
parameter_list|()
block|{
return|return
name|command
return|;
block|}
specifier|public
name|String
name|getDestination
parameter_list|()
block|{
return|return
name|destination
return|;
block|}
specifier|public
name|long
name|getTimeout
parameter_list|()
block|{
return|return
name|timeout
return|;
block|}
specifier|private
name|void
name|setTimeout
parameter_list|(
name|String
name|timout
parameter_list|)
block|{
if|if
condition|(
operator|!
name|isEmpty
argument_list|(
name|timout
argument_list|)
condition|)
block|{
try|try
block|{
name|timeout
operator|=
name|Long
operator|.
name|valueOf
argument_list|(
name|timout
argument_list|)
operator|.
name|longValue
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NumberFormatException
name|e
parameter_list|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
name|e
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|int
name|getNoOfMessages
parameter_list|()
block|{
return|return
name|noOfMessages
return|;
block|}
specifier|public
name|void
name|setNoOfMessages
parameter_list|(
name|String
name|count
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"noOfMessage "
operator|+
name|count
argument_list|)
expr_stmt|;
name|this
operator|.
name|noOfMessages
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|count
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|boolean
name|isEmpty
parameter_list|(
name|String
name|value
parameter_list|)
block|{
return|return
name|value
operator|==
literal|null
operator|||
literal|""
operator|.
name|equals
argument_list|(
name|value
operator|.
name|trim
argument_list|()
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|void
name|printHelp
parameter_list|()
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"JmsSimpleClient command(send | receive | send-receive) noOfMessages destination timeout"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

