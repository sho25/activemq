begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|failover
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|DefaultTransportListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|Transport
import|;
end_import

begin_class
class|class
name|BackupTransport
extends|extends
name|DefaultTransportListener
block|{
specifier|private
name|FailoverTransport
name|failoverTransport
decl_stmt|;
specifier|private
name|Transport
name|transport
decl_stmt|;
specifier|private
name|URI
name|uri
decl_stmt|;
specifier|private
name|boolean
name|disposed
decl_stmt|;
name|BackupTransport
parameter_list|(
name|FailoverTransport
name|ft
parameter_list|)
block|{
name|this
operator|.
name|failoverTransport
operator|=
name|ft
expr_stmt|;
block|}
specifier|public
name|void
name|onException
parameter_list|(
name|IOException
name|error
parameter_list|)
block|{
name|this
operator|.
name|disposed
operator|=
literal|true
expr_stmt|;
if|if
condition|(
name|failoverTransport
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|failoverTransport
operator|.
name|reconnect
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|Transport
name|getTransport
parameter_list|()
block|{
return|return
name|transport
return|;
block|}
specifier|public
name|void
name|setTransport
parameter_list|(
name|Transport
name|transport
parameter_list|)
block|{
name|this
operator|.
name|transport
operator|=
name|transport
expr_stmt|;
name|this
operator|.
name|transport
operator|.
name|setTransportListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
specifier|public
name|URI
name|getUri
parameter_list|()
block|{
return|return
name|uri
return|;
block|}
specifier|public
name|void
name|setUri
parameter_list|(
name|URI
name|uri
parameter_list|)
block|{
name|this
operator|.
name|uri
operator|=
name|uri
expr_stmt|;
block|}
specifier|public
name|boolean
name|isDisposed
parameter_list|()
block|{
return|return
name|disposed
operator|||
name|transport
operator|!=
literal|null
operator|&&
name|transport
operator|.
name|isDisposed
argument_list|()
return|;
block|}
specifier|public
name|void
name|setDisposed
parameter_list|(
name|boolean
name|disposed
parameter_list|)
block|{
name|this
operator|.
name|disposed
operator|=
name|disposed
expr_stmt|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|uri
operator|!=
literal|null
condition|?
name|uri
operator|.
name|hashCode
argument_list|()
else|:
operator|-
literal|1
return|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|instanceof
name|BackupTransport
condition|)
block|{
name|BackupTransport
name|other
init|=
operator|(
name|BackupTransport
operator|)
name|obj
decl_stmt|;
return|return
name|uri
operator|==
literal|null
operator|&&
name|other
operator|.
name|uri
operator|==
literal|null
operator|||
operator|(
name|uri
operator|!=
literal|null
operator|&&
name|other
operator|.
name|uri
operator|!=
literal|null
operator|&&
name|uri
operator|.
name|equals
argument_list|(
name|other
operator|.
name|uri
argument_list|)
operator|)
return|;
block|}
return|return
literal|false
return|;
block|}
block|}
end_class

end_unit

