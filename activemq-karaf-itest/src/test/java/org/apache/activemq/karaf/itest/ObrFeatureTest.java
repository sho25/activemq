begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|karaf
operator|.
name|itest
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|karaf
operator|.
name|options
operator|.
name|KarafDistributionOption
operator|.
name|editConfigurationFilePut
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|CoreOptions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|MavenUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|Option
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|junit
operator|.
name|PaxExam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|Bundle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|ServiceReference
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|PaxExam
operator|.
name|class
argument_list|)
specifier|public
class|class
name|ObrFeatureTest
extends|extends
name|AbstractFeatureTest
block|{
annotation|@
name|Configuration
specifier|public
specifier|static
name|Option
index|[]
name|configure
parameter_list|()
block|{
name|Option
index|[]
name|options
init|=
name|append
argument_list|(
name|editConfigurationFilePut
argument_list|(
literal|"etc/system.properties"
argument_list|,
literal|"camel.version"
argument_list|,
name|MavenUtils
operator|.
name|getArtifactVersion
argument_list|(
literal|"org.apache.camel.karaf"
argument_list|,
literal|"apache-camel"
argument_list|)
argument_list|)
argument_list|,
name|configure
argument_list|(
literal|"obr"
argument_list|)
argument_list|)
decl_stmt|;
comment|// can't see where these deps die in a paxexam container - vanilla distro unpack can install war feature ok
name|options
operator|=
name|append
argument_list|(
name|CoreOptions
operator|.
name|mavenBundle
argument_list|(
literal|"org.apache.xbean"
argument_list|,
literal|"xbean-bundleutils"
argument_list|)
operator|.
name|versionAsInProject
argument_list|()
argument_list|,
name|options
argument_list|)
expr_stmt|;
name|options
operator|=
name|append
argument_list|(
name|CoreOptions
operator|.
name|mavenBundle
argument_list|(
literal|"org.apache.xbean"
argument_list|,
literal|"xbean-asm-util"
argument_list|)
operator|.
name|versionAsInProject
argument_list|()
argument_list|,
name|options
argument_list|)
expr_stmt|;
return|return
name|append
argument_list|(
name|CoreOptions
operator|.
name|mavenBundle
argument_list|(
literal|"org.apache.xbean"
argument_list|,
literal|"xbean-finder"
argument_list|)
operator|.
name|versionAsInProject
argument_list|()
argument_list|,
name|options
argument_list|)
return|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|5
operator|*
literal|60
operator|*
literal|1000
argument_list|)
specifier|public
name|void
name|testWar
parameter_list|()
throws|throws
name|Throwable
block|{
name|installAndAssertFeature
argument_list|(
literal|"war"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|5
operator|*
literal|60
operator|*
literal|1000
argument_list|)
specifier|public
name|void
name|testClient
parameter_list|()
throws|throws
name|Throwable
block|{
name|installAndAssertFeature
argument_list|(
literal|"activemq-client"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|5
operator|*
literal|60
operator|*
literal|1000
argument_list|)
specifier|public
name|void
name|testActiveMQ
parameter_list|()
throws|throws
name|Throwable
block|{
name|installAndAssertFeature
argument_list|(
literal|"activemq"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|5
operator|*
literal|60
operator|*
literal|1000
argument_list|)
specifier|public
name|void
name|testBroker
parameter_list|()
throws|throws
name|Throwable
block|{
name|installAndAssertFeature
argument_list|(
literal|"activemq-broker"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|5
operator|*
literal|60
operator|*
literal|1000
argument_list|)
specifier|public
name|void
name|testCamel
parameter_list|()
throws|throws
name|Throwable
block|{
name|executeCommand
argument_list|(
literal|"feature:repo-add "
operator|+
name|getCamelFeatureUrl
argument_list|()
argument_list|)
expr_stmt|;
name|installAndAssertFeature
argument_list|(
literal|"activemq-camel"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|5
operator|*
literal|60
operator|*
literal|1000
argument_list|)
specifier|public
name|void
name|testClientWithSpring31
parameter_list|()
throws|throws
name|Throwable
block|{
name|executeCommand
argument_list|(
literal|"feature:install spring/3.1.4.RELEASE"
argument_list|)
expr_stmt|;
name|installAndAssertFeature
argument_list|(
literal|"activemq-client"
argument_list|)
expr_stmt|;
name|verifyBundleInstalledAndRegisteredServices
argument_list|(
literal|"activemq-osgi"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|5
operator|*
literal|60
operator|*
literal|1000
argument_list|)
specifier|public
name|void
name|testClientWithSpring32
parameter_list|()
throws|throws
name|Throwable
block|{
name|executeCommand
argument_list|(
literal|"feature:install spring/3.2.14.RELEASE_1"
argument_list|)
expr_stmt|;
name|installAndAssertFeature
argument_list|(
literal|"activemq-client"
argument_list|)
expr_stmt|;
name|verifyBundleInstalledAndRegisteredServices
argument_list|(
literal|"activemq-osgi"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|5
operator|*
literal|60
operator|*
literal|1000
argument_list|)
specifier|public
name|void
name|testClientWithSpring40
parameter_list|()
throws|throws
name|Throwable
block|{
name|executeCommand
argument_list|(
literal|"feature:install spring/4.0.7.RELEASE_3"
argument_list|)
expr_stmt|;
name|installAndAssertFeature
argument_list|(
literal|"activemq-client"
argument_list|)
expr_stmt|;
name|verifyBundleInstalledAndRegisteredServices
argument_list|(
literal|"activemq-osgi"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|5
operator|*
literal|60
operator|*
literal|1000
argument_list|)
specifier|public
name|void
name|testClientWithSpring41
parameter_list|()
throws|throws
name|Throwable
block|{
name|executeCommand
argument_list|(
literal|"feature:install spring/4.1.7.RELEASE_2"
argument_list|)
expr_stmt|;
name|installAndAssertFeature
argument_list|(
literal|"activemq-client"
argument_list|)
expr_stmt|;
name|verifyBundleInstalledAndRegisteredServices
argument_list|(
literal|"activemq-osgi"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|5
operator|*
literal|60
operator|*
literal|1000
argument_list|)
specifier|public
name|void
name|testClientWithSpring42
parameter_list|()
throws|throws
name|Throwable
block|{
name|executeCommand
argument_list|(
literal|"feature:install spring/4.2.2.RELEASE_1"
argument_list|)
expr_stmt|;
name|installAndAssertFeature
argument_list|(
literal|"activemq-client"
argument_list|)
expr_stmt|;
name|verifyBundleInstalledAndRegisteredServices
argument_list|(
literal|"activemq-osgi"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|verifyBundleInstalledAndRegisteredServices
parameter_list|(
specifier|final
name|String
name|bundleName
parameter_list|,
specifier|final
name|int
name|numberOfServices
parameter_list|)
throws|throws
name|Exception
block|{
name|boolean
name|found
init|=
literal|false
decl_stmt|;
for|for
control|(
specifier|final
name|Bundle
name|bundle
range|:
name|bundleContext
operator|.
name|getBundles
argument_list|()
control|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Checking: "
operator|+
name|bundle
operator|.
name|getSymbolicName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|bundle
operator|.
name|getSymbolicName
argument_list|()
operator|.
name|contains
argument_list|(
name|bundleName
argument_list|)
condition|)
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Bundle
operator|.
name|ACTIVE
argument_list|,
name|bundle
operator|.
name|getState
argument_list|()
argument_list|)
expr_stmt|;
comment|// Assert that the bundle has registered some services via blueprint
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|bundle
operator|.
name|getRegisteredServices
argument_list|()
argument_list|)
expr_stmt|;
comment|// Assert that the bundle has registered the correct number of services
name|Assert
operator|.
name|assertEquals
argument_list|(
name|numberOfServices
argument_list|,
name|bundle
operator|.
name|getRegisteredServices
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|found
operator|=
literal|true
expr_stmt|;
break|break;
block|}
block|}
return|return
name|found
return|;
block|}
block|}
end_class

end_unit

