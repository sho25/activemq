begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|advisory
operator|.
name|AdvisorySupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ConnectionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ConsumerId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ConsumerInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|SessionId
import|;
end_import

begin_class
specifier|public
class|class
name|ConcurrentConnectSimulationTest
extends|extends
name|BrokerTestSupport
block|{
comment|/*      * simulate failover and retry of connection before broker has killed connection      * which appears as a concurrent connect request to the broker      * see: https://issues.apache.org/activemq/browse/AMQ-2241      */
specifier|public
name|void
name|testConcurrentConnection
parameter_list|()
throws|throws
name|Exception
block|{
name|StubConnection
name|connection1
init|=
name|createConnection
argument_list|()
decl_stmt|;
name|StubConnection
name|connection2
init|=
name|createConnection
argument_list|()
decl_stmt|;
comment|// reuse same connection info
name|ConnectionInfo
name|connectionInfo
init|=
name|createConnectionInfo
argument_list|()
decl_stmt|;
name|connection1
operator|.
name|request
argument_list|(
name|connectionInfo
argument_list|)
expr_stmt|;
name|connection2
operator|.
name|request
argument_list|(
name|connectionInfo
argument_list|)
expr_stmt|;
comment|// second one should win out, verify using consumer on default session (watchAdvisories)
name|ConsumerId
name|consumerId
init|=
operator|new
name|ConsumerId
argument_list|(
operator|new
name|SessionId
argument_list|(
name|connectionInfo
operator|.
name|getConnectionId
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|ConsumerInfo
name|consumerInfo
init|=
operator|new
name|ConsumerInfo
argument_list|(
name|consumerId
argument_list|)
decl_stmt|;
name|consumerInfo
operator|.
name|setDestination
argument_list|(
name|AdvisorySupport
operator|.
name|TEMP_DESTINATION_COMPOSITE_ADVISORY_TOPIC
argument_list|)
expr_stmt|;
name|connection2
operator|.
name|request
argument_list|(
name|consumerInfo
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|Test
name|suite
parameter_list|()
block|{
return|return
name|suite
argument_list|(
name|ConcurrentConnectSimulationTest
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
name|junit
operator|.
name|textui
operator|.
name|TestRunner
operator|.
name|run
argument_list|(
name|suite
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

