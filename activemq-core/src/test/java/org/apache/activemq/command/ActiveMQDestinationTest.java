begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|SortedSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|JMSException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Queue
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|TemporaryQueue
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|TemporaryTopic
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Topic
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|ActiveMQDestinationTest
extends|extends
name|DataStructureTestSupport
block|{
specifier|public
name|ActiveMQDestination
name|destination
decl_stmt|;
specifier|public
name|void
name|initCombosForTestDesintaionMarshaling
parameter_list|()
block|{
name|addCombinationValues
argument_list|(
literal|"destination"
argument_list|,
operator|new
name|Object
index|[]
block|{
operator|new
name|ActiveMQQueue
argument_list|(
literal|"TEST"
argument_list|)
block|,
operator|new
name|ActiveMQTopic
argument_list|(
literal|"TEST"
argument_list|)
block|,
operator|new
name|ActiveMQTempQueue
argument_list|(
literal|"TEST:1"
argument_list|)
block|,
operator|new
name|ActiveMQTempTopic
argument_list|(
literal|"TEST:1"
argument_list|)
block|,
operator|new
name|ActiveMQTempQueue
argument_list|(
literal|"TEST"
argument_list|)
block|,
operator|new
name|ActiveMQTempTopic
argument_list|(
literal|"TEST"
argument_list|)
block|,
operator|new
name|ActiveMQQueue
argument_list|(
literal|"TEST?option=value"
argument_list|)
block|,
operator|new
name|ActiveMQTopic
argument_list|(
literal|"TEST?option=value"
argument_list|)
block|,
operator|new
name|ActiveMQTempQueue
argument_list|(
literal|"TEST:1?option=value"
argument_list|)
block|,
operator|new
name|ActiveMQTempTopic
argument_list|(
literal|"TEST:1?option=value"
argument_list|)
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testDesintaionMarshaling
parameter_list|()
throws|throws
name|IOException
block|{
name|assertBeanMarshalls
argument_list|(
name|destination
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|initCombosForTestDesintaionOptions
parameter_list|()
block|{
name|addCombinationValues
argument_list|(
literal|"destination"
argument_list|,
operator|new
name|Object
index|[]
block|{
operator|new
name|ActiveMQQueue
argument_list|(
literal|"TEST?k1=v1&k2=v2"
argument_list|)
block|,
operator|new
name|ActiveMQTopic
argument_list|(
literal|"TEST?k1=v1&k2=v2"
argument_list|)
block|,
operator|new
name|ActiveMQTempQueue
argument_list|(
literal|"TEST:1?k1=v1&k2=v2"
argument_list|)
block|,
operator|new
name|ActiveMQTempTopic
argument_list|(
literal|"TEST:1?k1=v1&k2=v2"
argument_list|)
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testDesintaionOptions
parameter_list|()
throws|throws
name|IOException
block|{
name|Map
name|options
init|=
name|destination
operator|.
name|getOptions
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|options
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"v1"
argument_list|,
name|options
operator|.
name|get
argument_list|(
literal|"k1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"v2"
argument_list|,
name|options
operator|.
name|get
argument_list|(
literal|"k2"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSorting
parameter_list|()
throws|throws
name|Exception
block|{
name|SortedSet
argument_list|<
name|ActiveMQDestination
argument_list|>
name|set
init|=
operator|new
name|TreeSet
argument_list|<
name|ActiveMQDestination
argument_list|>
argument_list|()
decl_stmt|;
name|ActiveMQDestination
index|[]
name|destinations
init|=
block|{
operator|new
name|ActiveMQQueue
argument_list|(
literal|"A"
argument_list|)
block|,
operator|new
name|ActiveMQQueue
argument_list|(
literal|"B"
argument_list|)
block|,
operator|new
name|ActiveMQTopic
argument_list|(
literal|"A"
argument_list|)
block|,
operator|new
name|ActiveMQTopic
argument_list|(
literal|"B"
argument_list|)
block|}
decl_stmt|;
name|List
argument_list|<
name|ActiveMQDestination
argument_list|>
name|expected
init|=
name|Arrays
operator|.
name|asList
argument_list|(
name|destinations
argument_list|)
decl_stmt|;
name|set
operator|.
name|addAll
argument_list|(
name|expected
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ActiveMQDestination
argument_list|>
name|actual
init|=
operator|new
name|ArrayList
argument_list|<
name|ActiveMQDestination
argument_list|>
argument_list|(
name|set
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Sorted order"
argument_list|,
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
comment|// https://issues.apache.org/activemq/browse/AMQ-2630
class|class
name|CombyDest
implements|implements
name|Queue
implements|,
name|Topic
implements|,
name|TemporaryQueue
implements|,
name|TemporaryTopic
block|{
specifier|private
specifier|final
name|String
name|qName
decl_stmt|;
specifier|private
specifier|final
name|String
name|topicName
decl_stmt|;
specifier|public
name|CombyDest
parameter_list|(
name|String
name|qName
parameter_list|,
name|String
name|topicName
parameter_list|)
block|{
name|this
operator|.
name|qName
operator|=
name|qName
expr_stmt|;
name|this
operator|.
name|topicName
operator|=
name|topicName
expr_stmt|;
block|}
specifier|public
name|void
name|delete
parameter_list|()
throws|throws
name|JMSException
block|{         }
specifier|public
name|String
name|getTopicName
parameter_list|()
throws|throws
name|JMSException
block|{
return|return
name|topicName
return|;
block|}
specifier|public
name|String
name|getQueueName
parameter_list|()
throws|throws
name|JMSException
block|{
return|return
name|qName
return|;
block|}
block|}
specifier|public
name|void
name|testTransformPollymorphic
parameter_list|()
throws|throws
name|Exception
block|{
name|ActiveMQQueue
name|queue
init|=
operator|new
name|ActiveMQQueue
argument_list|(
literal|"TEST"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|ActiveMQDestination
operator|.
name|transform
argument_list|(
name|queue
argument_list|)
argument_list|,
name|queue
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"is a q"
argument_list|,
name|ActiveMQDestination
operator|.
name|transform
argument_list|(
operator|new
name|CombyDest
argument_list|(
literal|null
argument_list|,
literal|"Topic"
argument_list|)
argument_list|)
operator|instanceof
name|ActiveMQTopic
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"is a q"
argument_list|,
name|ActiveMQDestination
operator|.
name|transform
argument_list|(
operator|new
name|CombyDest
argument_list|(
literal|"Q"
argument_list|,
literal|null
argument_list|)
argument_list|)
operator|instanceof
name|ActiveMQQueue
argument_list|)
expr_stmt|;
try|try
block|{
name|ActiveMQDestination
operator|.
name|transform
argument_list|(
operator|new
name|CombyDest
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"expect ex as cannot disambiguate"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JMSException
name|expected
parameter_list|)
block|{          }
try|try
block|{
name|ActiveMQDestination
operator|.
name|transform
argument_list|(
operator|new
name|CombyDest
argument_list|(
literal|"Q"
argument_list|,
literal|"T"
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"expect ex as cannot disambiguate"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JMSException
name|expected
parameter_list|)
block|{          }
block|}
specifier|public
specifier|static
name|Test
name|suite
parameter_list|()
block|{
return|return
name|suite
argument_list|(
name|ActiveMQDestinationTest
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
name|junit
operator|.
name|textui
operator|.
name|TestRunner
operator|.
name|run
argument_list|(
name|suite
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

