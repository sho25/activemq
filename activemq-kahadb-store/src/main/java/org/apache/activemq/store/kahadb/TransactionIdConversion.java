begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadb
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ConnectionId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|LocalTransactionId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|TransactionId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|XATransactionId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|protobuf
operator|.
name|Buffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadb
operator|.
name|data
operator|.
name|KahaLocalTransactionId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadb
operator|.
name|data
operator|.
name|KahaTransactionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadb
operator|.
name|data
operator|.
name|KahaXATransactionId
import|;
end_import

begin_class
specifier|public
class|class
name|TransactionIdConversion
block|{
specifier|static
name|KahaTransactionInfo
name|convertToLocal
parameter_list|(
name|TransactionId
name|tx
parameter_list|)
block|{
name|KahaTransactionInfo
name|rc
init|=
operator|new
name|KahaTransactionInfo
argument_list|()
decl_stmt|;
name|LocalTransactionId
name|t
init|=
operator|(
name|LocalTransactionId
operator|)
name|tx
decl_stmt|;
name|KahaLocalTransactionId
name|kahaTxId
init|=
operator|new
name|KahaLocalTransactionId
argument_list|()
decl_stmt|;
name|kahaTxId
operator|.
name|setConnectionId
argument_list|(
name|t
operator|.
name|getConnectionId
argument_list|()
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|kahaTxId
operator|.
name|setTransactionId
argument_list|(
name|t
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|rc
operator|.
name|setLocalTransactionId
argument_list|(
name|kahaTxId
argument_list|)
expr_stmt|;
return|return
name|rc
return|;
block|}
specifier|static
name|KahaTransactionInfo
name|convert
parameter_list|(
name|TransactionId
name|txid
parameter_list|)
block|{
if|if
condition|(
name|txid
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
name|KahaTransactionInfo
name|rc
decl_stmt|;
if|if
condition|(
name|txid
operator|.
name|isLocalTransaction
argument_list|()
condition|)
block|{
name|rc
operator|=
name|convertToLocal
argument_list|(
name|txid
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|rc
operator|=
operator|new
name|KahaTransactionInfo
argument_list|()
expr_stmt|;
name|XATransactionId
name|t
init|=
operator|(
name|XATransactionId
operator|)
name|txid
decl_stmt|;
name|KahaXATransactionId
name|kahaTxId
init|=
operator|new
name|KahaXATransactionId
argument_list|()
decl_stmt|;
name|kahaTxId
operator|.
name|setBranchQualifier
argument_list|(
operator|new
name|Buffer
argument_list|(
name|t
operator|.
name|getBranchQualifier
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|kahaTxId
operator|.
name|setGlobalTransactionId
argument_list|(
operator|new
name|Buffer
argument_list|(
name|t
operator|.
name|getGlobalTransactionId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|kahaTxId
operator|.
name|setFormatId
argument_list|(
name|t
operator|.
name|getFormatId
argument_list|()
argument_list|)
expr_stmt|;
name|rc
operator|.
name|setXaTransactionId
argument_list|(
name|kahaTxId
argument_list|)
expr_stmt|;
block|}
return|return
name|rc
return|;
block|}
specifier|static
name|TransactionId
name|convert
parameter_list|(
name|KahaTransactionInfo
name|transactionInfo
parameter_list|)
block|{
if|if
condition|(
name|transactionInfo
operator|.
name|hasLocalTransactionId
argument_list|()
condition|)
block|{
name|KahaLocalTransactionId
name|tx
init|=
name|transactionInfo
operator|.
name|getLocalTransactionId
argument_list|()
decl_stmt|;
name|LocalTransactionId
name|rc
init|=
operator|new
name|LocalTransactionId
argument_list|()
decl_stmt|;
name|rc
operator|.
name|setConnectionId
argument_list|(
operator|new
name|ConnectionId
argument_list|(
name|tx
operator|.
name|getConnectionId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|rc
operator|.
name|setValue
argument_list|(
name|tx
operator|.
name|getTransactionId
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|rc
return|;
block|}
else|else
block|{
name|KahaXATransactionId
name|tx
init|=
name|transactionInfo
operator|.
name|getXaTransactionId
argument_list|()
decl_stmt|;
name|XATransactionId
name|rc
init|=
operator|new
name|XATransactionId
argument_list|()
decl_stmt|;
name|rc
operator|.
name|setBranchQualifier
argument_list|(
name|tx
operator|.
name|getBranchQualifier
argument_list|()
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
name|rc
operator|.
name|setGlobalTransactionId
argument_list|(
name|tx
operator|.
name|getGlobalTransactionId
argument_list|()
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
name|rc
operator|.
name|setFormatId
argument_list|(
name|tx
operator|.
name|getFormatId
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|rc
return|;
block|}
block|}
block|}
end_class

end_unit

