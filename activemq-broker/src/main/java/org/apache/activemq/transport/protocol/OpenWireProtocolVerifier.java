begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|protocol
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|WireFormatInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|openwire
operator|.
name|OpenWireFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|openwire
operator|.
name|OpenWireFormatFactory
import|;
end_import

begin_comment
comment|/**  *  *  */
end_comment

begin_class
specifier|public
class|class
name|OpenWireProtocolVerifier
implements|implements
name|ProtocolVerifier
block|{
specifier|protected
specifier|final
name|OpenWireFormatFactory
name|wireFormatFactory
decl_stmt|;
specifier|public
name|OpenWireProtocolVerifier
parameter_list|(
name|OpenWireFormatFactory
name|wireFormatFactory
parameter_list|)
block|{
name|this
operator|.
name|wireFormatFactory
operator|=
name|wireFormatFactory
expr_stmt|;
block|}
comment|/* (non-Javadoc)      * @see org.apache.activemq.broker.transport.protocol.ProtocolVerifier#isProtocol(byte[])      */
annotation|@
name|Override
specifier|public
name|boolean
name|isProtocol
parameter_list|(
name|byte
index|[]
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|.
name|length
operator|<
literal|8
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Protocol header length changed "
operator|+
name|value
operator|.
name|length
argument_list|)
throw|;
block|}
name|int
name|start
init|=
operator|!
operator|(
operator|(
name|OpenWireFormat
operator|)
name|wireFormatFactory
operator|.
name|createWireFormat
argument_list|()
operator|)
operator|.
name|isSizePrefixDisabled
argument_list|()
condition|?
literal|4
else|:
literal|0
decl_stmt|;
name|int
name|j
init|=
literal|0
decl_stmt|;
comment|// type
if|if
condition|(
name|value
index|[
name|start
index|]
operator|!=
name|WireFormatInfo
operator|.
name|DATA_STRUCTURE_TYPE
condition|)
block|{
return|return
literal|false
return|;
block|}
name|start
operator|++
expr_stmt|;
name|WireFormatInfo
name|info
init|=
operator|new
name|WireFormatInfo
argument_list|()
decl_stmt|;
specifier|final
name|byte
index|[]
name|magic
init|=
name|info
operator|.
name|getMagic
argument_list|()
decl_stmt|;
name|int
name|remainingLen
init|=
name|value
operator|.
name|length
operator|-
name|start
decl_stmt|;
name|int
name|useLen
init|=
name|remainingLen
operator|>
name|magic
operator|.
name|length
condition|?
name|magic
operator|.
name|length
else|:
name|remainingLen
decl_stmt|;
name|useLen
operator|+=
name|start
expr_stmt|;
comment|// magic
for|for
control|(
name|int
name|i
init|=
name|start
init|;
name|i
operator|<
name|useLen
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|value
index|[
name|i
index|]
operator|!=
name|magic
index|[
name|j
index|]
condition|)
block|{
return|return
literal|false
return|;
block|}
name|j
operator|++
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
block|}
end_class

end_unit

