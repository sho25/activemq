begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|kaha
operator|.
name|impl
operator|.
name|container
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ListIterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|kaha
operator|.
name|StoreEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|kaha
operator|.
name|impl
operator|.
name|index
operator|.
name|IndexLinkedList
import|;
end_import

begin_comment
comment|/**  * @version $Revision$ */
end_comment

begin_class
specifier|public
class|class
name|CachedContainerListIterator
implements|implements
name|ListIterator
block|{
specifier|protected
name|ListContainerImpl
name|container
decl_stmt|;
specifier|protected
name|IndexLinkedList
name|list
decl_stmt|;
specifier|protected
name|int
name|pos
init|=
literal|0
decl_stmt|;
specifier|protected
name|int
name|nextPos
init|=
literal|0
decl_stmt|;
specifier|protected
name|StoreEntry
name|currentItem
decl_stmt|;
specifier|protected
name|CachedContainerListIterator
parameter_list|(
name|ListContainerImpl
name|container
parameter_list|,
name|int
name|start
parameter_list|)
block|{
name|this
operator|.
name|container
operator|=
name|container
expr_stmt|;
name|this
operator|.
name|list
operator|=
name|list
expr_stmt|;
name|this
operator|.
name|pos
operator|=
name|start
expr_stmt|;
name|this
operator|.
name|nextPos
operator|=
name|this
operator|.
name|pos
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasNext
parameter_list|()
block|{
return|return
name|nextPos
operator|>=
literal|0
operator|&&
name|nextPos
operator|<
name|container
operator|.
name|size
argument_list|()
return|;
block|}
specifier|public
name|Object
name|next
parameter_list|()
block|{
name|pos
operator|=
name|nextPos
expr_stmt|;
name|Object
name|result
init|=
name|container
operator|.
name|getCachedItem
argument_list|(
name|pos
argument_list|)
decl_stmt|;
name|nextPos
operator|++
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|void
name|remove
parameter_list|()
block|{
name|container
operator|.
name|remove
argument_list|(
name|pos
argument_list|)
expr_stmt|;
name|nextPos
operator|--
expr_stmt|;
block|}
comment|/*      * (non-Javadoc)      *       * @see java.util.ListIterator#hasPrevious()      */
specifier|public
name|boolean
name|hasPrevious
parameter_list|()
block|{
return|return
name|pos
operator|>=
literal|0
operator|&&
name|pos
operator|<
name|container
operator|.
name|size
argument_list|()
return|;
block|}
comment|/*      * (non-Javadoc)      *       * @see java.util.ListIterator#previous()      */
specifier|public
name|Object
name|previous
parameter_list|()
block|{
name|Object
name|result
init|=
name|container
operator|.
name|getCachedItem
argument_list|(
name|pos
argument_list|)
decl_stmt|;
name|pos
operator|--
expr_stmt|;
return|return
name|result
return|;
block|}
comment|/*      * (non-Javadoc)      *       * @see java.util.ListIterator#nextIndex()      */
specifier|public
name|int
name|nextIndex
parameter_list|()
block|{
return|return
name|pos
operator|+
literal|1
return|;
block|}
comment|/*      * (non-Javadoc)      *       * @see java.util.ListIterator#previousIndex()      */
specifier|public
name|int
name|previousIndex
parameter_list|()
block|{
return|return
name|pos
operator|-
literal|1
return|;
block|}
comment|/*      * (non-Javadoc)      *       * @see java.util.ListIterator#set(E)      */
specifier|public
name|void
name|set
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
name|container
operator|.
name|internalSet
argument_list|(
name|pos
argument_list|,
name|o
argument_list|)
expr_stmt|;
block|}
comment|/*      * (non-Javadoc)      *       * @see java.util.ListIterator#add(E)      */
specifier|public
name|void
name|add
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
name|container
operator|.
name|internalAdd
argument_list|(
name|previousIndex
argument_list|()
operator|+
literal|1
argument_list|,
name|o
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

