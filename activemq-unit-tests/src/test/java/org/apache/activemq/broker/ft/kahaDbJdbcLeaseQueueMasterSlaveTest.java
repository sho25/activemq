begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|ft
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|sql
operator|.
name|DataSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|TransportConnector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|jdbc
operator|.
name|DataSourceServiceSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|jdbc
operator|.
name|LeaseDatabaseLocker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|jdbc
operator|.
name|Statements
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadb
operator|.
name|KahaDBPersistenceAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|util
operator|.
name|DefaultIOExceptionHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|util
operator|.
name|IOHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|derby
operator|.
name|jdbc
operator|.
name|EmbeddedDataSource
import|;
end_import

begin_class
specifier|public
class|class
name|kahaDbJdbcLeaseQueueMasterSlaveTest
extends|extends
name|QueueMasterSlaveTestSupport
block|{
specifier|protected
name|DataSource
name|sharedDs
decl_stmt|;
specifier|protected
name|String
name|MASTER_URL
init|=
literal|"tcp://localhost:62001"
decl_stmt|;
specifier|protected
name|String
name|SLAVE_URL
init|=
literal|"tcp://localhost:62002"
decl_stmt|;
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
comment|// startup db
name|sharedDs
operator|=
operator|new
name|SyncCreateDataSource
argument_list|(
operator|(
name|EmbeddedDataSource
operator|)
name|DataSourceServiceSupport
operator|.
name|createDataSource
argument_list|(
name|IOHelper
operator|.
name|getDefaultDataDirectory
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|createMaster
parameter_list|()
throws|throws
name|Exception
block|{
name|master
operator|=
operator|new
name|BrokerService
argument_list|()
expr_stmt|;
name|master
operator|.
name|setBrokerName
argument_list|(
literal|"master"
argument_list|)
expr_stmt|;
name|master
operator|.
name|addConnector
argument_list|(
name|MASTER_URL
argument_list|)
expr_stmt|;
name|master
operator|.
name|setUseJmx
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|master
operator|.
name|setPersistent
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|master
operator|.
name|setDeleteAllMessagesOnStartup
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|KahaDBPersistenceAdapter
name|kahaDBPersistenceAdapter
init|=
operator|(
name|KahaDBPersistenceAdapter
operator|)
name|master
operator|.
name|getPersistenceAdapter
argument_list|()
decl_stmt|;
name|LeaseDatabaseLocker
name|leaseDatabaseLocker
init|=
operator|new
name|LeaseDatabaseLocker
argument_list|()
decl_stmt|;
name|leaseDatabaseLocker
operator|.
name|setCreateTablesOnStartup
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|leaseDatabaseLocker
operator|.
name|setDataSource
argument_list|(
name|getExistingDataSource
argument_list|()
argument_list|)
expr_stmt|;
name|leaseDatabaseLocker
operator|.
name|setStatements
argument_list|(
operator|new
name|Statements
argument_list|()
argument_list|)
expr_stmt|;
name|kahaDBPersistenceAdapter
operator|.
name|setLocker
argument_list|(
name|leaseDatabaseLocker
argument_list|)
expr_stmt|;
name|configureLocker
argument_list|(
name|kahaDBPersistenceAdapter
argument_list|)
expr_stmt|;
name|configureBroker
argument_list|(
name|master
argument_list|)
expr_stmt|;
name|master
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|configureBroker
parameter_list|(
name|BrokerService
name|brokerService
parameter_list|)
block|{
name|DefaultIOExceptionHandler
name|stopBrokerOnStoreException
init|=
operator|new
name|DefaultIOExceptionHandler
argument_list|()
decl_stmt|;
comment|// we want any store io exception to stop the broker
name|stopBrokerOnStoreException
operator|.
name|setIgnoreSQLExceptions
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|brokerService
operator|.
name|setIoExceptionHandler
argument_list|(
name|stopBrokerOnStoreException
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|createSlave
parameter_list|()
throws|throws
name|Exception
block|{
comment|// use a separate thread as the slave will block waiting for
comment|// the exclusive db lock
name|Thread
name|t
init|=
operator|new
name|Thread
argument_list|()
block|{
specifier|public
name|void
name|run
parameter_list|()
block|{
try|try
block|{
name|BrokerService
name|broker
init|=
operator|new
name|BrokerService
argument_list|()
decl_stmt|;
name|broker
operator|.
name|setBrokerName
argument_list|(
literal|"slave"
argument_list|)
expr_stmt|;
name|TransportConnector
name|connector
init|=
operator|new
name|TransportConnector
argument_list|()
decl_stmt|;
name|connector
operator|.
name|setUri
argument_list|(
operator|new
name|URI
argument_list|(
name|SLAVE_URL
argument_list|)
argument_list|)
expr_stmt|;
name|broker
operator|.
name|addConnector
argument_list|(
name|connector
argument_list|)
expr_stmt|;
name|broker
operator|.
name|setUseJmx
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|broker
operator|.
name|setPersistent
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|KahaDBPersistenceAdapter
name|kahaDBPersistenceAdapter
init|=
operator|(
name|KahaDBPersistenceAdapter
operator|)
name|broker
operator|.
name|getPersistenceAdapter
argument_list|()
decl_stmt|;
name|LeaseDatabaseLocker
name|leaseDatabaseLocker
init|=
operator|new
name|LeaseDatabaseLocker
argument_list|()
decl_stmt|;
name|leaseDatabaseLocker
operator|.
name|setDataSource
argument_list|(
name|getExistingDataSource
argument_list|()
argument_list|)
expr_stmt|;
name|leaseDatabaseLocker
operator|.
name|setStatements
argument_list|(
operator|new
name|Statements
argument_list|()
argument_list|)
expr_stmt|;
name|kahaDBPersistenceAdapter
operator|.
name|setLocker
argument_list|(
name|leaseDatabaseLocker
argument_list|)
expr_stmt|;
name|configureLocker
argument_list|(
name|kahaDBPersistenceAdapter
argument_list|)
expr_stmt|;
name|configureBroker
argument_list|(
name|broker
argument_list|)
expr_stmt|;
name|broker
operator|.
name|start
argument_list|()
expr_stmt|;
name|slave
operator|.
name|set
argument_list|(
name|broker
argument_list|)
expr_stmt|;
name|slaveStarted
operator|.
name|countDown
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|expectedOnShutdown
parameter_list|)
block|{                 }
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|fail
argument_list|(
literal|"failed to start slave broker, reason:"
operator|+
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
decl_stmt|;
name|t
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|configureLocker
parameter_list|(
name|KahaDBPersistenceAdapter
name|kahaDBPersistenceAdapter
parameter_list|)
throws|throws
name|IOException
block|{
name|kahaDBPersistenceAdapter
operator|.
name|setLockKeepAlivePeriod
argument_list|(
literal|500
argument_list|)
expr_stmt|;
name|kahaDBPersistenceAdapter
operator|.
name|getLocker
argument_list|()
operator|.
name|setLockAcquireSleepInterval
argument_list|(
literal|500
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|DataSource
name|getExistingDataSource
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|sharedDs
return|;
block|}
block|}
end_class

end_unit

