begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|camel
operator|.
name|component
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|camel
operator|.
name|SetHeaderTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|uface
operator|.
name|swing
operator|.
name|SwingBrowser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|CamelTemplate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultCamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|annotation
operator|.
name|Autowired
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|ContextConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|junit38
operator|.
name|AbstractJUnit38SpringContextTests
import|;
end_import

begin_comment
comment|/**  * @version $Revision: 1.1 $  */
end_comment

begin_class
annotation|@
name|ContextConfiguration
specifier|public
class|class
name|BrowseQueuesInUFace
extends|extends
name|AbstractJUnit38SpringContextTests
block|{
specifier|private
specifier|static
specifier|final
specifier|transient
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|SetHeaderTest
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Autowired
specifier|protected
name|CamelContext
name|camelContext
decl_stmt|;
annotation|@
name|Autowired
specifier|protected
name|CamelTemplate
name|template
decl_stmt|;
specifier|protected
name|String
index|[]
name|queueNames
init|=
block|{
literal|"Sample.A"
block|,
literal|"Sample.B"
block|,
literal|"Sample.C"
block|}
decl_stmt|;
specifier|public
name|void
name|testBrowseQueues
parameter_list|()
throws|throws
name|Exception
block|{
comment|// lets send a bunch of messages
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|queueNames
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|String
name|queueName
init|=
name|queueNames
index|[
name|i
index|]
decl_stmt|;
name|sendMessagesToQueue
argument_list|(
name|queueName
argument_list|,
name|i
argument_list|)
expr_stmt|;
block|}
name|Thread
operator|.
name|sleep
argument_list|(
literal|2000
argument_list|)
expr_stmt|;
comment|// now lets spin up a browser
name|SwingBrowser
name|browser
init|=
operator|new
name|SwingBrowser
argument_list|(
operator|(
name|DefaultCamelContext
operator|)
name|camelContext
argument_list|)
decl_stmt|;
name|browser
operator|.
name|run
argument_list|()
expr_stmt|;
comment|// now lets sleep a while...
name|Thread
operator|.
name|sleep
argument_list|(
literal|50000
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|sendMessagesToQueue
parameter_list|(
name|String
name|queueName
parameter_list|,
name|int
name|index
parameter_list|)
block|{
name|String
name|uri
init|=
literal|"activemq:"
operator|+
name|queueName
decl_stmt|;
name|int
name|count
init|=
name|index
operator|*
literal|2
operator|+
literal|2
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|count
condition|;
name|i
operator|++
control|)
block|{
name|Object
name|body
init|=
literal|"Message: "
operator|+
name|i
decl_stmt|;
name|template
operator|.
name|sendBodyAndHeader
argument_list|(
name|uri
argument_list|,
name|body
argument_list|,
literal|"counter"
argument_list|,
name|i
argument_list|)
expr_stmt|;
block|}
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Sent "
operator|+
name|count
operator|+
literal|" messages to: "
operator|+
name|uri
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

