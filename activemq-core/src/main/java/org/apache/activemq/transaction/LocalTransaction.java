begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transaction
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|transaction
operator|.
name|xa
operator|.
name|XAException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|ConnectionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|LocalTransactionId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|TransactionId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|TransactionStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_comment
comment|/**  * @version $Revision: 1.3 $  */
end_comment

begin_class
specifier|public
class|class
name|LocalTransaction
extends|extends
name|Transaction
block|{
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|LocalTransaction
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|TransactionStore
name|transactionStore
decl_stmt|;
specifier|private
specifier|final
name|LocalTransactionId
name|xid
decl_stmt|;
specifier|private
specifier|final
name|ConnectionContext
name|context
decl_stmt|;
specifier|public
name|LocalTransaction
parameter_list|(
name|TransactionStore
name|transactionStore
parameter_list|,
name|LocalTransactionId
name|xid
parameter_list|,
name|ConnectionContext
name|context
parameter_list|)
block|{
name|this
operator|.
name|transactionStore
operator|=
name|transactionStore
expr_stmt|;
name|this
operator|.
name|xid
operator|=
name|xid
expr_stmt|;
name|this
operator|.
name|context
operator|=
name|context
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|commit
parameter_list|(
name|boolean
name|onePhase
parameter_list|)
throws|throws
name|XAException
throws|,
name|IOException
block|{
if|if
condition|(
name|LOG
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"commit: "
operator|+
name|xid
operator|+
literal|" syncCount: "
operator|+
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// Get ready for commit.
try|try
block|{
name|prePrepare
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XAException
name|e
parameter_list|)
block|{
throw|throw
name|e
throw|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"COMMIT FAILED: "
argument_list|,
name|e
argument_list|)
expr_stmt|;
name|rollback
argument_list|()
expr_stmt|;
comment|// Let them know we rolled back.
name|XAException
name|xae
init|=
operator|new
name|XAException
argument_list|(
literal|"COMMIT FAILED: Transaction rolled back."
argument_list|)
decl_stmt|;
name|xae
operator|.
name|errorCode
operator|=
name|XAException
operator|.
name|XA_RBOTHER
expr_stmt|;
name|xae
operator|.
name|initCause
argument_list|(
name|e
argument_list|)
expr_stmt|;
throw|throw
name|xae
throw|;
block|}
name|setState
argument_list|(
name|Transaction
operator|.
name|FINISHED_STATE
argument_list|)
expr_stmt|;
name|context
operator|.
name|getTransactions
argument_list|()
operator|.
name|remove
argument_list|(
name|xid
argument_list|)
expr_stmt|;
comment|// Sync on transaction store to avoid out of order messages in the cursor
comment|// https://issues.apache.org/activemq/browse/AMQ-2594
try|try
block|{
name|transactionStore
operator|.
name|commit
argument_list|(
name|getTransactionId
argument_list|()
argument_list|,
literal|false
argument_list|,
name|preCommitTask
argument_list|,
name|postCommitTask
argument_list|)
expr_stmt|;
name|this
operator|.
name|waitPostCommitDone
argument_list|(
name|postCommitTask
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"Store COMMIT FAILED: "
argument_list|,
name|t
argument_list|)
expr_stmt|;
name|rollback
argument_list|()
expr_stmt|;
name|XAException
name|xae
init|=
operator|new
name|XAException
argument_list|(
literal|"STORE COMMIT FAILED: Transaction rolled back."
argument_list|)
decl_stmt|;
name|xae
operator|.
name|errorCode
operator|=
name|XAException
operator|.
name|XA_RBOTHER
expr_stmt|;
name|xae
operator|.
name|initCause
argument_list|(
name|t
argument_list|)
expr_stmt|;
throw|throw
name|xae
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|rollback
parameter_list|()
throws|throws
name|XAException
throws|,
name|IOException
block|{
if|if
condition|(
name|LOG
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"rollback: "
operator|+
name|xid
operator|+
literal|" syncCount: "
operator|+
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|setState
argument_list|(
name|Transaction
operator|.
name|FINISHED_STATE
argument_list|)
expr_stmt|;
name|context
operator|.
name|getTransactions
argument_list|()
operator|.
name|remove
argument_list|(
name|xid
argument_list|)
expr_stmt|;
comment|// Sync on transaction store to avoid out of order messages in the cursor
comment|// https://issues.apache.org/activemq/browse/AMQ-2594
synchronized|synchronized
init|(
name|transactionStore
init|)
block|{
name|transactionStore
operator|.
name|rollback
argument_list|(
name|getTransactionId
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|fireAfterRollback
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"POST ROLLBACK FAILED: "
argument_list|,
name|e
argument_list|)
expr_stmt|;
name|XAException
name|xae
init|=
operator|new
name|XAException
argument_list|(
literal|"POST ROLLBACK FAILED"
argument_list|)
decl_stmt|;
name|xae
operator|.
name|errorCode
operator|=
name|XAException
operator|.
name|XAER_RMERR
expr_stmt|;
name|xae
operator|.
name|initCause
argument_list|(
name|e
argument_list|)
expr_stmt|;
throw|throw
name|xae
throw|;
block|}
block|}
block|}
annotation|@
name|Override
specifier|public
name|int
name|prepare
parameter_list|()
throws|throws
name|XAException
block|{
name|XAException
name|xae
init|=
operator|new
name|XAException
argument_list|(
literal|"Prepare not implemented on Local Transactions."
argument_list|)
decl_stmt|;
name|xae
operator|.
name|errorCode
operator|=
name|XAException
operator|.
name|XAER_RMERR
expr_stmt|;
throw|throw
name|xae
throw|;
block|}
annotation|@
name|Override
specifier|public
name|TransactionId
name|getTransactionId
parameter_list|()
block|{
return|return
name|xid
return|;
block|}
annotation|@
name|Override
specifier|public
name|Log
name|getLog
parameter_list|()
block|{
return|return
name|LOG
return|;
block|}
block|}
end_class

end_unit

