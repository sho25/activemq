begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Copyright 2005-2006 The Apache Software Foundation  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|policy
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|TopicSubscription
import|;
end_import

begin_comment
comment|/**  * This PendingMessageLimitStrategy sets the maximum pending message limit value to be  * a multiplier of the prefetch limit of the subscription.  *   * @org.apache.xbean.XBean  *   * @version $Revision$  */
end_comment

begin_class
specifier|public
class|class
name|PrefetchRatePendingMessageLimitStrategy
implements|implements
name|PendingMessageLimitStrategy
block|{
specifier|private
name|double
name|multiplier
init|=
literal|0.5
decl_stmt|;
specifier|public
name|int
name|getMaximumPendingMessageLimit
parameter_list|(
name|TopicSubscription
name|subscription
parameter_list|)
block|{
name|int
name|prefetchSize
init|=
name|subscription
operator|.
name|getConsumerInfo
argument_list|()
operator|.
name|getPrefetchSize
argument_list|()
decl_stmt|;
return|return
call|(
name|int
call|)
argument_list|(
name|prefetchSize
operator|*
name|multiplier
argument_list|)
return|;
block|}
specifier|public
name|double
name|getMultiplier
parameter_list|()
block|{
return|return
name|multiplier
return|;
block|}
comment|/**      * Sets the multiplier of the prefetch size which will be used to define the maximum number of pending      * messages for non-durable topics before messages are discarded.      */
specifier|public
name|void
name|setMultiplier
parameter_list|(
name|double
name|rate
parameter_list|)
block|{
name|this
operator|.
name|multiplier
operator|=
name|rate
expr_stmt|;
block|}
block|}
end_class

end_unit

