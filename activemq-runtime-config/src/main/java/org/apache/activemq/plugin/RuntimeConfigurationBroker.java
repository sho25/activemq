begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|plugin
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|JMException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|ObjectName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|XMLConstants
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|Unmarshaller
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|DocumentBuilder
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|DocumentBuilderFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|ParserConfigurationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|Source
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|stream
operator|.
name|StreamSource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|validation
operator|.
name|Schema
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|validation
operator|.
name|SchemaFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|Broker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|jmx
operator|.
name|ManagementContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|plugin
operator|.
name|jmx
operator|.
name|RuntimeConfigurationView
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|schema
operator|.
name|core
operator|.
name|DtoBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|spring
operator|.
name|Utils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|core
operator|.
name|io
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_class
specifier|public
class|class
name|RuntimeConfigurationBroker
extends|extends
name|AbstractRuntimeConfigurationBroker
block|{
specifier|public
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|RuntimeConfigurationBroker
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|objectNamePropsAppendage
init|=
literal|",service=RuntimeConfiguration,name=Plugin"
decl_stmt|;
name|PropertiesPlaceHolderUtil
name|placeHolderUtil
init|=
literal|null
decl_stmt|;
specifier|private
name|long
name|checkPeriod
decl_stmt|;
specifier|private
name|long
name|lastModified
init|=
operator|-
literal|1
decl_stmt|;
specifier|private
name|Resource
name|configToMonitor
decl_stmt|;
specifier|private
name|DtoBroker
name|currentConfiguration
decl_stmt|;
specifier|private
name|Schema
name|schema
decl_stmt|;
specifier|public
name|RuntimeConfigurationBroker
parameter_list|(
name|Broker
name|next
parameter_list|)
block|{
name|super
argument_list|(
name|next
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|start
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|start
argument_list|()
expr_stmt|;
try|try
block|{
name|BrokerContext
name|brokerContext
init|=
name|next
operator|.
name|getBrokerService
argument_list|()
operator|.
name|getBrokerContext
argument_list|()
decl_stmt|;
if|if
condition|(
name|brokerContext
operator|!=
literal|null
condition|)
block|{
name|configToMonitor
operator|=
name|Utils
operator|.
name|resourceFromString
argument_list|(
name|brokerContext
operator|.
name|getConfigurationUrl
argument_list|()
argument_list|)
expr_stmt|;
name|info
argument_list|(
literal|"Configuration "
operator|+
name|configToMonitor
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Null BrokerContext; impossible to determine configuration url resource from broker, updates cannot be tracked"
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|error
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"failed to determine configuration url resource from broker, updates cannot be tracked"
argument_list|,
name|error
argument_list|)
expr_stmt|;
block|}
name|currentConfiguration
operator|=
name|loadConfiguration
argument_list|(
name|configToMonitor
argument_list|)
expr_stmt|;
name|monitorModification
argument_list|(
name|configToMonitor
argument_list|)
expr_stmt|;
name|registerMbean
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|registerMbean
parameter_list|()
block|{
if|if
condition|(
name|getBrokerService
argument_list|()
operator|.
name|isUseJmx
argument_list|()
condition|)
block|{
name|ManagementContext
name|managementContext
init|=
name|getBrokerService
argument_list|()
operator|.
name|getManagementContext
argument_list|()
decl_stmt|;
try|try
block|{
name|objectName
operator|=
operator|new
name|ObjectName
argument_list|(
name|getBrokerService
argument_list|()
operator|.
name|getBrokerObjectName
argument_list|()
operator|.
name|toString
argument_list|()
operator|+
name|objectNamePropsAppendage
argument_list|)
expr_stmt|;
name|managementContext
operator|.
name|registerMBean
argument_list|(
operator|new
name|RuntimeConfigurationView
argument_list|(
name|this
argument_list|)
argument_list|,
name|objectName
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ignored
parameter_list|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"failed to register RuntimeConfigurationMBean"
argument_list|,
name|ignored
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Override
specifier|protected
name|void
name|unregisterMbean
parameter_list|()
block|{
if|if
condition|(
name|objectName
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|getBrokerService
argument_list|()
operator|.
name|getManagementContext
argument_list|()
operator|.
name|unregisterMBean
argument_list|(
name|objectName
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JMException
name|ignored
parameter_list|)
block|{             }
block|}
block|}
specifier|public
name|String
name|updateNow
parameter_list|()
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Manual configuration update triggered"
argument_list|)
expr_stmt|;
name|infoString
operator|=
literal|""
expr_stmt|;
name|applyModifications
argument_list|(
name|configToMonitor
argument_list|)
expr_stmt|;
name|String
name|result
init|=
name|infoString
decl_stmt|;
name|infoString
operator|=
literal|null
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|private
name|void
name|monitorModification
parameter_list|(
specifier|final
name|Resource
name|configToMonitor
parameter_list|)
block|{
name|monitorTask
operator|=
operator|new
name|Runnable
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
try|try
block|{
if|if
condition|(
name|configToMonitor
operator|.
name|lastModified
argument_list|()
operator|>
name|lastModified
condition|)
block|{
name|applyModifications
argument_list|(
name|configToMonitor
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Failed to determine lastModified time on configuration: "
operator|+
name|configToMonitor
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
expr_stmt|;
if|if
condition|(
name|lastModified
operator|>
literal|0
operator|&&
name|checkPeriod
operator|>
literal|0
condition|)
block|{
name|this
operator|.
name|getBrokerService
argument_list|()
operator|.
name|getScheduler
argument_list|()
operator|.
name|executePeriodically
argument_list|(
name|monitorTask
argument_list|,
name|checkPeriod
argument_list|)
expr_stmt|;
name|info
argument_list|(
literal|"Monitoring for updates (every "
operator|+
name|checkPeriod
operator|+
literal|"millis) : "
operator|+
name|configToMonitor
operator|+
literal|", lastUpdate: "
operator|+
operator|new
name|Date
argument_list|(
name|lastModified
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|applyModifications
parameter_list|(
name|Resource
name|configToMonitor
parameter_list|)
block|{
name|DtoBroker
name|changed
init|=
name|loadConfiguration
argument_list|(
name|configToMonitor
argument_list|)
decl_stmt|;
if|if
condition|(
name|changed
operator|!=
literal|null
operator|&&
operator|!
name|currentConfiguration
operator|.
name|equals
argument_list|(
name|changed
argument_list|)
condition|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"change in "
operator|+
name|configToMonitor
operator|+
literal|" at: "
operator|+
operator|new
name|Date
argument_list|(
name|lastModified
argument_list|)
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"current:"
operator|+
name|filterPasswords
argument_list|(
name|currentConfiguration
argument_list|)
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"new    :"
operator|+
name|filterPasswords
argument_list|(
name|changed
argument_list|)
argument_list|)
expr_stmt|;
name|processSelectiveChanges
argument_list|(
name|currentConfiguration
argument_list|,
name|changed
argument_list|)
expr_stmt|;
name|currentConfiguration
operator|=
name|changed
expr_stmt|;
block|}
else|else
block|{
name|info
argument_list|(
literal|"No material change to configuration in "
operator|+
name|configToMonitor
operator|+
literal|" at: "
operator|+
operator|new
name|Date
argument_list|(
name|lastModified
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|processSelectiveChanges
parameter_list|(
name|DtoBroker
name|currentConfiguration
parameter_list|,
name|DtoBroker
name|modifiedConfiguration
parameter_list|)
block|{
for|for
control|(
name|Class
name|upDatable
range|:
operator|new
name|Class
index|[]
block|{
name|DtoBroker
operator|.
name|DestinationPolicy
operator|.
name|class
block|,
name|DtoBroker
operator|.
name|NetworkConnectors
operator|.
name|class
block|,
name|DtoBroker
operator|.
name|DestinationInterceptors
operator|.
name|class
block|,
name|DtoBroker
operator|.
name|Plugins
operator|.
name|class
block|,
name|DtoBroker
operator|.
name|Destinations
operator|.
name|class
block|}
control|)
block|{
name|processChanges
argument_list|(
name|currentConfiguration
argument_list|,
name|modifiedConfiguration
argument_list|,
name|upDatable
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|processChanges
parameter_list|(
name|DtoBroker
name|currentConfiguration
parameter_list|,
name|DtoBroker
name|modifiedConfiguration
parameter_list|,
name|Class
name|upDatable
parameter_list|)
block|{
name|ConfigurationProcessor
name|processor
init|=
name|ProcessorFactory
operator|.
name|createProcessor
argument_list|(
name|this
argument_list|,
name|upDatable
argument_list|)
decl_stmt|;
name|processor
operator|.
name|processChanges
argument_list|(
name|currentConfiguration
argument_list|,
name|modifiedConfiguration
argument_list|)
expr_stmt|;
block|}
specifier|private
name|DtoBroker
name|loadConfiguration
parameter_list|(
name|Resource
name|configToMonitor
parameter_list|)
block|{
name|DtoBroker
name|jaxbConfig
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|configToMonitor
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|JAXBContext
name|context
init|=
name|JAXBContext
operator|.
name|newInstance
argument_list|(
name|DtoBroker
operator|.
name|class
argument_list|)
decl_stmt|;
name|Unmarshaller
name|unMarshaller
init|=
name|context
operator|.
name|createUnmarshaller
argument_list|()
decl_stmt|;
name|unMarshaller
operator|.
name|setSchema
argument_list|(
name|getSchema
argument_list|()
argument_list|)
expr_stmt|;
comment|// skip beans and pull out the broker node to validate
name|DocumentBuilderFactory
name|dbf
init|=
name|DocumentBuilderFactory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|dbf
operator|.
name|setNamespaceAware
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|DocumentBuilder
name|db
init|=
name|dbf
operator|.
name|newDocumentBuilder
argument_list|()
decl_stmt|;
name|Document
name|doc
init|=
name|db
operator|.
name|parse
argument_list|(
name|configToMonitor
operator|.
name|getInputStream
argument_list|()
argument_list|)
decl_stmt|;
name|Node
name|brokerRootNode
init|=
name|doc
operator|.
name|getElementsByTagNameNS
argument_list|(
literal|"*"
argument_list|,
literal|"broker"
argument_list|)
operator|.
name|item
argument_list|(
literal|0
argument_list|)
decl_stmt|;
if|if
condition|(
name|brokerRootNode
operator|!=
literal|null
condition|)
block|{
name|JAXBElement
argument_list|<
name|DtoBroker
argument_list|>
name|brokerJAXBElement
init|=
name|unMarshaller
operator|.
name|unmarshal
argument_list|(
name|brokerRootNode
argument_list|,
name|DtoBroker
operator|.
name|class
argument_list|)
decl_stmt|;
name|jaxbConfig
operator|=
name|brokerJAXBElement
operator|.
name|getValue
argument_list|()
expr_stmt|;
comment|// if we can parse we can track mods
name|lastModified
operator|=
name|configToMonitor
operator|.
name|lastModified
argument_list|()
expr_stmt|;
name|loadPropertiesPlaceHolderSupport
argument_list|(
name|doc
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|info
argument_list|(
literal|"Failed to find 'broker' element by tag in: "
operator|+
name|configToMonitor
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|info
argument_list|(
literal|"Failed to access: "
operator|+
name|configToMonitor
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JAXBException
name|e
parameter_list|)
block|{
name|info
argument_list|(
literal|"Failed to parse: "
operator|+
name|configToMonitor
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ParserConfigurationException
name|e
parameter_list|)
block|{
name|info
argument_list|(
literal|"Failed to document parse: "
operator|+
name|configToMonitor
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SAXException
name|e
parameter_list|)
block|{
name|info
argument_list|(
literal|"Failed to find broker element in: "
operator|+
name|configToMonitor
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|info
argument_list|(
literal|"Unexpected exception during load of: "
operator|+
name|configToMonitor
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|jaxbConfig
return|;
block|}
specifier|private
name|void
name|loadPropertiesPlaceHolderSupport
parameter_list|(
name|Document
name|doc
parameter_list|)
block|{
name|BrokerContext
name|brokerContext
init|=
name|getBrokerService
argument_list|()
operator|.
name|getBrokerContext
argument_list|()
decl_stmt|;
if|if
condition|(
name|brokerContext
operator|!=
literal|null
condition|)
block|{
name|Properties
name|initialProperties
init|=
operator|new
name|Properties
argument_list|(
name|System
operator|.
name|getProperties
argument_list|()
argument_list|)
decl_stmt|;
name|placeHolderUtil
operator|=
operator|new
name|PropertiesPlaceHolderUtil
argument_list|(
name|initialProperties
argument_list|)
expr_stmt|;
name|placeHolderUtil
operator|.
name|mergeProperties
argument_list|(
name|doc
argument_list|,
name|initialProperties
argument_list|,
name|brokerContext
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|Schema
name|getSchema
parameter_list|()
throws|throws
name|SAXException
throws|,
name|IOException
block|{
if|if
condition|(
name|schema
operator|==
literal|null
condition|)
block|{
name|SchemaFactory
name|schemaFactory
init|=
name|SchemaFactory
operator|.
name|newInstance
argument_list|(
name|XMLConstants
operator|.
name|W3C_XML_SCHEMA_NS_URI
argument_list|)
decl_stmt|;
name|ArrayList
argument_list|<
name|StreamSource
argument_list|>
name|schemas
init|=
operator|new
name|ArrayList
argument_list|<
name|StreamSource
argument_list|>
argument_list|()
decl_stmt|;
name|schemas
operator|.
name|add
argument_list|(
operator|new
name|StreamSource
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/activemq.xsd"
argument_list|)
operator|.
name|toExternalForm
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|schemas
operator|.
name|add
argument_list|(
operator|new
name|StreamSource
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/org/springframework/beans/factory/xml/spring-beans-3.0.xsd"
argument_list|)
operator|.
name|toExternalForm
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|schema
operator|=
name|schemaFactory
operator|.
name|newSchema
argument_list|(
name|schemas
operator|.
name|toArray
argument_list|(
operator|new
name|Source
index|[]
block|{}
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|schema
return|;
block|}
specifier|public
name|long
name|getLastModified
parameter_list|()
block|{
return|return
name|lastModified
return|;
block|}
specifier|public
name|Resource
name|getConfigToMonitor
parameter_list|()
block|{
return|return
name|configToMonitor
return|;
block|}
specifier|public
name|long
name|getCheckPeriod
parameter_list|()
block|{
return|return
name|checkPeriod
return|;
block|}
specifier|public
name|void
name|setCheckPeriod
parameter_list|(
name|long
name|checkPeriod
parameter_list|)
block|{
name|this
operator|.
name|checkPeriod
operator|=
name|checkPeriod
expr_stmt|;
block|}
block|}
end_class

end_unit

