begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|amqp
operator|.
name|client
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|EnumSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|qpid
operator|.
name|proton
operator|.
name|amqp
operator|.
name|transport
operator|.
name|ErrorCondition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|qpid
operator|.
name|proton
operator|.
name|engine
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|qpid
operator|.
name|proton
operator|.
name|engine
operator|.
name|EndpointState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|qpid
operator|.
name|proton
operator|.
name|engine
operator|.
name|Receiver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|qpid
operator|.
name|proton
operator|.
name|engine
operator|.
name|Sender
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|qpid
operator|.
name|proton
operator|.
name|engine
operator|.
name|Session
import|;
end_import

begin_comment
comment|/**  * Unmodifiable Session wrapper used to prevent test code from accidentally  * modifying Session state.  */
end_comment

begin_class
specifier|public
class|class
name|UnmodifiableSession
implements|implements
name|Session
block|{
specifier|private
specifier|final
name|Session
name|session
decl_stmt|;
specifier|public
name|UnmodifiableSession
parameter_list|(
name|Session
name|session
parameter_list|)
block|{
name|this
operator|.
name|session
operator|=
name|session
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|EndpointState
name|getLocalState
parameter_list|()
block|{
return|return
name|session
operator|.
name|getLocalState
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|EndpointState
name|getRemoteState
parameter_list|()
block|{
return|return
name|session
operator|.
name|getRemoteState
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|ErrorCondition
name|getCondition
parameter_list|()
block|{
return|return
name|session
operator|.
name|getCondition
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setCondition
parameter_list|(
name|ErrorCondition
name|condition
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Session"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|ErrorCondition
name|getRemoteCondition
parameter_list|()
block|{
return|return
name|session
operator|.
name|getRemoteCondition
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|free
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Session"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|open
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Session"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Session"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setContext
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Session"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Object
name|getContext
parameter_list|()
block|{
return|return
name|session
operator|.
name|getContext
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Sender
name|sender
parameter_list|(
name|String
name|name
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Session"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Receiver
name|receiver
parameter_list|(
name|String
name|name
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Session"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Session
name|next
parameter_list|(
name|EnumSet
argument_list|<
name|EndpointState
argument_list|>
name|local
parameter_list|,
name|EnumSet
argument_list|<
name|EndpointState
argument_list|>
name|remote
parameter_list|)
block|{
name|Session
name|next
init|=
name|session
operator|.
name|next
argument_list|(
name|local
argument_list|,
name|remote
argument_list|)
decl_stmt|;
if|if
condition|(
name|next
operator|!=
literal|null
condition|)
block|{
name|next
operator|=
operator|new
name|UnmodifiableSession
argument_list|(
name|next
argument_list|)
expr_stmt|;
block|}
return|return
name|next
return|;
block|}
annotation|@
name|Override
specifier|public
name|Connection
name|getConnection
parameter_list|()
block|{
return|return
operator|new
name|UnmodifiableConnection
argument_list|(
name|session
operator|.
name|getConnection
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getIncomingCapacity
parameter_list|()
block|{
return|return
name|session
operator|.
name|getIncomingCapacity
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setIncomingCapacity
parameter_list|(
name|int
name|bytes
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Cannot alter the Session"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getIncomingBytes
parameter_list|()
block|{
return|return
name|session
operator|.
name|getIncomingBytes
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getOutgoingBytes
parameter_list|()
block|{
return|return
name|session
operator|.
name|getOutgoingBytes
argument_list|()
return|;
block|}
block|}
end_class

end_unit

