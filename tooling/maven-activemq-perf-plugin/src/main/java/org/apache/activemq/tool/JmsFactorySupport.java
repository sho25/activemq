begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Copyright 2005-2006 The Apache Software Foundation  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|tool
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|tool
operator|.
name|spi
operator|.
name|SPIConnectionFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|ConnectionFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|JMSException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_class
specifier|public
class|class
name|JmsFactorySupport
block|{
specifier|private
specifier|static
specifier|final
name|Log
name|log
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|JmsFactorySupport
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PREFIX_CONFIG_FACTORY
init|=
literal|"factory."
decl_stmt|;
specifier|private
name|SPIConnectionFactory
name|spiFactory
decl_stmt|;
specifier|protected
name|ConnectionFactory
name|jmsFactory
decl_stmt|;
specifier|protected
name|Properties
name|jmsFactorySettings
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
specifier|public
name|ConnectionFactory
name|createConnectionFactory
parameter_list|(
name|String
name|spiClass
parameter_list|)
throws|throws
name|JMSException
block|{
name|jmsFactory
operator|=
name|loadJmsFactory
argument_list|(
name|spiClass
argument_list|,
name|jmsFactorySettings
argument_list|)
expr_stmt|;
return|return
name|jmsFactory
return|;
block|}
specifier|protected
name|ConnectionFactory
name|loadJmsFactory
parameter_list|(
name|String
name|spiClass
parameter_list|,
name|Properties
name|factorySettings
parameter_list|)
throws|throws
name|JMSException
block|{
try|try
block|{
name|Class
name|spi
init|=
name|Class
operator|.
name|forName
argument_list|(
name|spiClass
argument_list|)
decl_stmt|;
name|spiFactory
operator|=
operator|(
name|SPIConnectionFactory
operator|)
name|spi
operator|.
name|newInstance
argument_list|()
expr_stmt|;
name|ConnectionFactory
name|jmsFactory
init|=
name|spiFactory
operator|.
name|createConnectionFactory
argument_list|(
name|factorySettings
argument_list|)
decl_stmt|;
name|log
operator|.
name|debug
argument_list|(
literal|"Created: "
operator|+
name|jmsFactory
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|" using SPIConnectionFactory: "
operator|+
name|spiFactory
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|jmsFactory
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|JMSException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
throw|;
block|}
block|}
specifier|public
name|ConnectionFactory
name|getJmsFactory
parameter_list|()
block|{
return|return
name|jmsFactory
return|;
block|}
specifier|public
name|Properties
name|getJmsFactorySettings
parameter_list|()
block|{
return|return
name|jmsFactorySettings
return|;
block|}
specifier|public
name|void
name|setJmsFactorySettings
parameter_list|(
name|Properties
name|jmsFactorySettings
parameter_list|)
block|{
name|this
operator|.
name|jmsFactorySettings
operator|=
name|jmsFactorySettings
expr_stmt|;
try|try
block|{
name|spiFactory
operator|.
name|configureConnectionFactory
argument_list|(
name|jmsFactory
argument_list|,
name|jmsFactorySettings
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|log
operator|.
name|warn
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|Properties
name|getSettings
parameter_list|()
block|{
return|return
name|jmsFactorySettings
return|;
block|}
specifier|public
name|void
name|setSettings
parameter_list|(
name|Properties
name|settings
parameter_list|)
block|{
for|for
control|(
name|Iterator
name|i
init|=
name|settings
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|String
name|key
init|=
operator|(
name|String
operator|)
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
name|String
name|val
init|=
name|settings
operator|.
name|getProperty
argument_list|(
name|key
argument_list|)
decl_stmt|;
name|setProperty
argument_list|(
name|key
argument_list|,
name|val
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|spiFactory
operator|.
name|configureConnectionFactory
argument_list|(
name|jmsFactory
argument_list|,
name|jmsFactorySettings
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|log
operator|.
name|warn
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|setProperty
parameter_list|(
name|String
name|key
parameter_list|,
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|key
operator|.
name|startsWith
argument_list|(
name|PREFIX_CONFIG_FACTORY
argument_list|)
condition|)
block|{
name|jmsFactorySettings
operator|.
name|setProperty
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|log
operator|.
name|warn
argument_list|(
literal|"Unknown setting: "
operator|+
name|key
operator|+
literal|"="
operator|+
name|value
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

