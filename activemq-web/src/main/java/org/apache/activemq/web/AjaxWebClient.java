begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|web
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageConsumer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|MessageAvailableConsumer
import|;
end_import

begin_comment
comment|/*  * Collection of all data needed to fulfill requests from a single web client.  */
end_comment

begin_class
specifier|public
class|class
name|AjaxWebClient
extends|extends
name|WebClient
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|AjaxWebClient
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// an instance which has not been accessed in this many milliseconds can be removed.
specifier|final
name|long
name|expireAfter
init|=
literal|60
operator|*
literal|1000
decl_stmt|;
name|Map
argument_list|<
name|MessageAvailableConsumer
argument_list|,
name|String
argument_list|>
name|idMap
decl_stmt|;
name|Map
argument_list|<
name|MessageAvailableConsumer
argument_list|,
name|String
argument_list|>
name|destinationNameMap
decl_stmt|;
name|AjaxListener
name|listener
decl_stmt|;
name|Long
name|lastAccessed
decl_stmt|;
specifier|public
name|AjaxWebClient
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|,
name|long
name|maximumReadTimeout
parameter_list|)
block|{
comment|// 'id' meaning the first argument to the JavaScript addListener() function.
comment|// used to indicate which JS callback should handle a given message.
name|this
operator|.
name|idMap
operator|=
operator|new
name|HashMap
argument_list|<
name|MessageAvailableConsumer
argument_list|,
name|String
argument_list|>
argument_list|()
expr_stmt|;
comment|// map consumers to destinations like topic://test, etc.
name|this
operator|.
name|destinationNameMap
operator|=
operator|new
name|HashMap
argument_list|<
name|MessageAvailableConsumer
argument_list|,
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|this
operator|.
name|listener
operator|=
operator|new
name|AjaxListener
argument_list|(
name|this
argument_list|,
name|maximumReadTimeout
argument_list|)
expr_stmt|;
name|this
operator|.
name|lastAccessed
operator|=
name|this
operator|.
name|getNow
argument_list|()
expr_stmt|;
block|}
specifier|public
name|Map
argument_list|<
name|MessageAvailableConsumer
argument_list|,
name|String
argument_list|>
name|getIdMap
parameter_list|()
block|{
return|return
name|this
operator|.
name|idMap
return|;
block|}
specifier|public
name|Map
argument_list|<
name|MessageAvailableConsumer
argument_list|,
name|String
argument_list|>
name|getDestinationNameMap
parameter_list|()
block|{
return|return
name|this
operator|.
name|destinationNameMap
return|;
block|}
specifier|public
name|AjaxListener
name|getListener
parameter_list|()
block|{
return|return
name|this
operator|.
name|listener
return|;
block|}
specifier|public
name|long
name|getMillisSinceLastAccessed
parameter_list|()
block|{
return|return
name|this
operator|.
name|getNow
argument_list|()
operator|-
name|this
operator|.
name|lastAccessed
return|;
block|}
specifier|public
name|void
name|updateLastAccessed
parameter_list|()
block|{
name|this
operator|.
name|lastAccessed
operator|=
name|this
operator|.
name|getNow
argument_list|()
expr_stmt|;
block|}
specifier|public
name|boolean
name|closeIfExpired
parameter_list|()
block|{
name|long
name|now
init|=
operator|(
operator|new
name|Date
argument_list|()
operator|)
operator|.
name|getTime
argument_list|()
decl_stmt|;
name|boolean
name|returnVal
init|=
literal|false
decl_stmt|;
if|if
condition|(
name|this
operator|.
name|getMillisSinceLastAccessed
argument_list|()
operator|>
name|this
operator|.
name|expireAfter
condition|)
block|{
name|this
operator|.
name|close
argument_list|()
expr_stmt|;
name|returnVal
operator|=
literal|true
expr_stmt|;
block|}
return|return
name|returnVal
return|;
block|}
specifier|protected
name|long
name|getNow
parameter_list|()
block|{
return|return
operator|(
operator|new
name|Date
argument_list|()
operator|)
operator|.
name|getTime
argument_list|()
return|;
block|}
block|}
end_class

end_unit

