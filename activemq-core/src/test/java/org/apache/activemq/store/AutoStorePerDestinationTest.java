begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadb
operator|.
name|FilteredKahaDBPersistenceAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadb
operator|.
name|MultiKahaDBPersistenceAdapter
import|;
end_import

begin_class
specifier|public
class|class
name|AutoStorePerDestinationTest
extends|extends
name|StorePerDestinationTest
block|{
comment|// use perDestinationFlag to get multiple stores from one match all adapter
specifier|public
name|void
name|prepareBrokerWithMultiStore
parameter_list|(
name|boolean
name|deleteAllMessages
parameter_list|)
throws|throws
name|Exception
block|{
name|MultiKahaDBPersistenceAdapter
name|multiKahaDBPersistenceAdapter
init|=
operator|new
name|MultiKahaDBPersistenceAdapter
argument_list|()
decl_stmt|;
if|if
condition|(
name|deleteAllMessages
condition|)
block|{
name|multiKahaDBPersistenceAdapter
operator|.
name|deleteAllMessages
argument_list|()
expr_stmt|;
block|}
name|ArrayList
argument_list|<
name|FilteredKahaDBPersistenceAdapter
argument_list|>
name|adapters
init|=
operator|new
name|ArrayList
argument_list|<
name|FilteredKahaDBPersistenceAdapter
argument_list|>
argument_list|()
decl_stmt|;
name|FilteredKahaDBPersistenceAdapter
name|template
init|=
operator|new
name|FilteredKahaDBPersistenceAdapter
argument_list|()
decl_stmt|;
name|template
operator|.
name|setPersistenceAdapter
argument_list|(
name|createStore
argument_list|(
name|deleteAllMessages
argument_list|)
argument_list|)
expr_stmt|;
name|template
operator|.
name|setPerDestination
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|adapters
operator|.
name|add
argument_list|(
name|template
argument_list|)
expr_stmt|;
name|multiKahaDBPersistenceAdapter
operator|.
name|setFilteredPersistenceAdapters
argument_list|(
name|adapters
argument_list|)
expr_stmt|;
name|brokerService
operator|=
name|createBroker
argument_list|(
name|multiKahaDBPersistenceAdapter
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

