begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|ws
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|stomp
operator|.
name|Stomp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|util
operator|.
name|ssl
operator|.
name|SslContextFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|websocket
operator|.
name|client
operator|.
name|ClientUpgradeRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|websocket
operator|.
name|client
operator|.
name|WebSocketClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Test STOMP sub protocol detection.  */
end_comment

begin_class
specifier|public
class|class
name|StompWSSubProtocolTest
extends|extends
name|WSTransportTestSupport
block|{
specifier|protected
name|WebSocketClient
name|wsClient
decl_stmt|;
specifier|protected
name|StompWSConnection
name|wsStompConnection
decl_stmt|;
annotation|@
name|Override
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|wsStompConnection
operator|=
operator|new
name|StompWSConnection
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|wsStompConnection
operator|!=
literal|null
condition|)
block|{
name|wsStompConnection
operator|.
name|close
argument_list|()
expr_stmt|;
name|wsStompConnection
operator|=
literal|null
expr_stmt|;
name|wsClient
operator|=
literal|null
expr_stmt|;
block|}
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|60000
argument_list|)
specifier|public
name|void
name|testConnectV12
parameter_list|()
throws|throws
name|Exception
block|{
name|connect
argument_list|(
literal|"v12.stomp"
argument_list|)
expr_stmt|;
name|String
name|connectFrame
init|=
literal|"STOMP\n"
operator|+
literal|"accept-version:1.2\n"
operator|+
literal|"host:localhost\n"
operator|+
literal|"\n"
operator|+
name|Stomp
operator|.
name|NULL
decl_stmt|;
name|wsStompConnection
operator|.
name|sendRawFrame
argument_list|(
name|connectFrame
argument_list|)
expr_stmt|;
name|assertSubProtocol
argument_list|(
literal|"v12.stomp"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|60000
argument_list|)
specifier|public
name|void
name|testConnectV11
parameter_list|()
throws|throws
name|Exception
block|{
name|connect
argument_list|(
literal|"v11.stomp"
argument_list|)
expr_stmt|;
name|String
name|connectFrame
init|=
literal|"STOMP\n"
operator|+
literal|"accept-version:1.2\n"
operator|+
literal|"host:localhost\n"
operator|+
literal|"\n"
operator|+
name|Stomp
operator|.
name|NULL
decl_stmt|;
name|wsStompConnection
operator|.
name|sendRawFrame
argument_list|(
name|connectFrame
argument_list|)
expr_stmt|;
name|assertSubProtocol
argument_list|(
literal|"v11.stomp"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|60000
argument_list|)
specifier|public
name|void
name|testConnectV10
parameter_list|()
throws|throws
name|Exception
block|{
name|connect
argument_list|(
literal|"v10.stomp"
argument_list|)
expr_stmt|;
name|String
name|connectFrame
init|=
literal|"STOMP\n"
operator|+
literal|"accept-version:1.2\n"
operator|+
literal|"host:localhost\n"
operator|+
literal|"\n"
operator|+
name|Stomp
operator|.
name|NULL
decl_stmt|;
name|wsStompConnection
operator|.
name|sendRawFrame
argument_list|(
name|connectFrame
argument_list|)
expr_stmt|;
name|assertSubProtocol
argument_list|(
literal|"v10.stomp"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|60000
argument_list|)
specifier|public
name|void
name|testConnectNone
parameter_list|()
throws|throws
name|Exception
block|{
name|connect
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|String
name|connectFrame
init|=
literal|"STOMP\n"
operator|+
literal|"accept-version:1.2\n"
operator|+
literal|"host:localhost\n"
operator|+
literal|"\n"
operator|+
name|Stomp
operator|.
name|NULL
decl_stmt|;
name|wsStompConnection
operator|.
name|sendRawFrame
argument_list|(
name|connectFrame
argument_list|)
expr_stmt|;
name|assertSubProtocol
argument_list|(
literal|"stomp"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|60000
argument_list|)
specifier|public
name|void
name|testConnectMultiple
parameter_list|()
throws|throws
name|Exception
block|{
name|connect
argument_list|(
literal|"v10.stomp,v11.stomp"
argument_list|)
expr_stmt|;
name|String
name|connectFrame
init|=
literal|"STOMP\n"
operator|+
literal|"accept-version:1.2\n"
operator|+
literal|"host:localhost\n"
operator|+
literal|"\n"
operator|+
name|Stomp
operator|.
name|NULL
decl_stmt|;
name|wsStompConnection
operator|.
name|sendRawFrame
argument_list|(
name|connectFrame
argument_list|)
expr_stmt|;
name|assertSubProtocol
argument_list|(
literal|"v11.stomp"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|60000
argument_list|)
specifier|public
name|void
name|testConnectInvalid
parameter_list|()
throws|throws
name|Exception
block|{
name|connect
argument_list|(
literal|"invalid"
argument_list|)
expr_stmt|;
name|String
name|connectFrame
init|=
literal|"STOMP\n"
operator|+
literal|"accept-version:1.2\n"
operator|+
literal|"host:localhost\n"
operator|+
literal|"\n"
operator|+
name|Stomp
operator|.
name|NULL
decl_stmt|;
name|wsStompConnection
operator|.
name|sendRawFrame
argument_list|(
name|connectFrame
argument_list|)
expr_stmt|;
name|assertSubProtocol
argument_list|(
literal|"stomp"
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|connect
parameter_list|(
name|String
name|subProtocol
parameter_list|)
throws|throws
name|Exception
block|{
name|ClientUpgradeRequest
name|request
init|=
operator|new
name|ClientUpgradeRequest
argument_list|()
decl_stmt|;
if|if
condition|(
name|subProtocol
operator|!=
literal|null
condition|)
block|{
name|request
operator|.
name|setSubProtocols
argument_list|(
name|subProtocol
argument_list|)
expr_stmt|;
block|}
name|wsClient
operator|=
operator|new
name|WebSocketClient
argument_list|(
operator|new
name|SslContextFactory
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|wsClient
operator|.
name|start
argument_list|()
expr_stmt|;
name|wsClient
operator|.
name|connect
argument_list|(
name|wsStompConnection
argument_list|,
name|wsConnectUri
argument_list|,
name|request
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|wsStompConnection
operator|.
name|awaitConnection
argument_list|(
literal|30
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Could not connect to STOMP WS endpoint"
argument_list|)
throw|;
block|}
block|}
specifier|protected
name|void
name|assertSubProtocol
parameter_list|(
name|String
name|subProtocol
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|incoming
init|=
name|wsStompConnection
operator|.
name|receive
argument_list|(
literal|30
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|incoming
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|incoming
operator|.
name|startsWith
argument_list|(
literal|"CONNECTED"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|subProtocol
argument_list|,
name|wsStompConnection
operator|.
name|getConnection
argument_list|()
operator|.
name|getUpgradeResponse
argument_list|()
operator|.
name|getAcceptedSubProtocol
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

