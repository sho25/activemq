begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements. See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License. You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|jmx
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CountDownLatch
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicReference
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|MBeanServerConnection
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|ObjectName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|TestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|PersistenceAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadb
operator|.
name|KahaDBPersistenceAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|xbean
operator|.
name|XBeanBrokerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|JMXMasterSlaveSharedStoreTest
extends|extends
name|TestSupport
block|{
specifier|protected
name|XBeanBrokerService
name|master
decl_stmt|;
specifier|protected
name|XBeanBrokerService
name|slave
decl_stmt|;
specifier|protected
name|AtomicReference
argument_list|<
name|XBeanBrokerService
argument_list|>
name|slaveAtomicReference
init|=
operator|new
name|AtomicReference
argument_list|<
name|XBeanBrokerService
argument_list|>
argument_list|()
decl_stmt|;
specifier|protected
name|CountDownLatch
name|slaveStarted
init|=
operator|new
name|CountDownLatch
argument_list|(
literal|1
argument_list|)
decl_stmt|;
specifier|protected
name|PersistenceAdapter
name|persistenceAdapter
decl_stmt|;
specifier|protected
name|File
name|messageStore
decl_stmt|;
specifier|protected
name|File
name|schedulerStoreFile
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|setMaxTestTime
argument_list|(
name|TimeUnit
operator|.
name|MINUTES
operator|.
name|toMillis
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|setAutoFail
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|messageStore
operator|=
operator|new
name|File
argument_list|(
literal|"target/activemq-data/kahadb/JMXMasterSlaveSharedStoreTest"
argument_list|)
expr_stmt|;
name|schedulerStoreFile
operator|=
operator|new
name|File
argument_list|(
literal|"target/activemq-data/scheduler/JMXMasterSlaveSharedStoreTest/"
argument_list|)
expr_stmt|;
if|if
condition|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"basedir"
argument_list|)
operator|==
literal|null
condition|)
block|{
name|File
name|file
init|=
operator|new
name|File
argument_list|(
literal|"."
argument_list|)
decl_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"basedir"
argument_list|,
name|file
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|createMaster
argument_list|()
expr_stmt|;
comment|// Give master a chance to aquire lock.
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|createSlave
argument_list|()
expr_stmt|;
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|slave
operator|!=
literal|null
condition|)
block|{
name|slave
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|master
operator|!=
literal|null
condition|)
block|{
name|master
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|createMaster
parameter_list|()
throws|throws
name|Exception
block|{
name|master
operator|=
name|createXBeanBrokerService
argument_list|(
literal|"master"
argument_list|)
expr_stmt|;
name|master
operator|.
name|afterPropertiesSet
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|createSlave
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Start the Brokers async since starting them up could be a blocking operation..
operator|new
name|Thread
argument_list|(
operator|new
name|Runnable
argument_list|()
block|{
specifier|public
name|void
name|run
parameter_list|()
block|{
try|try
block|{
name|slave
operator|=
name|createXBeanBrokerService
argument_list|(
literal|"slave"
argument_list|)
expr_stmt|;
name|slave
operator|.
name|afterPropertiesSet
argument_list|()
expr_stmt|;
name|slaveAtomicReference
operator|.
name|set
argument_list|(
name|slave
argument_list|)
expr_stmt|;
name|slaveStarted
operator|.
name|countDown
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
operator|.
name|start
argument_list|()
expr_stmt|;
comment|// Wait for slave to be set as new broker.
name|Thread
operator|.
name|sleep
argument_list|(
literal|100
argument_list|)
expr_stmt|;
block|}
specifier|private
name|XBeanBrokerService
name|createXBeanBrokerService
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|Exception
block|{
name|String
index|[]
name|connectors
init|=
block|{
literal|"tcp://localhost:"
operator|+
literal|0
block|}
decl_stmt|;
comment|// Setup messaging store
name|PersistenceAdapter
name|persistenceAdapter
init|=
operator|new
name|KahaDBPersistenceAdapter
argument_list|()
decl_stmt|;
name|persistenceAdapter
operator|.
name|setDirectory
argument_list|(
name|messageStore
argument_list|)
expr_stmt|;
name|XBeanBrokerService
name|broker
init|=
operator|new
name|XBeanBrokerService
argument_list|()
decl_stmt|;
name|broker
operator|.
name|setUseJmx
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|broker
operator|.
name|setBrokerName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|broker
operator|.
name|setPersistenceAdapter
argument_list|(
name|persistenceAdapter
argument_list|)
expr_stmt|;
name|broker
operator|.
name|setTransportConnectorURIs
argument_list|(
name|connectors
argument_list|)
expr_stmt|;
name|broker
operator|.
name|setSchedulerSupport
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|broker
operator|.
name|setSchedulerDirectoryFile
argument_list|(
name|schedulerStoreFile
argument_list|)
expr_stmt|;
name|broker
operator|.
name|getManagementContext
argument_list|()
operator|.
name|setCreateConnector
argument_list|(
literal|false
argument_list|)
expr_stmt|;
return|return
name|broker
return|;
block|}
specifier|private
name|String
name|getXBeanBrokerServiceMBeanName
parameter_list|(
name|String
name|brokerName
parameter_list|)
block|{
return|return
literal|"org.apache.activemq:type=Broker,brokerName="
operator|+
name|brokerName
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testJMXMBeanIsRegisteredForSlave
parameter_list|()
throws|throws
name|Exception
block|{
name|assertFalse
argument_list|(
name|master
operator|.
name|isSlave
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|slave
operator|.
name|isSlave
argument_list|()
argument_list|)
expr_stmt|;
comment|// Expected MBeans:
name|ObjectName
name|masterMBeanName
init|=
operator|new
name|ObjectName
argument_list|(
name|getXBeanBrokerServiceMBeanName
argument_list|(
literal|"master"
argument_list|)
argument_list|)
decl_stmt|;
name|ObjectName
name|slaveMBeanName
init|=
operator|new
name|ObjectName
argument_list|(
name|getXBeanBrokerServiceMBeanName
argument_list|(
literal|"slave"
argument_list|)
argument_list|)
decl_stmt|;
name|MBeanServerConnection
name|connection
init|=
name|master
operator|.
name|getManagementContext
argument_list|()
operator|.
name|getMBeanServer
argument_list|()
decl_stmt|;
name|assertFalse
argument_list|(
name|connection
operator|.
name|queryMBeans
argument_list|(
name|masterMBeanName
argument_list|,
literal|null
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|connection
operator|.
name|queryMBeans
argument_list|(
name|slaveMBeanName
argument_list|,
literal|null
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

