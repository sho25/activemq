begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|usecases
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Destination
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageConsumer
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|JmsMultipleBrokersTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ActiveMQQueue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ActiveMQTopic
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|util
operator|.
name|MessageIdList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|core
operator|.
name|io
operator|.
name|ClassPathResource
import|;
end_import

begin_class
specifier|public
class|class
name|MessageReroutingTest
extends|extends
name|JmsMultipleBrokersTestSupport
block|{
specifier|private
specifier|static
specifier|final
specifier|transient
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|MessageReroutingTest
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
name|Destination
name|dest
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|MESSAGE_COUNT
init|=
literal|50
decl_stmt|;
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setAutoFail
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|createBroker
argument_list|(
operator|new
name|ClassPathResource
argument_list|(
literal|"org/apache/activemq/usecases/rerouting-activemq-D.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|createBroker
argument_list|(
operator|new
name|ClassPathResource
argument_list|(
literal|"org/apache/activemq/usecases/rerouting-activemq-C.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|createBroker
argument_list|(
operator|new
name|ClassPathResource
argument_list|(
literal|"org/apache/activemq/usecases/rerouting-activemq-B.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|createBroker
argument_list|(
operator|new
name|ClassPathResource
argument_list|(
literal|"org/apache/activemq/usecases/rerouting-activemq-A.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|brokers
operator|.
name|get
argument_list|(
literal|"broker-A"
argument_list|)
operator|.
name|broker
operator|.
name|waitUntilStarted
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|initCombos
parameter_list|()
block|{
name|addCombinationValues
argument_list|(
literal|"dest"
argument_list|,
operator|new
name|Object
index|[]
block|{
operator|new
name|ActiveMQQueue
argument_list|(
literal|"TEST"
argument_list|)
block|,
operator|new
name|ActiveMQTopic
argument_list|(
literal|"TEST"
argument_list|)
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testMessageRerouting
parameter_list|()
throws|throws
name|Exception
block|{
name|MessageConsumer
name|consumer
init|=
name|createConsumer
argument_list|(
literal|"broker-D"
argument_list|,
name|dest
argument_list|)
decl_stmt|;
name|MessageIdList
name|received
init|=
name|getConsumerMessages
argument_list|(
literal|"broker-D"
argument_list|,
name|consumer
argument_list|)
decl_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|2000
argument_list|)
expr_stmt|;
comment|//wait for subs to propagate
comment|// send/receive messages
name|sendMessages
argument_list|(
literal|"broker-A"
argument_list|,
name|dest
argument_list|,
name|MESSAGE_COUNT
argument_list|)
expr_stmt|;
name|received
operator|.
name|waitForMessagesToArrive
argument_list|(
name|MESSAGE_COUNT
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"received "
operator|+
name|received
operator|.
name|getMessageCount
argument_list|()
operator|+
literal|" messages"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MESSAGE_COUNT
argument_list|,
name|received
operator|.
name|getMessageCount
argument_list|()
argument_list|)
expr_stmt|;
name|brokers
operator|.
name|get
argument_list|(
literal|"broker-B"
argument_list|)
operator|.
name|broker
operator|.
name|stop
argument_list|()
expr_stmt|;
name|brokers
operator|.
name|get
argument_list|(
literal|"broker-B"
argument_list|)
operator|.
name|broker
operator|.
name|waitUntilStopped
argument_list|()
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|2000
argument_list|)
expr_stmt|;
comment|// ensure send/receive still works
name|sendMessages
argument_list|(
literal|"broker-A"
argument_list|,
name|dest
argument_list|,
name|MESSAGE_COUNT
argument_list|)
expr_stmt|;
name|received
operator|.
name|waitForMessagesToArrive
argument_list|(
name|MESSAGE_COUNT
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"received "
operator|+
name|received
operator|.
name|getMessageCount
argument_list|()
operator|+
literal|" messages"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Didn't receive any more messages "
operator|+
name|received
operator|.
name|getMessageCount
argument_list|()
argument_list|,
name|received
operator|.
name|getMessageCount
argument_list|()
operator|>
name|MESSAGE_COUNT
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|Test
name|suite
parameter_list|()
block|{
return|return
name|suite
argument_list|(
name|MessageReroutingTest
operator|.
name|class
argument_list|)
return|;
block|}
block|}
end_class

end_unit

