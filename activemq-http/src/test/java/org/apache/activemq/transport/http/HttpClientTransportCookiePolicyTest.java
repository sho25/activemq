begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|http
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|util
operator|.
name|TextWireFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|HttpClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|params
operator|.
name|HttpClientParams
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Test that {@link HttpClientTransport} sets a broad-range compatibility  * cookie policy.  *  * @see<a href="https://issues.apache.org/jira/browse/AMQ-6571">AMQ-6571: HttpClientTransport refuses to accept cookies using `Expires' header</a>  */
end_comment

begin_class
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
specifier|public
class|class
name|HttpClientTransportCookiePolicyTest
block|{
specifier|private
name|HttpClientTransport
name|transport
decl_stmt|;
comment|/**      * Create the transport so we can inspect it.      * @throws URISyntaxException if something goes wrong.      */
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|URISyntaxException
block|{
name|transport
operator|=
operator|new
name|HttpClientTransport
argument_list|(
name|mock
argument_list|(
name|TextWireFormat
operator|.
name|class
argument_list|)
argument_list|,
operator|new
name|URI
argument_list|(
literal|"http://localhost:8080/test"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Create a new connection and check the connection properties.      */
annotation|@
name|Test
specifier|public
name|void
name|test
parameter_list|()
block|{
name|HttpClient
name|client
init|=
name|transport
operator|.
name|createHttpClient
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Cookie spec"
argument_list|,
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|params
operator|.
name|CookiePolicy
operator|.
name|BROWSER_COMPATIBILITY
argument_list|,
name|HttpClientParams
operator|.
name|getCookiePolicy
argument_list|(
name|client
operator|.
name|getParams
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

