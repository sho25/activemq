begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|bugs
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|amq
operator|.
name|AMQPersistenceAdapterFactory
import|;
end_import

begin_class
specifier|public
class|class
name|SparseAckReplayAfterStoreCleanupAMQStoreTest
extends|extends
name|AMQ2832Test
block|{
annotation|@
name|Override
specifier|protected
name|void
name|configurePersistence
parameter_list|(
name|BrokerService
name|brokerService
parameter_list|,
name|boolean
name|deleteAllOnStart
parameter_list|)
throws|throws
name|Exception
block|{
name|brokerService
operator|.
name|setPersistenceFactory
argument_list|(
operator|new
name|AMQPersistenceAdapterFactory
argument_list|()
argument_list|)
expr_stmt|;
name|AMQPersistenceAdapterFactory
name|factory
init|=
operator|(
name|AMQPersistenceAdapterFactory
operator|)
name|brokerService
operator|.
name|getPersistenceFactory
argument_list|()
decl_stmt|;
comment|// ensure there are a bunch of data files but multiple entries in each
name|factory
operator|.
name|setMaxFileLength
argument_list|(
literal|1024
operator|*
literal|12
argument_list|)
expr_stmt|;
comment|// speed up the test case, checkpoint an cleanup early and often
name|factory
operator|.
name|setCheckpointInterval
argument_list|(
literal|500
argument_list|)
expr_stmt|;
name|factory
operator|.
name|setCleanupInterval
argument_list|(
literal|500
argument_list|)
expr_stmt|;
name|factory
operator|.
name|setSyncOnWrite
argument_list|(
literal|false
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|deleteAllOnStart
condition|)
block|{
name|factory
operator|.
name|setForceRecoverReferenceStore
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
name|brokerService
operator|.
name|getPersistenceAdapter
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

