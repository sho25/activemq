begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|kaha
operator|.
name|impl
operator|.
name|index
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|RandomAccessFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|util
operator|.
name|DataByteArrayInputStream
import|;
end_import

begin_comment
comment|/**  * Optimized Store reader  *   *   */
end_comment

begin_class
class|class
name|StoreIndexReader
block|{
specifier|protected
name|RandomAccessFile
name|file
decl_stmt|;
specifier|protected
name|DataByteArrayInputStream
name|dataIn
decl_stmt|;
specifier|protected
name|byte
index|[]
name|buffer
init|=
operator|new
name|byte
index|[
name|IndexItem
operator|.
name|INDEX_SIZE
index|]
decl_stmt|;
comment|/**      * Construct a Store reader      *       * @param file      */
name|StoreIndexReader
parameter_list|(
name|RandomAccessFile
name|file
parameter_list|)
block|{
name|this
operator|.
name|file
operator|=
name|file
expr_stmt|;
name|this
operator|.
name|dataIn
operator|=
operator|new
name|DataByteArrayInputStream
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|IndexItem
name|readItem
parameter_list|(
name|long
name|offset
parameter_list|)
throws|throws
name|IOException
block|{
name|file
operator|.
name|seek
argument_list|(
name|offset
argument_list|)
expr_stmt|;
name|file
operator|.
name|readFully
argument_list|(
name|buffer
argument_list|)
expr_stmt|;
name|dataIn
operator|.
name|restart
argument_list|(
name|buffer
argument_list|)
expr_stmt|;
name|IndexItem
name|result
init|=
operator|new
name|IndexItem
argument_list|()
decl_stmt|;
name|result
operator|.
name|setOffset
argument_list|(
name|offset
argument_list|)
expr_stmt|;
name|result
operator|.
name|read
argument_list|(
name|dataIn
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
name|void
name|updateIndexes
parameter_list|(
name|IndexItem
name|indexItem
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|indexItem
operator|!=
literal|null
condition|)
block|{
name|file
operator|.
name|seek
argument_list|(
name|indexItem
operator|.
name|getOffset
argument_list|()
argument_list|)
expr_stmt|;
name|file
operator|.
name|readFully
argument_list|(
name|buffer
argument_list|,
literal|0
argument_list|,
name|IndexItem
operator|.
name|INDEXES_ONLY_SIZE
argument_list|)
expr_stmt|;
name|dataIn
operator|.
name|restart
argument_list|(
name|buffer
argument_list|)
expr_stmt|;
name|indexItem
operator|.
name|readIndexes
argument_list|(
name|dataIn
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

