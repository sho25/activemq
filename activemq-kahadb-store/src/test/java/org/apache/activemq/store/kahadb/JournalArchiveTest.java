begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadb
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|policy
operator|.
name|PolicyEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|policy
operator|.
name|PolicyMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ActiveMQQueue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadb
operator|.
name|disk
operator|.
name|journal
operator|.
name|DataFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Destination
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageProducer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|Permission
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CountDownLatch
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicInteger
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadb
operator|.
name|JournalCorruptionEofIndexRecoveryTest
operator|.
name|drain
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadb
operator|.
name|disk
operator|.
name|journal
operator|.
name|Journal
operator|.
name|DEFAULT_ARCHIVE_DIRECTORY
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_class
specifier|public
class|class
name|JournalArchiveTest
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|JournalArchiveTest
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|String
name|KAHADB_DIRECTORY
init|=
literal|"target/activemq-data/"
decl_stmt|;
specifier|private
specifier|final
name|String
name|payload
init|=
operator|new
name|String
argument_list|(
operator|new
name|byte
index|[
literal|1024
index|]
argument_list|)
decl_stmt|;
specifier|private
name|BrokerService
name|broker
init|=
literal|null
decl_stmt|;
specifier|private
specifier|final
name|Destination
name|destination
init|=
operator|new
name|ActiveMQQueue
argument_list|(
literal|"Test"
argument_list|)
decl_stmt|;
specifier|private
name|KahaDBPersistenceAdapter
name|adapter
decl_stmt|;
specifier|protected
name|void
name|startBroker
parameter_list|()
throws|throws
name|Exception
block|{
name|doStartBroker
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|restartBroker
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|broker
operator|!=
literal|null
condition|)
block|{
name|broker
operator|.
name|stop
argument_list|()
expr_stmt|;
name|broker
operator|.
name|waitUntilStopped
argument_list|()
expr_stmt|;
block|}
name|doStartBroker
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|doStartBroker
parameter_list|(
name|boolean
name|delete
parameter_list|)
throws|throws
name|Exception
block|{
name|doCreateBroker
argument_list|(
name|delete
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Starting broker.."
argument_list|)
expr_stmt|;
name|broker
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|doCreateBroker
parameter_list|(
name|boolean
name|delete
parameter_list|)
throws|throws
name|Exception
block|{
name|broker
operator|=
operator|new
name|BrokerService
argument_list|()
expr_stmt|;
name|broker
operator|.
name|setDeleteAllMessagesOnStartup
argument_list|(
name|delete
argument_list|)
expr_stmt|;
name|broker
operator|.
name|setPersistent
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|broker
operator|.
name|setUseJmx
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|broker
operator|.
name|setDataDirectory
argument_list|(
name|KAHADB_DIRECTORY
argument_list|)
expr_stmt|;
name|PolicyMap
name|policyMap
init|=
operator|new
name|PolicyMap
argument_list|()
decl_stmt|;
name|PolicyEntry
name|policyEntry
init|=
operator|new
name|PolicyEntry
argument_list|()
decl_stmt|;
name|policyEntry
operator|.
name|setUseCache
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|policyMap
operator|.
name|setDefaultEntry
argument_list|(
name|policyEntry
argument_list|)
expr_stmt|;
name|broker
operator|.
name|setDestinationPolicy
argument_list|(
name|policyMap
argument_list|)
expr_stmt|;
name|configurePersistence
argument_list|(
name|broker
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|configurePersistence
parameter_list|(
name|BrokerService
name|brokerService
parameter_list|)
throws|throws
name|Exception
block|{
name|adapter
operator|=
operator|(
name|KahaDBPersistenceAdapter
operator|)
name|brokerService
operator|.
name|getPersistenceAdapter
argument_list|()
expr_stmt|;
comment|// ensure there are a bunch of data files but multiple entries in each
name|adapter
operator|.
name|setJournalMaxFileLength
argument_list|(
literal|1024
operator|*
literal|20
argument_list|)
expr_stmt|;
comment|// speed up the test case, checkpoint an cleanup early and often
name|adapter
operator|.
name|setCheckpointInterval
argument_list|(
literal|2000
argument_list|)
expr_stmt|;
name|adapter
operator|.
name|setCleanupInterval
argument_list|(
literal|2000
argument_list|)
expr_stmt|;
name|adapter
operator|.
name|setCheckForCorruptJournalFiles
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|adapter
operator|.
name|setArchiveDataLogs
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|broker
operator|!=
literal|null
condition|)
block|{
name|broker
operator|.
name|stop
argument_list|()
expr_stmt|;
name|broker
operator|.
name|waitUntilStopped
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRecoveryOnArchiveFailure
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AtomicInteger
name|atomicInteger
init|=
operator|new
name|AtomicInteger
argument_list|()
decl_stmt|;
name|System
operator|.
name|setSecurityManager
argument_list|(
operator|new
name|SecurityManager
argument_list|()
block|{
specifier|public
name|void
name|checkPermission
parameter_list|(
name|Permission
name|perm
parameter_list|)
block|{}
specifier|public
name|void
name|checkPermission
parameter_list|(
name|Permission
name|perm
parameter_list|,
name|Object
name|context
parameter_list|)
block|{}
specifier|public
name|void
name|checkWrite
parameter_list|(
name|String
name|file
parameter_list|)
block|{
if|if
condition|(
name|file
operator|.
name|contains
argument_list|(
name|DEFAULT_ARCHIVE_DIRECTORY
argument_list|)
operator|&&
name|atomicInteger
operator|.
name|incrementAndGet
argument_list|()
operator|>
literal|4
condition|)
block|{
throw|throw
operator|new
name|SecurityException
argument_list|(
literal|"No Perms to write to archive times:"
operator|+
name|atomicInteger
operator|.
name|get
argument_list|()
argument_list|)
throw|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|startBroker
argument_list|()
expr_stmt|;
name|int
name|sent
init|=
name|produceMessagesToConsumeMultipleDataFiles
argument_list|(
literal|50
argument_list|)
decl_stmt|;
name|int
name|numFilesAfterSend
init|=
name|getNumberOfJournalFiles
argument_list|()
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Num journal files: "
operator|+
name|numFilesAfterSend
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"more than x files: "
operator|+
name|numFilesAfterSend
argument_list|,
name|numFilesAfterSend
operator|>
literal|4
argument_list|)
expr_stmt|;
specifier|final
name|CountDownLatch
name|gotShutdown
init|=
operator|new
name|CountDownLatch
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|broker
operator|.
name|addShutdownHook
argument_list|(
operator|new
name|Runnable
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
name|gotShutdown
operator|.
name|countDown
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|int
name|received
init|=
name|tryConsume
argument_list|(
name|destination
argument_list|,
name|sent
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"all message received"
argument_list|,
name|sent
argument_list|,
name|received
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"broker got shutdown on page in error"
argument_list|,
name|gotShutdown
operator|.
name|await
argument_list|(
literal|10
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
argument_list|)
expr_stmt|;
comment|// no restrictions
name|System
operator|.
name|setSecurityManager
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|int
name|numFilesAfterRestart
init|=
literal|0
decl_stmt|;
try|try
block|{
comment|// ensure we can restart after failure to archive
name|doStartBroker
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|numFilesAfterRestart
operator|=
name|getNumberOfJournalFiles
argument_list|()
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Num journal files before gc: "
operator|+
name|numFilesAfterRestart
argument_list|)
expr_stmt|;
comment|// force gc
operator|(
operator|(
name|KahaDBPersistenceAdapter
operator|)
name|broker
operator|.
name|getPersistenceAdapter
argument_list|()
operator|)
operator|.
name|getStore
argument_list|()
operator|.
name|checkpoint
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|error
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Failed to restart!"
argument_list|,
name|error
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Failed to restart after failure to archive"
argument_list|)
expr_stmt|;
block|}
name|int
name|numFilesAfterGC
init|=
name|getNumberOfJournalFiles
argument_list|()
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Num journal files after restart nd gc: "
operator|+
name|numFilesAfterGC
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Gc has happened"
argument_list|,
name|numFilesAfterGC
operator|<
name|numFilesAfterRestart
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Gc has worked"
argument_list|,
name|numFilesAfterGC
operator|<
literal|4
argument_list|)
expr_stmt|;
name|File
name|archiveDirectory
init|=
operator|(
operator|(
name|KahaDBPersistenceAdapter
operator|)
name|broker
operator|.
name|getPersistenceAdapter
argument_list|()
operator|)
operator|.
name|getStore
argument_list|()
operator|.
name|getJournal
argument_list|()
operator|.
name|getDirectoryArchive
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"verify files in archive dir"
argument_list|,
name|numFilesAfterSend
argument_list|,
name|archiveDirectory
operator|.
name|listFiles
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|getNumberOfJournalFiles
parameter_list|()
throws|throws
name|IOException
block|{
name|Collection
argument_list|<
name|DataFile
argument_list|>
name|files
init|=
operator|(
operator|(
name|KahaDBPersistenceAdapter
operator|)
name|broker
operator|.
name|getPersistenceAdapter
argument_list|()
operator|)
operator|.
name|getStore
argument_list|()
operator|.
name|getJournal
argument_list|()
operator|.
name|getFileMap
argument_list|()
operator|.
name|values
argument_list|()
decl_stmt|;
name|int
name|reality
init|=
literal|0
decl_stmt|;
for|for
control|(
name|DataFile
name|file
range|:
name|files
control|)
block|{
if|if
condition|(
name|file
operator|!=
literal|null
condition|)
block|{
name|reality
operator|++
expr_stmt|;
block|}
block|}
return|return
name|reality
return|;
block|}
specifier|private
name|int
name|produceMessages
parameter_list|(
name|Destination
name|destination
parameter_list|,
name|int
name|numToSend
parameter_list|)
throws|throws
name|Exception
block|{
name|int
name|sent
init|=
literal|0
decl_stmt|;
name|Connection
name|connection
init|=
operator|new
name|ActiveMQConnectionFactory
argument_list|(
name|broker
operator|.
name|getVmConnectorURI
argument_list|()
argument_list|)
operator|.
name|createConnection
argument_list|()
decl_stmt|;
name|connection
operator|.
name|start
argument_list|()
expr_stmt|;
try|try
block|{
name|Session
name|session
init|=
name|connection
operator|.
name|createSession
argument_list|(
literal|false
argument_list|,
name|Session
operator|.
name|AUTO_ACKNOWLEDGE
argument_list|)
decl_stmt|;
name|MessageProducer
name|producer
init|=
name|session
operator|.
name|createProducer
argument_list|(
name|destination
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numToSend
condition|;
name|i
operator|++
control|)
block|{
name|producer
operator|.
name|send
argument_list|(
name|createMessage
argument_list|(
name|session
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|sent
operator|++
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|connection
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
return|return
name|sent
return|;
block|}
specifier|private
name|int
name|tryConsume
parameter_list|(
name|Destination
name|destination
parameter_list|,
name|int
name|numToGet
parameter_list|)
throws|throws
name|Exception
block|{
name|ActiveMQConnectionFactory
name|cf
init|=
operator|new
name|ActiveMQConnectionFactory
argument_list|(
name|broker
operator|.
name|getVmConnectorURI
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|drain
argument_list|(
name|cf
argument_list|,
name|destination
argument_list|,
name|numToGet
argument_list|)
return|;
block|}
specifier|private
name|int
name|produceMessagesToConsumeMultipleDataFiles
parameter_list|(
name|int
name|numToSend
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|produceMessages
argument_list|(
name|destination
argument_list|,
name|numToSend
argument_list|)
return|;
block|}
specifier|private
name|Message
name|createMessage
parameter_list|(
name|Session
name|session
parameter_list|,
name|int
name|i
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|session
operator|.
name|createTextMessage
argument_list|(
name|payload
operator|+
literal|"::"
operator|+
name|i
argument_list|)
return|;
block|}
block|}
end_class

end_unit

