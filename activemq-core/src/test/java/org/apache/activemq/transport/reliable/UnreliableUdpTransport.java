begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|reliable
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|openwire
operator|.
name|OpenWireFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|udp
operator|.
name|CommandChannel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|udp
operator|.
name|CommandDatagramChannel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|udp
operator|.
name|UdpTransport
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|SocketAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|UnknownHostException
import|;
end_import

begin_comment
comment|/**  * An unreliable UDP transport that will randomly discard packets to simulate a  * bad network (or UDP buffers being flooded).  *   * @version $Revision: $  */
end_comment

begin_class
specifier|public
class|class
name|UnreliableUdpTransport
extends|extends
name|UdpTransport
block|{
specifier|private
name|DropCommandStrategy
name|dropCommandStrategy
decl_stmt|;
specifier|public
name|UnreliableUdpTransport
parameter_list|(
name|OpenWireFormat
name|wireFormat
parameter_list|,
name|int
name|port
parameter_list|)
throws|throws
name|UnknownHostException
throws|,
name|IOException
block|{
name|super
argument_list|(
name|wireFormat
argument_list|,
name|port
argument_list|)
expr_stmt|;
block|}
specifier|public
name|UnreliableUdpTransport
parameter_list|(
name|OpenWireFormat
name|wireFormat
parameter_list|,
name|SocketAddress
name|socketAddress
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|wireFormat
argument_list|,
name|socketAddress
argument_list|)
expr_stmt|;
block|}
specifier|public
name|UnreliableUdpTransport
parameter_list|(
name|OpenWireFormat
name|wireFormat
parameter_list|,
name|URI
name|remoteLocation
parameter_list|)
throws|throws
name|UnknownHostException
throws|,
name|IOException
block|{
name|super
argument_list|(
name|wireFormat
argument_list|,
name|remoteLocation
argument_list|)
expr_stmt|;
block|}
specifier|public
name|UnreliableUdpTransport
parameter_list|(
name|OpenWireFormat
name|wireFormat
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|wireFormat
argument_list|)
expr_stmt|;
block|}
specifier|public
name|DropCommandStrategy
name|getDropCommandStrategy
parameter_list|()
block|{
return|return
name|dropCommandStrategy
return|;
block|}
specifier|public
name|void
name|setDropCommandStrategy
parameter_list|(
name|DropCommandStrategy
name|dropCommandStrategy
parameter_list|)
block|{
name|this
operator|.
name|dropCommandStrategy
operator|=
name|dropCommandStrategy
expr_stmt|;
block|}
specifier|protected
name|CommandChannel
name|createCommandDatagramChannel
parameter_list|()
block|{
return|return
operator|new
name|UnreliableCommandDatagramChannel
argument_list|(
name|this
argument_list|,
name|getWireFormat
argument_list|()
argument_list|,
name|getDatagramSize
argument_list|()
argument_list|,
name|getTargetAddress
argument_list|()
argument_list|,
name|createDatagramHeaderMarshaller
argument_list|()
argument_list|,
name|getReplayBuffer
argument_list|()
argument_list|,
name|getChannel
argument_list|()
argument_list|,
name|getBufferPool
argument_list|()
argument_list|,
name|dropCommandStrategy
argument_list|)
return|;
block|}
block|}
end_class

end_unit

