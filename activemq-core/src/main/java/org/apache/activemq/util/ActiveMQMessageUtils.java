begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|util
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ActiveMQMessage
import|;
end_import

begin_comment
comment|/**  * Message utilities  *  */
end_comment

begin_class
specifier|public
class|class
name|ActiveMQMessageUtils
block|{
comment|/**      * Determine the size on the wire for a message      * @param message      * @return      */
specifier|public
specifier|static
name|int
name|getWireSize
parameter_list|(
name|ActiveMQMessage
name|message
parameter_list|)
block|{
name|int
name|size
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|message
operator|.
name|getMarshalledProperties
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|size
operator|+=
name|message
operator|.
name|getMarshalledProperties
argument_list|()
operator|.
name|getLength
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|message
operator|.
name|getContent
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|size
operator|+=
name|message
operator|.
name|getContent
argument_list|()
operator|.
name|getLength
argument_list|()
expr_stmt|;
block|}
return|return
name|size
return|;
block|}
block|}
end_class

end_unit

