begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Copyright 2004 The Apache Software Foundation  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|activemq
operator|.
name|store
operator|.
name|jdbc
operator|.
name|adapter
package|;
end_package

begin_import
import|import
name|org
operator|.
name|activemq
operator|.
name|store
operator|.
name|jdbc
operator|.
name|StatementProvider
import|;
end_import

begin_comment
comment|/**  * A StatementProvider filter that caches the responses  * of the filtered StatementProvider.  *   * @version $Revision: 1.4 $  */
end_comment

begin_class
specifier|public
class|class
name|CachingStatementProvider
implements|implements
name|StatementProvider
block|{
specifier|final
specifier|private
name|StatementProvider
name|statementProvider
decl_stmt|;
specifier|private
name|String
name|addMessageStatment
decl_stmt|;
specifier|private
name|String
index|[]
name|createSchemaStatments
decl_stmt|;
specifier|private
name|String
index|[]
name|dropSchemaStatments
decl_stmt|;
specifier|private
name|String
name|findAllMessagesStatment
decl_stmt|;
specifier|private
name|String
name|findLastSequenceIdInMsgs
decl_stmt|;
specifier|private
name|String
name|findMessageStatment
decl_stmt|;
specifier|private
name|String
name|removeMessageStatment
decl_stmt|;
specifier|private
name|String
name|updateMessageStatment
decl_stmt|;
specifier|private
name|String
name|createDurableSubStatment
decl_stmt|;
specifier|private
name|String
name|findDurableSubStatment
decl_stmt|;
specifier|private
name|String
name|findAllDurableSubMessagesStatment
decl_stmt|;
specifier|private
name|String
name|updateLastAckOfDurableSub
decl_stmt|;
specifier|private
name|String
name|findMessageSequenceIdStatment
decl_stmt|;
specifier|private
name|String
name|removeAllMessagesStatment
decl_stmt|;
specifier|private
name|String
name|removeAllSubscriptionsStatment
decl_stmt|;
specifier|private
name|String
name|deleteSubscriptionStatment
decl_stmt|;
specifier|private
name|String
name|deleteOldMessagesStatment
decl_stmt|;
specifier|private
name|String
name|findLastSequenceIdInAcks
decl_stmt|;
specifier|private
name|String
name|findAllDestinationsStatment
decl_stmt|;
specifier|public
name|CachingStatementProvider
parameter_list|(
name|StatementProvider
name|statementProvider
parameter_list|)
block|{
name|this
operator|.
name|statementProvider
operator|=
name|statementProvider
expr_stmt|;
block|}
specifier|public
name|StatementProvider
name|getNext
parameter_list|()
block|{
return|return
name|statementProvider
return|;
block|}
specifier|public
name|String
name|getAddMessageStatment
parameter_list|()
block|{
if|if
condition|(
name|addMessageStatment
operator|==
literal|null
condition|)
block|{
name|addMessageStatment
operator|=
name|statementProvider
operator|.
name|getAddMessageStatment
argument_list|()
expr_stmt|;
block|}
return|return
name|addMessageStatment
return|;
block|}
specifier|public
name|String
index|[]
name|getCreateSchemaStatments
parameter_list|()
block|{
if|if
condition|(
name|createSchemaStatments
operator|==
literal|null
condition|)
block|{
name|createSchemaStatments
operator|=
name|statementProvider
operator|.
name|getCreateSchemaStatments
argument_list|()
expr_stmt|;
block|}
return|return
name|createSchemaStatments
return|;
block|}
specifier|public
name|String
index|[]
name|getDropSchemaStatments
parameter_list|()
block|{
if|if
condition|(
name|dropSchemaStatments
operator|==
literal|null
condition|)
block|{
name|dropSchemaStatments
operator|=
name|statementProvider
operator|.
name|getDropSchemaStatments
argument_list|()
expr_stmt|;
block|}
return|return
name|dropSchemaStatments
return|;
block|}
specifier|public
name|String
name|getFindAllMessagesStatment
parameter_list|()
block|{
if|if
condition|(
name|findAllMessagesStatment
operator|==
literal|null
condition|)
block|{
name|findAllMessagesStatment
operator|=
name|statementProvider
operator|.
name|getFindAllMessagesStatment
argument_list|()
expr_stmt|;
block|}
return|return
name|findAllMessagesStatment
return|;
block|}
specifier|public
name|String
name|getFindLastSequenceIdInMsgs
parameter_list|()
block|{
if|if
condition|(
name|findLastSequenceIdInMsgs
operator|==
literal|null
condition|)
block|{
name|findLastSequenceIdInMsgs
operator|=
name|statementProvider
operator|.
name|getFindLastSequenceIdInMsgs
argument_list|()
expr_stmt|;
block|}
return|return
name|findLastSequenceIdInMsgs
return|;
block|}
specifier|public
name|String
name|getFindLastSequenceIdInAcks
parameter_list|()
block|{
if|if
condition|(
name|findLastSequenceIdInAcks
operator|==
literal|null
condition|)
block|{
name|findLastSequenceIdInAcks
operator|=
name|statementProvider
operator|.
name|getFindLastSequenceIdInAcks
argument_list|()
expr_stmt|;
block|}
return|return
name|findLastSequenceIdInAcks
return|;
block|}
specifier|public
name|String
name|getFindMessageStatment
parameter_list|()
block|{
if|if
condition|(
name|findMessageStatment
operator|==
literal|null
condition|)
block|{
name|findMessageStatment
operator|=
name|statementProvider
operator|.
name|getFindMessageStatment
argument_list|()
expr_stmt|;
block|}
return|return
name|findMessageStatment
return|;
block|}
comment|/**      * @return      */
specifier|public
name|String
name|getRemoveMessageStatment
parameter_list|()
block|{
if|if
condition|(
name|removeMessageStatment
operator|==
literal|null
condition|)
block|{
name|removeMessageStatment
operator|=
name|statementProvider
operator|.
name|getRemoveMessageStatment
argument_list|()
expr_stmt|;
block|}
return|return
name|removeMessageStatment
return|;
block|}
specifier|public
name|String
name|getUpdateMessageStatment
parameter_list|()
block|{
if|if
condition|(
name|updateMessageStatment
operator|==
literal|null
condition|)
block|{
name|updateMessageStatment
operator|=
name|statementProvider
operator|.
name|getUpdateMessageStatment
argument_list|()
expr_stmt|;
block|}
return|return
name|updateMessageStatment
return|;
block|}
specifier|public
name|String
name|getCreateDurableSubStatment
parameter_list|()
block|{
if|if
condition|(
name|createDurableSubStatment
operator|==
literal|null
condition|)
block|{
name|createDurableSubStatment
operator|=
name|statementProvider
operator|.
name|getCreateDurableSubStatment
argument_list|()
expr_stmt|;
block|}
return|return
name|createDurableSubStatment
return|;
block|}
specifier|public
name|String
name|getFindDurableSubStatment
parameter_list|()
block|{
if|if
condition|(
name|findDurableSubStatment
operator|==
literal|null
condition|)
block|{
name|findDurableSubStatment
operator|=
name|statementProvider
operator|.
name|getFindDurableSubStatment
argument_list|()
expr_stmt|;
block|}
return|return
name|findDurableSubStatment
return|;
block|}
specifier|public
name|String
name|getFindAllDurableSubMessagesStatment
parameter_list|()
block|{
if|if
condition|(
name|findAllDurableSubMessagesStatment
operator|==
literal|null
condition|)
block|{
name|findAllDurableSubMessagesStatment
operator|=
name|statementProvider
operator|.
name|getFindAllDurableSubMessagesStatment
argument_list|()
expr_stmt|;
block|}
return|return
name|findAllDurableSubMessagesStatment
return|;
block|}
specifier|public
name|String
name|getUpdateLastAckOfDurableSub
parameter_list|()
block|{
if|if
condition|(
name|updateLastAckOfDurableSub
operator|==
literal|null
condition|)
block|{
name|updateLastAckOfDurableSub
operator|=
name|statementProvider
operator|.
name|getUpdateLastAckOfDurableSub
argument_list|()
expr_stmt|;
block|}
return|return
name|updateLastAckOfDurableSub
return|;
block|}
specifier|public
name|String
name|getFindMessageSequenceIdStatment
parameter_list|()
block|{
if|if
condition|(
name|findMessageSequenceIdStatment
operator|==
literal|null
condition|)
block|{
name|findMessageSequenceIdStatment
operator|=
name|statementProvider
operator|.
name|getFindMessageSequenceIdStatment
argument_list|()
expr_stmt|;
block|}
return|return
name|findMessageSequenceIdStatment
return|;
block|}
specifier|public
name|String
name|getRemoveAllMessagesStatment
parameter_list|()
block|{
if|if
condition|(
name|removeAllMessagesStatment
operator|==
literal|null
condition|)
block|{
name|removeAllMessagesStatment
operator|=
name|statementProvider
operator|.
name|getRemoveAllMessagesStatment
argument_list|()
expr_stmt|;
block|}
return|return
name|removeAllMessagesStatment
return|;
block|}
specifier|public
name|String
name|getRemoveAllSubscriptionsStatment
parameter_list|()
block|{
if|if
condition|(
name|removeAllSubscriptionsStatment
operator|==
literal|null
condition|)
block|{
name|removeAllSubscriptionsStatment
operator|=
name|statementProvider
operator|.
name|getRemoveAllSubscriptionsStatment
argument_list|()
expr_stmt|;
block|}
return|return
name|removeAllSubscriptionsStatment
return|;
block|}
specifier|public
name|String
name|getDeleteSubscriptionStatment
parameter_list|()
block|{
if|if
condition|(
name|deleteSubscriptionStatment
operator|==
literal|null
condition|)
block|{
name|deleteSubscriptionStatment
operator|=
name|statementProvider
operator|.
name|getDeleteSubscriptionStatment
argument_list|()
expr_stmt|;
block|}
return|return
name|deleteSubscriptionStatment
return|;
block|}
specifier|public
name|String
name|getDeleteOldMessagesStatment
parameter_list|()
block|{
if|if
condition|(
name|deleteOldMessagesStatment
operator|==
literal|null
condition|)
block|{
name|deleteOldMessagesStatment
operator|=
name|statementProvider
operator|.
name|getDeleteOldMessagesStatment
argument_list|()
expr_stmt|;
block|}
return|return
name|deleteOldMessagesStatment
return|;
block|}
specifier|public
name|String
name|getFindAllDestinationsStatment
parameter_list|()
block|{
if|if
condition|(
name|findAllDestinationsStatment
operator|==
literal|null
condition|)
block|{
name|findAllDestinationsStatment
operator|=
name|statementProvider
operator|.
name|getFindAllDestinationsStatment
argument_list|()
expr_stmt|;
block|}
return|return
name|findAllDestinationsStatment
return|;
block|}
specifier|public
name|void
name|setUseExternalMessageReferences
parameter_list|(
name|boolean
name|useExternalMessageReferences
parameter_list|)
block|{
name|addMessageStatment
operator|=
literal|null
expr_stmt|;
name|createSchemaStatments
operator|=
literal|null
expr_stmt|;
name|dropSchemaStatments
operator|=
literal|null
expr_stmt|;
name|findAllMessagesStatment
operator|=
literal|null
expr_stmt|;
name|findLastSequenceIdInMsgs
operator|=
literal|null
expr_stmt|;
name|findMessageStatment
operator|=
literal|null
expr_stmt|;
name|removeMessageStatment
operator|=
literal|null
expr_stmt|;
name|updateMessageStatment
operator|=
literal|null
expr_stmt|;
name|createDurableSubStatment
operator|=
literal|null
expr_stmt|;
name|findDurableSubStatment
operator|=
literal|null
expr_stmt|;
name|findAllDurableSubMessagesStatment
operator|=
literal|null
expr_stmt|;
name|updateLastAckOfDurableSub
operator|=
literal|null
expr_stmt|;
name|findMessageSequenceIdStatment
operator|=
literal|null
expr_stmt|;
name|removeAllMessagesStatment
operator|=
literal|null
expr_stmt|;
name|removeAllSubscriptionsStatment
operator|=
literal|null
expr_stmt|;
name|deleteSubscriptionStatment
operator|=
literal|null
expr_stmt|;
name|deleteOldMessagesStatment
operator|=
literal|null
expr_stmt|;
name|findLastSequenceIdInAcks
operator|=
literal|null
expr_stmt|;
name|findAllDestinationsStatment
operator|=
literal|null
expr_stmt|;
name|statementProvider
operator|.
name|setUseExternalMessageReferences
argument_list|(
name|useExternalMessageReferences
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|isUseExternalMessageReferences
parameter_list|()
block|{
return|return
name|statementProvider
operator|.
name|isUseExternalMessageReferences
argument_list|()
return|;
block|}
block|}
end_class

end_unit

