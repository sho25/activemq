begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *   * Copyright 2005 LogicBlaze, Inc. http://www.logicblaze.com  *   * Licensed under the Apache License, Version 2.0 (the "License");   * you may not use this file except in compliance with the License.   * You may obtain a copy of the License at   *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   * See the License for the specific language governing permissions and   * limitations under the License.   *   **/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|systest
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|systest
operator|.
name|AgentStopper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|systest
operator|.
name|ConsumerAgent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|systest
operator|.
name|MessageList
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|JMSException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageConsumer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Topic
import|;
end_import

begin_comment
comment|/**  * A simple in JVM implementation of a {@link ConsumerAgent}  *   * @version $Revision: 1.1 $  */
end_comment

begin_class
specifier|public
class|class
name|ConsumerAgentImpl
extends|extends
name|JmsClientSupport
implements|implements
name|ConsumerAgent
block|{
specifier|private
name|String
name|selector
decl_stmt|;
specifier|private
name|String
name|durableSubscriber
decl_stmt|;
specifier|private
name|boolean
name|noLocal
decl_stmt|;
specifier|private
name|MessageConsumer
name|consumer
decl_stmt|;
specifier|private
name|AgentMessageListener
name|listener
decl_stmt|;
specifier|public
name|void
name|start
parameter_list|()
throws|throws
name|Exception
block|{
name|listener
operator|=
operator|new
name|AgentMessageListener
argument_list|()
expr_stmt|;
name|getConsumer
argument_list|()
operator|.
name|setMessageListener
argument_list|(
name|listener
argument_list|)
expr_stmt|;
name|super
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|assertConsumed
parameter_list|(
name|MessageList
name|messageList
parameter_list|)
throws|throws
name|JMSException
block|{
name|int
name|size
init|=
name|messageList
operator|.
name|getSize
argument_list|()
decl_stmt|;
name|listener
operator|.
name|waitForMessagesToArrive
argument_list|(
name|size
argument_list|)
expr_stmt|;
comment|// now we've received them, lets check that they are identical
name|messageList
operator|.
name|assertMessagesCorrect
argument_list|(
name|listener
operator|.
name|flushMessages
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Consumer received all: "
operator|+
name|size
operator|+
literal|" message(s)"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|waitUntilConsumed
parameter_list|(
name|MessageList
name|messageList
parameter_list|,
name|int
name|percentOfList
parameter_list|)
block|{
name|int
name|size
init|=
name|messageList
operator|.
name|getSize
argument_list|()
decl_stmt|;
name|int
name|limit
init|=
operator|(
name|size
operator|*
name|percentOfList
operator|)
operator|/
literal|100
decl_stmt|;
name|listener
operator|.
name|waitForMessagesToArrive
argument_list|(
name|limit
argument_list|)
expr_stmt|;
block|}
comment|// Properties
comment|// -------------------------------------------------------------------------
specifier|public
name|MessageConsumer
name|getConsumer
parameter_list|()
throws|throws
name|JMSException
block|{
if|if
condition|(
name|consumer
operator|==
literal|null
condition|)
block|{
name|consumer
operator|=
name|createConsumer
argument_list|()
expr_stmt|;
block|}
return|return
name|consumer
return|;
block|}
specifier|public
name|void
name|setConsumer
parameter_list|(
name|MessageConsumer
name|consumer
parameter_list|)
block|{
name|this
operator|.
name|consumer
operator|=
name|consumer
expr_stmt|;
block|}
specifier|public
name|String
name|getDurableSubscriber
parameter_list|()
block|{
return|return
name|durableSubscriber
return|;
block|}
specifier|public
name|void
name|setDurableSubscriber
parameter_list|(
name|String
name|durableSubscriber
parameter_list|)
block|{
name|this
operator|.
name|durableSubscriber
operator|=
name|durableSubscriber
expr_stmt|;
block|}
specifier|public
name|boolean
name|isNoLocal
parameter_list|()
block|{
return|return
name|noLocal
return|;
block|}
specifier|public
name|void
name|setNoLocal
parameter_list|(
name|boolean
name|noLocal
parameter_list|)
block|{
name|this
operator|.
name|noLocal
operator|=
name|noLocal
expr_stmt|;
block|}
specifier|public
name|String
name|getSelector
parameter_list|()
block|{
return|return
name|selector
return|;
block|}
specifier|public
name|void
name|setSelector
parameter_list|(
name|String
name|selector
parameter_list|)
block|{
name|this
operator|.
name|selector
operator|=
name|selector
expr_stmt|;
block|}
specifier|public
name|void
name|stop
parameter_list|(
name|AgentStopper
name|stopper
parameter_list|)
block|{
if|if
condition|(
name|listener
operator|!=
literal|null
condition|)
block|{
name|listener
operator|.
name|stop
argument_list|()
expr_stmt|;
name|listener
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
name|consumer
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|consumer
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JMSException
name|e
parameter_list|)
block|{
name|stopper
operator|.
name|onException
argument_list|(
name|this
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|consumer
operator|=
literal|null
expr_stmt|;
block|}
block|}
name|super
operator|.
name|stop
argument_list|(
name|stopper
argument_list|)
expr_stmt|;
block|}
comment|// Implementation methods
comment|// -------------------------------------------------------------------------
specifier|protected
name|MessageConsumer
name|createConsumer
parameter_list|()
throws|throws
name|JMSException
block|{
if|if
condition|(
name|durableSubscriber
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|selector
operator|!=
literal|null
condition|)
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createDurableSubscriber
argument_list|(
operator|(
name|Topic
operator|)
name|getDestination
argument_list|()
argument_list|,
name|durableSubscriber
argument_list|,
name|selector
argument_list|,
name|noLocal
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createDurableSubscriber
argument_list|(
operator|(
name|Topic
operator|)
name|getDestination
argument_list|()
argument_list|,
name|durableSubscriber
argument_list|)
return|;
block|}
block|}
else|else
block|{
if|if
condition|(
name|selector
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|noLocal
condition|)
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createConsumer
argument_list|(
name|getDestination
argument_list|()
argument_list|,
name|selector
argument_list|,
name|noLocal
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createConsumer
argument_list|(
name|getDestination
argument_list|()
argument_list|,
name|selector
argument_list|)
return|;
block|}
block|}
else|else
block|{
return|return
name|getSession
argument_list|()
operator|.
name|createConsumer
argument_list|(
name|getDestination
argument_list|()
argument_list|)
return|;
block|}
block|}
block|}
block|}
end_class

end_unit

