begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Copyright 2005-2006 The Apache Software Foundation  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activecluster
operator|.
name|group
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|JMSException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activecluster
operator|.
name|group
operator|.
name|Group
import|;
end_import

begin_comment
comment|/**  * @version $Revision: 1.4 $  */
end_comment

begin_class
specifier|public
class|class
name|GroupModelTest
extends|extends
name|GroupTestSupport
block|{
specifier|public
name|void
name|testGroups
parameter_list|()
throws|throws
name|Exception
block|{
name|addNode
argument_list|(
literal|"a"
argument_list|)
expr_stmt|;
comment|// lets check how many groups have been created
name|List
name|groups
init|=
name|model
operator|.
name|getGroups
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"number of groups: "
operator|+
name|groups
argument_list|,
literal|1
argument_list|,
name|model
operator|.
name|getGroups
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Group
name|group
init|=
operator|(
name|Group
operator|)
name|model
operator|.
name|getGroups
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertIncomplete
argument_list|(
name|group
argument_list|)
expr_stmt|;
name|addNode
argument_list|(
literal|"b"
argument_list|)
expr_stmt|;
name|assertNotFullButUsable
argument_list|(
name|group
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"number of groups: "
operator|+
name|groups
argument_list|,
literal|1
argument_list|,
name|model
operator|.
name|getGroups
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|addNode
argument_list|(
literal|"c"
argument_list|)
expr_stmt|;
name|assertFull
argument_list|(
name|group
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"number of groups: "
operator|+
name|groups
argument_list|,
literal|1
argument_list|,
name|model
operator|.
name|getGroups
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|addNode
argument_list|(
literal|"d"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"number of groups: "
operator|+
name|groups
argument_list|,
literal|2
argument_list|,
name|model
operator|.
name|getGroups
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|group
operator|=
operator|(
name|Group
operator|)
name|model
operator|.
name|getGroups
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertIncomplete
argument_list|(
name|group
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testRemoveGroups
parameter_list|()
throws|throws
name|JMSException
block|{
name|String
index|[]
name|nodeNames
init|=
block|{
literal|"a"
block|,
literal|"b"
block|,
literal|"c"
block|}
decl_stmt|;
name|addNodes
argument_list|(
name|nodeNames
argument_list|)
expr_stmt|;
comment|// TODO now lets remove the nodes and check group states..
block|}
block|}
end_class

end_unit

