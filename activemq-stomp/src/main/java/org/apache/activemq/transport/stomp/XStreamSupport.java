begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|stomp
package|;
end_package

begin_import
import|import
name|com
operator|.
name|thoughtworks
operator|.
name|xstream
operator|.
name|XStream
import|;
end_import

begin_import
import|import
name|com
operator|.
name|thoughtworks
operator|.
name|xstream
operator|.
name|security
operator|.
name|AnyTypePermission
import|;
end_import

begin_import
import|import
name|com
operator|.
name|thoughtworks
operator|.
name|xstream
operator|.
name|security
operator|.
name|NoTypePermission
import|;
end_import

begin_import
import|import
name|com
operator|.
name|thoughtworks
operator|.
name|xstream
operator|.
name|security
operator|.
name|PrimitiveTypePermission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|util
operator|.
name|ClassLoadingAwareObjectInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_class
specifier|public
class|class
name|XStreamSupport
block|{
specifier|public
specifier|static
name|XStream
name|createXStream
parameter_list|()
block|{
name|XStream
name|stream
init|=
operator|new
name|XStream
argument_list|()
decl_stmt|;
name|stream
operator|.
name|addPermission
argument_list|(
name|NoTypePermission
operator|.
name|NONE
argument_list|)
expr_stmt|;
name|stream
operator|.
name|addPermission
argument_list|(
name|PrimitiveTypePermission
operator|.
name|PRIMITIVES
argument_list|)
expr_stmt|;
name|stream
operator|.
name|allowTypeHierarchy
argument_list|(
name|Collection
operator|.
name|class
argument_list|)
expr_stmt|;
name|stream
operator|.
name|allowTypeHierarchy
argument_list|(
name|Map
operator|.
name|class
argument_list|)
expr_stmt|;
name|stream
operator|.
name|allowTypes
argument_list|(
operator|new
name|Class
index|[]
block|{
name|String
operator|.
name|class
block|}
argument_list|)
expr_stmt|;
if|if
condition|(
name|ClassLoadingAwareObjectInputStream
operator|.
name|isAllAllowed
argument_list|()
condition|)
block|{
name|stream
operator|.
name|addPermission
argument_list|(
name|AnyTypePermission
operator|.
name|ANY
argument_list|)
expr_stmt|;
block|}
else|else
block|{
for|for
control|(
name|String
name|packageName
range|:
name|ClassLoadingAwareObjectInputStream
operator|.
name|serializablePackages
control|)
block|{
name|stream
operator|.
name|allowTypesByWildcard
argument_list|(
operator|new
name|String
index|[]
block|{
name|packageName
operator|+
literal|".**"
block|}
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|stream
return|;
block|}
block|}
end_class

end_unit

