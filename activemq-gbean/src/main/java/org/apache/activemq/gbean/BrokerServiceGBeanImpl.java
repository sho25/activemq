begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Copyright 2005-2006 The Apache Software Foundation  *  *  Licensed under the Apache License, Version 2.0 (the "License");  *  you may not use this file except in compliance with the License.  *  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|gbean
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|sql
operator|.
name|DataSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|DefaultPersistenceAdapterFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gbean
operator|.
name|GBeanInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gbean
operator|.
name|GBeanInfoBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gbean
operator|.
name|GBeanLifecycle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|system
operator|.
name|serverinfo
operator|.
name|ServerInfo
import|;
end_import

begin_comment
comment|/**  * Default implementation of the ActiveMQ Message Server  *  * @version $Revision: 1.1.1.1 $  */
end_comment

begin_class
specifier|public
class|class
name|BrokerServiceGBeanImpl
implements|implements
name|GBeanLifecycle
implements|,
name|BrokerServiceGBean
block|{
specifier|private
name|Log
name|log
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
specifier|private
name|String
name|brokerName
decl_stmt|;
specifier|private
name|String
name|brokerUri
decl_stmt|;
specifier|private
name|BrokerService
name|brokerService
decl_stmt|;
specifier|private
name|ServerInfo
name|serverInfo
decl_stmt|;
specifier|private
name|String
name|dataDirectory
decl_stmt|;
specifier|private
name|DataSourceReference
name|dataSource
decl_stmt|;
specifier|public
name|BrokerServiceGBeanImpl
parameter_list|()
block|{     }
specifier|public
specifier|synchronized
name|BrokerService
name|getBrokerContainer
parameter_list|()
block|{
return|return
name|brokerService
return|;
block|}
specifier|public
specifier|synchronized
name|void
name|doStart
parameter_list|()
throws|throws
name|Exception
block|{
name|ClassLoader
name|old
init|=
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getContextClassLoader
argument_list|()
decl_stmt|;
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|setContextClassLoader
argument_list|(
name|BrokerServiceGBeanImpl
operator|.
name|class
operator|.
name|getClassLoader
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
if|if
condition|(
name|brokerService
operator|==
literal|null
condition|)
block|{
name|brokerService
operator|=
name|createContainer
argument_list|()
expr_stmt|;
block|}
name|DefaultPersistenceAdapterFactory
name|persistenceFactory
init|=
name|brokerService
operator|.
name|getPersistenceFactory
argument_list|()
decl_stmt|;
name|persistenceFactory
operator|.
name|setDataDirectory
argument_list|(
name|serverInfo
operator|.
name|resolve
argument_list|(
name|dataDirectory
argument_list|)
argument_list|)
expr_stmt|;
name|persistenceFactory
operator|.
name|setDataSource
argument_list|(
operator|(
name|DataSource
operator|)
name|dataSource
operator|.
name|$getResource
argument_list|()
argument_list|)
expr_stmt|;
name|brokerService
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|setContextClassLoader
argument_list|(
name|old
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|BrokerService
name|createContainer
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|brokerUri
operator|!=
literal|null
condition|)
block|{
name|BrokerService
name|answer
init|=
name|BrokerFactory
operator|.
name|createBroker
argument_list|(
operator|new
name|URI
argument_list|(
name|brokerUri
argument_list|)
argument_list|)
decl_stmt|;
name|brokerName
operator|=
name|answer
operator|.
name|getBrokerName
argument_list|()
expr_stmt|;
return|return
name|answer
return|;
block|}
else|else
block|{
name|BrokerService
name|answer
init|=
operator|new
name|BrokerService
argument_list|()
decl_stmt|;
name|answer
operator|.
name|setBrokerName
argument_list|(
name|brokerName
argument_list|)
expr_stmt|;
return|return
name|answer
return|;
block|}
block|}
specifier|public
specifier|synchronized
name|void
name|doStop
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|brokerService
operator|!=
literal|null
condition|)
block|{
name|BrokerService
name|temp
init|=
name|brokerService
decl_stmt|;
name|brokerService
operator|=
literal|null
expr_stmt|;
name|temp
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|synchronized
name|void
name|doFail
parameter_list|()
block|{
if|if
condition|(
name|brokerService
operator|!=
literal|null
condition|)
block|{
name|BrokerService
name|temp
init|=
name|brokerService
decl_stmt|;
name|brokerService
operator|=
literal|null
expr_stmt|;
try|try
block|{
name|temp
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|log
operator|.
name|info
argument_list|(
literal|"Caught while closing due to failure: "
operator|+
name|e
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
specifier|static
specifier|final
name|GBeanInfo
name|GBEAN_INFO
decl_stmt|;
static|static
block|{
name|GBeanInfoBuilder
name|infoFactory
init|=
operator|new
name|GBeanInfoBuilder
argument_list|(
literal|"ActiveMQ Message Broker"
argument_list|,
name|BrokerServiceGBeanImpl
operator|.
name|class
argument_list|,
literal|"JMSServer"
argument_list|)
decl_stmt|;
name|infoFactory
operator|.
name|addReference
argument_list|(
literal|"serverInfo"
argument_list|,
name|ServerInfo
operator|.
name|class
argument_list|)
expr_stmt|;
name|infoFactory
operator|.
name|addAttribute
argument_list|(
literal|"brokerName"
argument_list|,
name|String
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|infoFactory
operator|.
name|addAttribute
argument_list|(
literal|"brokerUri"
argument_list|,
name|String
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|infoFactory
operator|.
name|addAttribute
argument_list|(
literal|"dataDirectory"
argument_list|,
name|String
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|infoFactory
operator|.
name|addReference
argument_list|(
literal|"dataSource"
argument_list|,
name|DataSourceReference
operator|.
name|class
argument_list|)
expr_stmt|;
name|infoFactory
operator|.
name|addInterface
argument_list|(
name|BrokerServiceGBean
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// infoFactory.setConstructor(new String[]{"brokerName, brokerUri"});
name|GBEAN_INFO
operator|=
name|infoFactory
operator|.
name|getBeanInfo
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|GBeanInfo
name|getGBeanInfo
parameter_list|()
block|{
return|return
name|GBEAN_INFO
return|;
block|}
comment|/** 	 * @return Returns the brokerName. 	 */
specifier|public
name|String
name|getBrokerName
parameter_list|()
block|{
return|return
name|brokerName
return|;
block|}
specifier|public
name|String
name|getBrokerUri
parameter_list|()
block|{
return|return
name|brokerUri
return|;
block|}
specifier|public
name|void
name|setBrokerName
parameter_list|(
name|String
name|brokerName
parameter_list|)
block|{
name|this
operator|.
name|brokerName
operator|=
name|brokerName
expr_stmt|;
block|}
specifier|public
name|void
name|setBrokerUri
parameter_list|(
name|String
name|brokerUri
parameter_list|)
block|{
name|this
operator|.
name|brokerUri
operator|=
name|brokerUri
expr_stmt|;
block|}
specifier|public
name|ServerInfo
name|getServerInfo
parameter_list|()
block|{
return|return
name|serverInfo
return|;
block|}
specifier|public
name|void
name|setServerInfo
parameter_list|(
name|ServerInfo
name|serverInfo
parameter_list|)
block|{
name|this
operator|.
name|serverInfo
operator|=
name|serverInfo
expr_stmt|;
block|}
specifier|public
name|String
name|getDataDirectory
parameter_list|()
block|{
return|return
name|dataDirectory
return|;
block|}
specifier|public
name|void
name|setDataDirectory
parameter_list|(
name|String
name|dataDir
parameter_list|)
block|{
name|this
operator|.
name|dataDirectory
operator|=
name|dataDir
expr_stmt|;
block|}
specifier|public
name|DataSourceReference
name|getDataSource
parameter_list|()
block|{
return|return
name|dataSource
return|;
block|}
specifier|public
name|void
name|setDataSource
parameter_list|(
name|DataSourceReference
name|dataSource
parameter_list|)
block|{
name|this
operator|.
name|dataSource
operator|=
name|dataSource
expr_stmt|;
block|}
block|}
end_class

end_unit

