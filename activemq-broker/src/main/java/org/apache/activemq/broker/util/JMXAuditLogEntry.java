begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_class
specifier|public
class|class
name|JMXAuditLogEntry
extends|extends
name|AuditLogEntry
block|{
specifier|public
specifier|static
specifier|final
name|String
index|[]
name|VERBS
init|=
operator|new
name|String
index|[]
block|{
literal|" called "
block|,
literal|" ended "
block|}
decl_stmt|;
specifier|private
name|int
name|state
init|=
literal|0
decl_stmt|;
specifier|public
name|void
name|complete
parameter_list|()
block|{
name|setTimestamp
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
expr_stmt|;
name|state
operator|=
literal|1
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|user
operator|.
name|trim
argument_list|()
operator|+
name|VERBS
index|[
name|state
index|]
operator|+
name|operation
operator|+
name|Arrays
operator|.
name|toString
argument_list|(
operator|(
name|Object
index|[]
operator|)
name|parameters
operator|.
name|get
argument_list|(
literal|"arguments"
argument_list|)
argument_list|)
operator|+
literal|" at "
operator|+
name|getFormattedTime
argument_list|()
return|;
block|}
block|}
end_class

end_unit

