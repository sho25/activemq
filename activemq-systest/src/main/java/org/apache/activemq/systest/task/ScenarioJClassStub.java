begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|systest
operator|.
name|task
package|;
end_package

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jam
operator|.
name|JAnnotation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jam
operator|.
name|JAnnotationValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jam
operator|.
name|JClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jam
operator|.
name|JComment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jam
operator|.
name|JConstructor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jam
operator|.
name|JElement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jam
operator|.
name|JField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jam
operator|.
name|JMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jam
operator|.
name|JPackage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jam
operator|.
name|JProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jam
operator|.
name|JSourcePosition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jam
operator|.
name|JamClassLoader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jam
operator|.
name|visitor
operator|.
name|JVisitor
import|;
end_import

begin_comment
comment|/**  *   * @version $Revision: 1.1 $  */
end_comment

begin_class
specifier|public
class|class
name|ScenarioJClassStub
implements|implements
name|JClass
block|{
specifier|protected
specifier|static
specifier|final
name|String
index|[]
name|EMPTY_ARRAY
init|=
block|{}
decl_stmt|;
specifier|private
specifier|final
name|String
name|qualifiedName
decl_stmt|;
specifier|private
specifier|final
name|String
index|[]
name|interfaceNames
decl_stmt|;
specifier|private
specifier|final
name|String
name|simpleName
decl_stmt|;
specifier|private
name|JClass
index|[]
name|interfaces
decl_stmt|;
specifier|public
name|ScenarioJClassStub
parameter_list|(
name|String
name|qualifiedName
parameter_list|,
name|String
index|[]
name|interfaceNames
parameter_list|)
block|{
name|this
operator|.
name|qualifiedName
operator|=
name|qualifiedName
expr_stmt|;
name|this
operator|.
name|interfaceNames
operator|=
name|interfaceNames
expr_stmt|;
name|int
name|idx
init|=
name|qualifiedName
operator|.
name|lastIndexOf
argument_list|(
literal|'.'
argument_list|)
decl_stmt|;
if|if
condition|(
name|idx
operator|>
literal|0
condition|)
block|{
name|this
operator|.
name|simpleName
operator|=
name|qualifiedName
operator|.
name|substring
argument_list|(
name|idx
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|simpleName
operator|=
name|qualifiedName
expr_stmt|;
block|}
block|}
specifier|public
name|JPackage
name|getContainingPackage
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|JClass
name|getSuperclass
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|JClass
index|[]
name|getInterfaces
parameter_list|()
block|{
if|if
condition|(
name|interfaces
operator|==
literal|null
condition|)
block|{
name|int
name|size
init|=
name|interfaceNames
operator|.
name|length
decl_stmt|;
name|interfaces
operator|=
operator|new
name|JClass
index|[
name|size
index|]
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|interfaceNames
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|interfaces
index|[
name|i
index|]
operator|=
operator|new
name|ScenarioJClassStub
argument_list|(
name|interfaceNames
index|[
name|i
index|]
argument_list|,
name|EMPTY_ARRAY
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|interfaces
return|;
block|}
specifier|public
name|JField
index|[]
name|getFields
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|JField
index|[]
name|getDeclaredFields
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|JMethod
index|[]
name|getMethods
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|JMethod
index|[]
name|getDeclaredMethods
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|JConstructor
index|[]
name|getConstructors
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|JProperty
index|[]
name|getProperties
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|JProperty
index|[]
name|getDeclaredProperties
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|boolean
name|isInterface
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|isAnnotationType
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|isPrimitiveType
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|isBuiltinType
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|Class
name|getPrimitiveClass
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|boolean
name|isFinal
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|isStatic
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|isAbstract
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|isVoidType
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|isObjectType
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|isArrayType
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|JClass
name|getArrayComponentType
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|int
name|getArrayDimensions
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
specifier|public
name|boolean
name|isAssignableFrom
parameter_list|(
name|JClass
name|arg0
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|JClass
index|[]
name|getClasses
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|JClass
name|getContainingClass
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|String
name|getFieldDescriptor
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|boolean
name|isEnumType
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|JamClassLoader
name|getClassLoader
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|JClass
name|forName
parameter_list|(
name|String
name|arg0
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|JClass
index|[]
name|getImportedClasses
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|JPackage
index|[]
name|getImportedPackages
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|boolean
name|isUnresolvedType
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|int
name|getModifiers
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
specifier|public
name|boolean
name|isPackagePrivate
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|isPrivate
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|isProtected
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|isPublic
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|JAnnotation
index|[]
name|getAnnotations
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|JAnnotation
name|getAnnotation
parameter_list|(
name|Class
name|arg0
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|Object
name|getAnnotationProxy
parameter_list|(
name|Class
name|arg0
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|JAnnotation
name|getAnnotation
parameter_list|(
name|String
name|arg0
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|JAnnotationValue
name|getAnnotationValue
parameter_list|(
name|String
name|arg0
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|JComment
name|getComment
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|JAnnotation
index|[]
name|getAllJavadocTags
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|JElement
name|getParent
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|String
name|getSimpleName
parameter_list|()
block|{
return|return
name|simpleName
return|;
block|}
specifier|public
name|String
name|getQualifiedName
parameter_list|()
block|{
return|return
name|qualifiedName
return|;
block|}
specifier|public
name|JSourcePosition
name|getSourcePosition
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|accept
parameter_list|(
name|JVisitor
name|arg0
parameter_list|)
block|{     }
specifier|public
name|Object
name|getArtifact
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

