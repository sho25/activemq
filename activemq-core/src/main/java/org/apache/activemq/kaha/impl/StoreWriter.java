begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *   * Copyright 2005-2006 The Apache Software Foundation  *   * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with  * the License. You may obtain a copy of the License at  *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on  * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the  * specific language governing permissions and limitations under the License.  */
end_comment

begin_comment
comment|/**  * Optimized writes to a RandomAcessFile  *   * @version $Revision: 1.1.1.1 $  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|kaha
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|RandomAccessFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|kaha
operator|.
name|Marshaller
import|;
end_import

begin_comment
comment|/**  * Optimized Store writer  *   * @version $Revision: 1.1.1.1 $  */
end_comment

begin_class
class|class
name|StoreWriter
block|{
specifier|protected
name|RandomAccessFile
name|dataFile
decl_stmt|;
specifier|protected
name|StoreByteArrayOutputStream
name|bytesOut
decl_stmt|;
specifier|protected
name|DataOutputStream
name|dataOut
decl_stmt|;
comment|/**      * Construct a Store writer      * @param file      */
name|StoreWriter
parameter_list|(
name|RandomAccessFile
name|file
parameter_list|)
block|{
name|this
operator|.
name|dataFile
operator|=
name|file
expr_stmt|;
name|this
operator|.
name|bytesOut
operator|=
operator|new
name|StoreByteArrayOutputStream
argument_list|()
expr_stmt|;
name|this
operator|.
name|dataOut
operator|=
operator|new
name|DataOutputStream
argument_list|(
name|bytesOut
argument_list|)
expr_stmt|;
block|}
name|void
name|updateHeader
parameter_list|(
name|Item
name|item
parameter_list|)
throws|throws
name|IOException
block|{
name|bytesOut
operator|.
name|reset
argument_list|()
expr_stmt|;
name|item
operator|.
name|writeHeader
argument_list|(
name|dataOut
argument_list|)
expr_stmt|;
name|dataFile
operator|.
name|seek
argument_list|(
name|item
operator|.
name|getOffset
argument_list|()
argument_list|)
expr_stmt|;
name|dataFile
operator|.
name|write
argument_list|(
name|bytesOut
operator|.
name|getData
argument_list|()
argument_list|,
literal|0
argument_list|,
name|bytesOut
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|void
name|updatePayload
parameter_list|(
name|Item
name|item
parameter_list|)
throws|throws
name|IOException
block|{
name|bytesOut
operator|.
name|reset
argument_list|()
expr_stmt|;
name|dataFile
operator|.
name|seek
argument_list|(
name|item
operator|.
name|getOffset
argument_list|()
operator|+
name|Item
operator|.
name|HEAD_SIZE
argument_list|)
expr_stmt|;
name|item
operator|.
name|writeLocation
argument_list|(
name|dataOut
argument_list|)
expr_stmt|;
name|dataFile
operator|.
name|write
argument_list|(
name|bytesOut
operator|.
name|getData
argument_list|()
argument_list|,
literal|0
argument_list|,
name|bytesOut
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|int
name|loadPayload
parameter_list|(
name|Marshaller
name|marshaller
parameter_list|,
name|Object
name|payload
parameter_list|,
name|Item
name|item
parameter_list|)
throws|throws
name|IOException
block|{
name|bytesOut
operator|.
name|reset
argument_list|()
expr_stmt|;
name|bytesOut
operator|.
name|position
argument_list|(
name|Item
operator|.
name|HEAD_SIZE
argument_list|)
expr_stmt|;
name|item
operator|.
name|writePayload
argument_list|(
name|marshaller
argument_list|,
name|payload
argument_list|,
name|dataOut
argument_list|)
expr_stmt|;
return|return
name|bytesOut
operator|.
name|size
argument_list|()
operator|-
name|Item
operator|.
name|HEAD_SIZE
return|;
block|}
name|void
name|storeItem
parameter_list|(
name|Item
name|item
parameter_list|,
name|int
name|payloadSize
parameter_list|)
throws|throws
name|IOException
block|{
name|bytesOut
operator|.
name|reset
argument_list|()
expr_stmt|;
name|item
operator|.
name|writeHeader
argument_list|(
name|dataOut
argument_list|)
expr_stmt|;
name|dataFile
operator|.
name|seek
argument_list|(
name|item
operator|.
name|getOffset
argument_list|()
argument_list|)
expr_stmt|;
name|dataFile
operator|.
name|write
argument_list|(
name|bytesOut
operator|.
name|getData
argument_list|()
argument_list|,
literal|0
argument_list|,
name|payloadSize
operator|+
name|Item
operator|.
name|HEAD_SIZE
argument_list|)
expr_stmt|;
block|}
name|void
name|writeShort
parameter_list|(
name|long
name|offset
parameter_list|,
name|int
name|value
parameter_list|)
throws|throws
name|IOException
block|{
name|bytesOut
operator|.
name|reset
argument_list|()
expr_stmt|;
name|dataFile
operator|.
name|seek
argument_list|(
name|offset
argument_list|)
expr_stmt|;
name|dataOut
operator|.
name|writeShort
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|dataFile
operator|.
name|write
argument_list|(
name|bytesOut
operator|.
name|getData
argument_list|()
argument_list|,
literal|0
argument_list|,
name|bytesOut
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|void
name|writeInt
parameter_list|(
name|long
name|offset
parameter_list|,
name|int
name|value
parameter_list|)
throws|throws
name|IOException
block|{
name|bytesOut
operator|.
name|reset
argument_list|()
expr_stmt|;
name|dataFile
operator|.
name|seek
argument_list|(
name|offset
argument_list|)
expr_stmt|;
name|dataOut
operator|.
name|writeInt
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|dataFile
operator|.
name|write
argument_list|(
name|bytesOut
operator|.
name|getData
argument_list|()
argument_list|,
literal|0
argument_list|,
name|bytesOut
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|void
name|writeLong
parameter_list|(
name|long
name|offset
parameter_list|,
name|long
name|value
parameter_list|)
throws|throws
name|IOException
block|{
name|bytesOut
operator|.
name|reset
argument_list|()
expr_stmt|;
name|dataFile
operator|.
name|seek
argument_list|(
name|offset
argument_list|)
expr_stmt|;
name|dataOut
operator|.
name|writeLong
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|dataFile
operator|.
name|write
argument_list|(
name|bytesOut
operator|.
name|getData
argument_list|()
argument_list|,
literal|0
argument_list|,
name|bytesOut
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|long
name|length
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|dataFile
operator|.
name|length
argument_list|()
return|;
block|}
name|long
name|position
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|dataFile
operator|.
name|getFilePointer
argument_list|()
return|;
block|}
name|void
name|position
parameter_list|(
name|long
name|newPosition
parameter_list|)
throws|throws
name|IOException
block|{
name|dataFile
operator|.
name|seek
argument_list|(
name|newPosition
argument_list|)
expr_stmt|;
block|}
name|void
name|allocateSpace
parameter_list|(
name|long
name|newLength
parameter_list|)
throws|throws
name|IOException
block|{
name|dataFile
operator|.
name|getFD
argument_list|()
operator|.
name|sync
argument_list|()
expr_stmt|;
name|long
name|currentOffset
init|=
name|dataFile
operator|.
name|getFilePointer
argument_list|()
decl_stmt|;
name|dataFile
operator|.
name|seek
argument_list|(
name|newLength
argument_list|)
expr_stmt|;
name|dataFile
operator|.
name|write
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|dataFile
operator|.
name|seek
argument_list|(
name|currentOffset
argument_list|)
expr_stmt|;
name|dataFile
operator|.
name|getFD
argument_list|()
operator|.
name|sync
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

