begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|usage
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|JMSException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|TextMessage
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|ObjectName
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|jmx
operator|.
name|QueueViewMBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|jms
operator|.
name|core
operator|.
name|JmsTemplate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|jms
operator|.
name|core
operator|.
name|MessageCreator
import|;
end_import

begin_class
specifier|public
class|class
name|CompositeMessageCursorUsageTest
extends|extends
name|TestCase
block|{
name|BrokerService
name|broker
decl_stmt|;
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|broker
operator|=
operator|new
name|BrokerService
argument_list|()
expr_stmt|;
name|broker
operator|.
name|setPersistent
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|broker
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|broker
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testCompositeMessageUsage
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|compositeQueue
init|=
literal|"compositeA,compositeB"
decl_stmt|;
name|ActiveMQConnectionFactory
name|cf
init|=
operator|new
name|ActiveMQConnectionFactory
argument_list|(
literal|"vm://localhost"
argument_list|)
decl_stmt|;
name|JmsTemplate
name|jt
init|=
operator|new
name|JmsTemplate
argument_list|(
name|cf
argument_list|)
decl_stmt|;
name|jt
operator|.
name|send
argument_list|(
name|compositeQueue
argument_list|,
operator|new
name|MessageCreator
argument_list|()
block|{
specifier|public
name|Message
name|createMessage
parameter_list|(
name|Session
name|session
parameter_list|)
throws|throws
name|JMSException
block|{
name|TextMessage
name|tm
init|=
name|session
operator|.
name|createTextMessage
argument_list|()
decl_stmt|;
name|tm
operator|.
name|setText
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
return|return
name|tm
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|jt
operator|.
name|send
argument_list|(
literal|"noCompositeA"
argument_list|,
operator|new
name|MessageCreator
argument_list|()
block|{
specifier|public
name|Message
name|createMessage
parameter_list|(
name|Session
name|session
parameter_list|)
throws|throws
name|JMSException
block|{
name|TextMessage
name|tm
init|=
name|session
operator|.
name|createTextMessage
argument_list|()
decl_stmt|;
name|tm
operator|.
name|setText
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
return|return
name|tm
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|jt
operator|.
name|send
argument_list|(
literal|"noCompositeB"
argument_list|,
operator|new
name|MessageCreator
argument_list|()
block|{
specifier|public
name|Message
name|createMessage
parameter_list|(
name|Session
name|session
parameter_list|)
throws|throws
name|JMSException
block|{
name|TextMessage
name|tm
init|=
name|session
operator|.
name|createTextMessage
argument_list|()
decl_stmt|;
name|tm
operator|.
name|setText
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
return|return
name|tm
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Cursor memory usage wrong for 'noCompositeA' queue"
argument_list|,
literal|1032
argument_list|,
name|getQueueView
argument_list|(
literal|"noCompositeA"
argument_list|)
operator|.
name|getCursorMemoryUsage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Cursor memory usage wrong for 'noCompositeB' queue"
argument_list|,
literal|1032
argument_list|,
name|getQueueView
argument_list|(
literal|"noCompositeB"
argument_list|)
operator|.
name|getCursorMemoryUsage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Cursor memory usage wrong for 'CompositeA' queue"
argument_list|,
literal|1032
argument_list|,
name|getQueueView
argument_list|(
literal|"compositeA"
argument_list|)
operator|.
name|getCursorMemoryUsage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Cursor memory usage wrong for 'CompositeB' queue"
argument_list|,
literal|1032
argument_list|,
name|getQueueView
argument_list|(
literal|"compositeB"
argument_list|)
operator|.
name|getCursorMemoryUsage
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|QueueViewMBean
name|getQueueView
parameter_list|(
name|String
name|queueName
parameter_list|)
throws|throws
name|Exception
block|{
name|ObjectName
name|queueViewMBeanName
init|=
operator|new
name|ObjectName
argument_list|(
literal|"org.apache.activemq"
operator|+
literal|":type=Broker,brokerName=localhost,destinationType=Queue,destinationName="
operator|+
name|queueName
argument_list|)
decl_stmt|;
return|return
operator|(
name|QueueViewMBean
operator|)
name|broker
operator|.
name|getManagementContext
argument_list|()
operator|.
name|newProxyInstance
argument_list|(
name|queueViewMBeanName
argument_list|,
name|QueueViewMBean
operator|.
name|class
argument_list|,
literal|true
argument_list|)
return|;
block|}
block|}
end_class

end_unit

