begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|bugs
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicInteger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageProducer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|TopicSubscriber
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQConnection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|TransportConnector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ActiveMQBytesMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ActiveMQTopic
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadb
operator|.
name|MessageDatabase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|util
operator|.
name|ByteSequence
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|util
operator|.
name|Wait
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|util
operator|.
name|Wait
operator|.
name|Condition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|filefilter
operator|.
name|TrueFileFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|filefilter
operator|.
name|WildcardFileFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * This class is to show that a durable can lose messages after index deletion.  */
end_comment

begin_class
specifier|public
class|class
name|AMQ6131Test
block|{
specifier|protected
name|BrokerService
name|broker
decl_stmt|;
specifier|protected
name|URI
name|brokerConnectURI
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|startBroker
parameter_list|()
throws|throws
name|Exception
block|{
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|Logger
operator|.
name|getLogger
argument_list|(
name|MessageDatabase
operator|.
name|class
argument_list|)
operator|.
name|setLevel
argument_list|(
name|Level
operator|.
name|TRACE
argument_list|)
expr_stmt|;
name|setUpBroker
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|setUpBroker
parameter_list|(
name|boolean
name|clearDataDir
parameter_list|)
throws|throws
name|Exception
block|{
name|broker
operator|=
operator|new
name|BrokerService
argument_list|()
expr_stmt|;
name|broker
operator|.
name|setPersistent
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|broker
operator|.
name|setDeleteAllMessagesOnStartup
argument_list|(
name|clearDataDir
argument_list|)
expr_stmt|;
comment|// set up a transport
name|TransportConnector
name|connector
init|=
name|broker
operator|.
name|addConnector
argument_list|(
operator|new
name|TransportConnector
argument_list|()
argument_list|)
decl_stmt|;
name|connector
operator|.
name|setUri
argument_list|(
operator|new
name|URI
argument_list|(
literal|"tcp://0.0.0.0:0"
argument_list|)
argument_list|)
expr_stmt|;
name|connector
operator|.
name|setName
argument_list|(
literal|"tcp"
argument_list|)
expr_stmt|;
name|broker
operator|.
name|start
argument_list|()
expr_stmt|;
name|broker
operator|.
name|waitUntilStarted
argument_list|()
expr_stmt|;
name|brokerConnectURI
operator|=
name|broker
operator|.
name|getConnectorByName
argument_list|(
literal|"tcp"
argument_list|)
operator|.
name|getConnectUri
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|stopBroker
parameter_list|()
throws|throws
name|Exception
block|{
name|broker
operator|.
name|stop
argument_list|()
expr_stmt|;
name|broker
operator|.
name|waitUntilStopped
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|BrokerService
name|getBroker
parameter_list|()
block|{
return|return
name|this
operator|.
name|broker
return|;
block|}
specifier|public
name|File
name|getPersistentDir
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|getBroker
argument_list|()
operator|.
name|getPersistenceAdapter
argument_list|()
operator|.
name|getDirectory
argument_list|()
return|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|300000
argument_list|)
specifier|public
name|void
name|testDurableWithOnePendingAfterRestartAndIndexRecovery
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|File
name|persistentDir
init|=
name|getPersistentDir
argument_list|()
decl_stmt|;
name|broker
operator|.
name|getBroker
argument_list|()
operator|.
name|addDestination
argument_list|(
name|broker
operator|.
name|getAdminConnectionContext
argument_list|()
argument_list|,
operator|new
name|ActiveMQTopic
argument_list|(
literal|"durable.sub"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|ActiveMQConnectionFactory
name|connectionFactory
init|=
operator|new
name|ActiveMQConnectionFactory
argument_list|(
name|this
operator|.
name|brokerConnectURI
argument_list|)
decl_stmt|;
name|ActiveMQConnection
name|connection
init|=
operator|(
name|ActiveMQConnection
operator|)
name|connectionFactory
operator|.
name|createConnection
argument_list|()
decl_stmt|;
name|connection
operator|.
name|setClientID
argument_list|(
literal|"myId"
argument_list|)
expr_stmt|;
name|connection
operator|.
name|start
argument_list|()
expr_stmt|;
specifier|final
name|Session
name|jmsSession
init|=
name|connection
operator|.
name|createSession
argument_list|(
literal|false
argument_list|,
name|javax
operator|.
name|jms
operator|.
name|Session
operator|.
name|AUTO_ACKNOWLEDGE
argument_list|)
decl_stmt|;
name|TopicSubscriber
name|durable
init|=
name|jmsSession
operator|.
name|createDurableSubscriber
argument_list|(
operator|new
name|ActiveMQTopic
argument_list|(
literal|"durable.sub"
argument_list|)
argument_list|,
literal|"sub"
argument_list|)
decl_stmt|;
specifier|final
name|MessageProducer
name|producer
init|=
name|jmsSession
operator|.
name|createProducer
argument_list|(
operator|new
name|ActiveMQTopic
argument_list|(
literal|"durable.sub"
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|int
name|original
init|=
operator|new
name|ArrayList
argument_list|<
name|File
argument_list|>
argument_list|(
name|FileUtils
operator|.
name|listFiles
argument_list|(
name|persistentDir
argument_list|,
operator|new
name|WildcardFileFilter
argument_list|(
literal|"*.log"
argument_list|)
argument_list|,
name|TrueFileFilter
operator|.
name|INSTANCE
argument_list|)
argument_list|)
operator|.
name|size
argument_list|()
decl_stmt|;
comment|// 100k messages
specifier|final
name|byte
index|[]
name|data
init|=
operator|new
name|byte
index|[
literal|100000
index|]
decl_stmt|;
specifier|final
name|Random
name|random
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
name|random
operator|.
name|nextBytes
argument_list|(
name|data
argument_list|)
expr_stmt|;
comment|// run test with enough messages to create a second journal file
specifier|final
name|AtomicInteger
name|messageCount
init|=
operator|new
name|AtomicInteger
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Should have added a journal file"
argument_list|,
name|Wait
operator|.
name|waitFor
argument_list|(
operator|new
name|Condition
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|isSatisified
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|ActiveMQBytesMessage
name|message
init|=
operator|new
name|ActiveMQBytesMessage
argument_list|()
decl_stmt|;
name|message
operator|.
name|setContent
argument_list|(
operator|new
name|ByteSequence
argument_list|(
name|data
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100
condition|;
name|i
operator|++
control|)
block|{
name|producer
operator|.
name|send
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|messageCount
operator|.
name|getAndIncrement
argument_list|()
expr_stmt|;
block|}
return|return
operator|new
name|ArrayList
argument_list|<
name|File
argument_list|>
argument_list|(
name|FileUtils
operator|.
name|listFiles
argument_list|(
name|persistentDir
argument_list|,
operator|new
name|WildcardFileFilter
argument_list|(
literal|"*.log"
argument_list|)
argument_list|,
name|TrueFileFilter
operator|.
name|INSTANCE
argument_list|)
argument_list|)
operator|.
name|size
argument_list|()
operator|>
name|original
return|;
block|}
block|}
argument_list|)
argument_list|)
expr_stmt|;
comment|// Consume all but 1 message
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|messageCount
operator|.
name|get
argument_list|()
operator|-
literal|1
condition|;
name|i
operator|++
control|)
block|{
name|durable
operator|.
name|receive
argument_list|()
expr_stmt|;
block|}
name|durable
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// wait until a journal file has been GC'd after receiving messages
name|assertTrue
argument_list|(
literal|"Subscription should go inactive"
argument_list|,
name|Wait
operator|.
name|waitFor
argument_list|(
operator|new
name|Condition
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|isSatisified
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|broker
operator|.
name|getAdminView
argument_list|()
operator|.
name|getInactiveDurableTopicSubscribers
argument_list|()
operator|.
name|length
operator|==
literal|1
return|;
block|}
block|}
argument_list|)
argument_list|)
expr_stmt|;
comment|// force a GC of unneeded journal files
name|getBroker
argument_list|()
operator|.
name|getPersistenceAdapter
argument_list|()
operator|.
name|checkpoint
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// wait until a journal file has been GC'd after receiving messages
name|assertFalse
argument_list|(
literal|"Should not have garbage collected"
argument_list|,
name|Wait
operator|.
name|waitFor
argument_list|(
operator|new
name|Wait
operator|.
name|Condition
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|isSatisified
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|ArrayList
argument_list|<
name|File
argument_list|>
argument_list|(
name|FileUtils
operator|.
name|listFiles
argument_list|(
name|persistentDir
argument_list|,
operator|new
name|WildcardFileFilter
argument_list|(
literal|"*.log"
argument_list|)
argument_list|,
name|TrueFileFilter
operator|.
name|INSTANCE
argument_list|)
argument_list|)
operator|.
name|size
argument_list|()
operator|==
name|original
return|;
block|}
block|}
argument_list|,
literal|5000
argument_list|,
literal|500
argument_list|)
argument_list|)
expr_stmt|;
comment|// stop the broker so we can blow away the index
name|getBroker
argument_list|()
operator|.
name|stop
argument_list|()
expr_stmt|;
name|getBroker
argument_list|()
operator|.
name|waitUntilStopped
argument_list|()
expr_stmt|;
comment|// delete the index so that the durables are gone from the index
comment|// The test passes if you take out this delete section
for|for
control|(
name|File
name|index
range|:
name|FileUtils
operator|.
name|listFiles
argument_list|(
name|persistentDir
argument_list|,
operator|new
name|WildcardFileFilter
argument_list|(
literal|"db.*"
argument_list|)
argument_list|,
name|TrueFileFilter
operator|.
name|INSTANCE
argument_list|)
control|)
block|{
name|FileUtils
operator|.
name|deleteQuietly
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
name|stopBroker
argument_list|()
expr_stmt|;
name|setUpBroker
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|broker
operator|.
name|getAdminView
argument_list|()
operator|.
name|getInactiveDurableTopicSubscribers
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|broker
operator|.
name|getAdminView
argument_list|()
operator|.
name|getDurableTopicSubscribers
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|ActiveMQConnectionFactory
name|connectionFactory2
init|=
operator|new
name|ActiveMQConnectionFactory
argument_list|(
name|this
operator|.
name|brokerConnectURI
argument_list|)
decl_stmt|;
name|ActiveMQConnection
name|connection2
init|=
operator|(
name|ActiveMQConnection
operator|)
name|connectionFactory2
operator|.
name|createConnection
argument_list|()
decl_stmt|;
name|connection2
operator|.
name|setClientID
argument_list|(
literal|"myId"
argument_list|)
expr_stmt|;
name|connection2
operator|.
name|start
argument_list|()
expr_stmt|;
specifier|final
name|Session
name|jmsSession2
init|=
name|connection2
operator|.
name|createSession
argument_list|(
literal|false
argument_list|,
name|javax
operator|.
name|jms
operator|.
name|Session
operator|.
name|AUTO_ACKNOWLEDGE
argument_list|)
decl_stmt|;
name|TopicSubscriber
name|durable2
init|=
name|jmsSession2
operator|.
name|createDurableSubscriber
argument_list|(
operator|new
name|ActiveMQTopic
argument_list|(
literal|"durable.sub"
argument_list|)
argument_list|,
literal|"sub"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|broker
operator|.
name|getAdminView
argument_list|()
operator|.
name|getInactiveDurableTopicSubscribers
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|broker
operator|.
name|getAdminView
argument_list|()
operator|.
name|getDurableTopicSubscribers
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|durable2
operator|.
name|receive
argument_list|(
literal|5000
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|300000
argument_list|)
specifier|public
name|void
name|testDurableWithNoMessageAfterRestartAndIndexRecovery
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|File
name|persistentDir
init|=
name|getPersistentDir
argument_list|()
decl_stmt|;
name|broker
operator|.
name|getBroker
argument_list|()
operator|.
name|addDestination
argument_list|(
name|broker
operator|.
name|getAdminConnectionContext
argument_list|()
argument_list|,
operator|new
name|ActiveMQTopic
argument_list|(
literal|"durable.sub"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|ActiveMQConnectionFactory
name|connectionFactory
init|=
operator|new
name|ActiveMQConnectionFactory
argument_list|(
name|this
operator|.
name|brokerConnectURI
argument_list|)
decl_stmt|;
name|ActiveMQConnection
name|connection
init|=
operator|(
name|ActiveMQConnection
operator|)
name|connectionFactory
operator|.
name|createConnection
argument_list|()
decl_stmt|;
name|connection
operator|.
name|setClientID
argument_list|(
literal|"myId"
argument_list|)
expr_stmt|;
name|connection
operator|.
name|start
argument_list|()
expr_stmt|;
specifier|final
name|Session
name|jmsSession
init|=
name|connection
operator|.
name|createSession
argument_list|(
literal|false
argument_list|,
name|javax
operator|.
name|jms
operator|.
name|Session
operator|.
name|AUTO_ACKNOWLEDGE
argument_list|)
decl_stmt|;
name|TopicSubscriber
name|durable
init|=
name|jmsSession
operator|.
name|createDurableSubscriber
argument_list|(
operator|new
name|ActiveMQTopic
argument_list|(
literal|"durable.sub"
argument_list|)
argument_list|,
literal|"sub"
argument_list|)
decl_stmt|;
specifier|final
name|MessageProducer
name|producer
init|=
name|jmsSession
operator|.
name|createProducer
argument_list|(
operator|new
name|ActiveMQTopic
argument_list|(
literal|"durable.sub"
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|int
name|original
init|=
operator|new
name|ArrayList
argument_list|<
name|File
argument_list|>
argument_list|(
name|FileUtils
operator|.
name|listFiles
argument_list|(
name|persistentDir
argument_list|,
operator|new
name|WildcardFileFilter
argument_list|(
literal|"*.log"
argument_list|)
argument_list|,
name|TrueFileFilter
operator|.
name|INSTANCE
argument_list|)
argument_list|)
operator|.
name|size
argument_list|()
decl_stmt|;
comment|// 100k messages
specifier|final
name|byte
index|[]
name|data
init|=
operator|new
name|byte
index|[
literal|100000
index|]
decl_stmt|;
specifier|final
name|Random
name|random
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
name|random
operator|.
name|nextBytes
argument_list|(
name|data
argument_list|)
expr_stmt|;
comment|// run test with enough messages to create a second journal file
specifier|final
name|AtomicInteger
name|messageCount
init|=
operator|new
name|AtomicInteger
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Should have added a journal file"
argument_list|,
name|Wait
operator|.
name|waitFor
argument_list|(
operator|new
name|Condition
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|isSatisified
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|ActiveMQBytesMessage
name|message
init|=
operator|new
name|ActiveMQBytesMessage
argument_list|()
decl_stmt|;
name|message
operator|.
name|setContent
argument_list|(
operator|new
name|ByteSequence
argument_list|(
name|data
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100
condition|;
name|i
operator|++
control|)
block|{
name|producer
operator|.
name|send
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|messageCount
operator|.
name|getAndIncrement
argument_list|()
expr_stmt|;
block|}
return|return
operator|new
name|ArrayList
argument_list|<
name|File
argument_list|>
argument_list|(
name|FileUtils
operator|.
name|listFiles
argument_list|(
name|persistentDir
argument_list|,
operator|new
name|WildcardFileFilter
argument_list|(
literal|"*.log"
argument_list|)
argument_list|,
name|TrueFileFilter
operator|.
name|INSTANCE
argument_list|)
argument_list|)
operator|.
name|size
argument_list|()
operator|>
name|original
return|;
block|}
block|}
argument_list|)
argument_list|)
expr_stmt|;
comment|// Consume all messages
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|messageCount
operator|.
name|get
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|durable
operator|.
name|receive
argument_list|()
expr_stmt|;
block|}
name|durable
operator|.
name|close
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Subscription should go inactive"
argument_list|,
name|Wait
operator|.
name|waitFor
argument_list|(
operator|new
name|Condition
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|isSatisified
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|broker
operator|.
name|getAdminView
argument_list|()
operator|.
name|getInactiveDurableTopicSubscribers
argument_list|()
operator|.
name|length
operator|==
literal|1
return|;
block|}
block|}
argument_list|)
argument_list|)
expr_stmt|;
comment|// force a GC of unneeded journal files
name|getBroker
argument_list|()
operator|.
name|getPersistenceAdapter
argument_list|()
operator|.
name|checkpoint
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// wait until a journal file has been GC'd after receiving messages
name|assertTrue
argument_list|(
literal|"Should have garbage collected"
argument_list|,
name|Wait
operator|.
name|waitFor
argument_list|(
operator|new
name|Wait
operator|.
name|Condition
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|isSatisified
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|ArrayList
argument_list|<
name|File
argument_list|>
argument_list|(
name|FileUtils
operator|.
name|listFiles
argument_list|(
name|persistentDir
argument_list|,
operator|new
name|WildcardFileFilter
argument_list|(
literal|"*.log"
argument_list|)
argument_list|,
name|TrueFileFilter
operator|.
name|INSTANCE
argument_list|)
argument_list|)
operator|.
name|size
argument_list|()
operator|==
name|original
return|;
block|}
block|}
argument_list|)
argument_list|)
expr_stmt|;
comment|// stop the broker so we can blow away the index
name|getBroker
argument_list|()
operator|.
name|stop
argument_list|()
expr_stmt|;
name|getBroker
argument_list|()
operator|.
name|waitUntilStopped
argument_list|()
expr_stmt|;
comment|// delete the index so that the durables are gone from the index
comment|// The test passes if you take out this delete section
for|for
control|(
name|File
name|index
range|:
name|FileUtils
operator|.
name|listFiles
argument_list|(
name|persistentDir
argument_list|,
operator|new
name|WildcardFileFilter
argument_list|(
literal|"db.*"
argument_list|)
argument_list|,
name|TrueFileFilter
operator|.
name|INSTANCE
argument_list|)
control|)
block|{
name|FileUtils
operator|.
name|deleteQuietly
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
name|stopBroker
argument_list|()
expr_stmt|;
name|setUpBroker
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|broker
operator|.
name|getAdminView
argument_list|()
operator|.
name|getInactiveDurableTopicSubscribers
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|broker
operator|.
name|getAdminView
argument_list|()
operator|.
name|getDurableTopicSubscribers
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|ActiveMQConnectionFactory
name|connectionFactory2
init|=
operator|new
name|ActiveMQConnectionFactory
argument_list|(
name|this
operator|.
name|brokerConnectURI
argument_list|)
decl_stmt|;
name|ActiveMQConnection
name|connection2
init|=
operator|(
name|ActiveMQConnection
operator|)
name|connectionFactory2
operator|.
name|createConnection
argument_list|()
decl_stmt|;
name|connection2
operator|.
name|setClientID
argument_list|(
literal|"myId"
argument_list|)
expr_stmt|;
name|connection2
operator|.
name|start
argument_list|()
expr_stmt|;
specifier|final
name|Session
name|jmsSession2
init|=
name|connection2
operator|.
name|createSession
argument_list|(
literal|false
argument_list|,
name|javax
operator|.
name|jms
operator|.
name|Session
operator|.
name|AUTO_ACKNOWLEDGE
argument_list|)
decl_stmt|;
name|TopicSubscriber
name|durable2
init|=
name|jmsSession2
operator|.
name|createDurableSubscriber
argument_list|(
operator|new
name|ActiveMQTopic
argument_list|(
literal|"durable.sub"
argument_list|)
argument_list|,
literal|"sub"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|broker
operator|.
name|getAdminView
argument_list|()
operator|.
name|getInactiveDurableTopicSubscribers
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|broker
operator|.
name|getAdminView
argument_list|()
operator|.
name|getDurableTopicSubscribers
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|durable2
operator|.
name|receive
argument_list|(
literal|500
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

