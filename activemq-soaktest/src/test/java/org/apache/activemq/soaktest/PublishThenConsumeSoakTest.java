begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|soaktest
package|;
end_package

begin_class
specifier|public
class|class
name|PublishThenConsumeSoakTest
extends|extends
name|SoakTestSupport
block|{
specifier|public
name|void
name|testPublishThenReceive
parameter_list|()
throws|throws
name|Exception
block|{
name|messageCount
operator|=
literal|5000000
expr_stmt|;
name|createProducers
argument_list|()
expr_stmt|;
name|int
name|counter
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|messageCount
condition|;
name|i
operator|++
control|)
block|{
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
name|producers
operator|.
name|length
condition|;
name|k
operator|++
control|)
block|{
name|producers
index|[
name|k
index|]
operator|.
name|sendMessage
argument_list|(
name|payload
argument_list|,
literal|"counter"
argument_list|,
name|counter
argument_list|)
expr_stmt|;
name|counter
operator|++
expr_stmt|;
block|}
block|}
name|allMessagesList
operator|.
name|setAsParent
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|createConsumers
argument_list|()
expr_stmt|;
name|allMessagesList
operator|.
name|waitForMessagesToArrive
argument_list|(
name|messageCount
operator|*
name|producers
operator|.
name|length
argument_list|)
expr_stmt|;
name|allMessagesList
operator|.
name|assertMessagesReceived
argument_list|(
name|messageCount
operator|*
name|producers
operator|.
name|length
argument_list|)
expr_stmt|;
name|allMessagesList
operator|.
name|assertMessagesReceivedAreInOrder
argument_list|(
name|messageCount
operator|*
name|producers
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

