begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|usecases
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageProducer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|ObjectName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|openmbean
operator|.
name|CompositeData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|TestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerPlugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|jmx
operator|.
name|DurableSubscriptionViewMBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|filter
operator|.
name|DestinationMapEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|security
operator|.
name|AuthenticationUser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|security
operator|.
name|AuthorizationEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|security
operator|.
name|AuthorizationPlugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|security
operator|.
name|DefaultAuthorizationMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|security
operator|.
name|SimpleAuthenticationPlugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|PersistenceAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|jdbc
operator|.
name|JDBCPersistenceAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|value
operator|=
name|Parameterized
operator|.
name|class
argument_list|)
specifier|public
class|class
name|DurableSubscriptionOfflineBrowseRemoveTest
extends|extends
name|DurableSubscriptionOfflineTestBase
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|DurableSubscriptionOfflineBrowseRemoveTest
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|IDENTITY
init|=
literal|"milly"
decl_stmt|;
specifier|public
name|boolean
name|keepDurableSubsActive
decl_stmt|;
annotation|@
name|Parameterized
operator|.
name|Parameters
argument_list|(
name|name
operator|=
literal|"PA-{0}.KeepSubsActive-{1}"
argument_list|)
specifier|public
specifier|static
name|Collection
argument_list|<
name|Object
index|[]
argument_list|>
name|getTestParameters
parameter_list|()
block|{
name|List
argument_list|<
name|Object
index|[]
argument_list|>
name|testParameters
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
index|[]
argument_list|>
argument_list|()
decl_stmt|;
name|testParameters
operator|.
name|add
argument_list|(
operator|new
name|Object
index|[]
block|{
name|TestSupport
operator|.
name|PersistenceAdapterChoice
operator|.
name|KahaDB
block|,
name|Boolean
operator|.
name|TRUE
block|}
argument_list|)
expr_stmt|;
name|testParameters
operator|.
name|add
argument_list|(
operator|new
name|Object
index|[]
block|{
name|TestSupport
operator|.
name|PersistenceAdapterChoice
operator|.
name|KahaDB
block|,
name|Boolean
operator|.
name|FALSE
block|}
argument_list|)
expr_stmt|;
name|testParameters
operator|.
name|add
argument_list|(
operator|new
name|Object
index|[]
block|{
name|TestSupport
operator|.
name|PersistenceAdapterChoice
operator|.
name|JDBC
block|,
name|Boolean
operator|.
name|TRUE
block|}
argument_list|)
expr_stmt|;
name|testParameters
operator|.
name|add
argument_list|(
operator|new
name|Object
index|[]
block|{
name|TestSupport
operator|.
name|PersistenceAdapterChoice
operator|.
name|JDBC
block|,
name|Boolean
operator|.
name|FALSE
block|}
argument_list|)
expr_stmt|;
comment|// leveldb needs some work on finding index from green messageId
return|return
name|testParameters
return|;
block|}
specifier|public
name|DurableSubscriptionOfflineBrowseRemoveTest
parameter_list|(
name|TestSupport
operator|.
name|PersistenceAdapterChoice
name|adapter
parameter_list|,
name|boolean
name|keepDurableSubsActive
parameter_list|)
block|{
name|this
operator|.
name|defaultPersistenceAdapter
operator|=
name|adapter
expr_stmt|;
name|this
operator|.
name|usePrioritySupport
operator|=
literal|true
expr_stmt|;
name|this
operator|.
name|keepDurableSubsActive
operator|=
name|keepDurableSubsActive
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|configurePlugins
parameter_list|(
name|BrokerService
name|brokerService
parameter_list|)
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|DestinationMapEntry
argument_list|>
name|authorizationEntries
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|AuthorizationEntry
name|entry
init|=
operator|new
name|AuthorizationEntry
argument_list|()
decl_stmt|;
name|entry
operator|.
name|setTopic
argument_list|(
literal|">"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setRead
argument_list|(
name|IDENTITY
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setWrite
argument_list|(
name|IDENTITY
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setAdmin
argument_list|(
name|IDENTITY
argument_list|)
expr_stmt|;
name|authorizationEntries
operator|.
name|add
argument_list|(
name|entry
argument_list|)
expr_stmt|;
name|DefaultAuthorizationMap
name|authorizationMap
init|=
operator|new
name|DefaultAuthorizationMap
argument_list|(
name|authorizationEntries
argument_list|)
decl_stmt|;
name|AuthorizationPlugin
name|authorizationPlugin
init|=
operator|new
name|AuthorizationPlugin
argument_list|(
name|authorizationMap
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|AuthenticationUser
argument_list|>
name|users
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|users
operator|.
name|add
argument_list|(
operator|new
name|AuthenticationUser
argument_list|(
name|IDENTITY
argument_list|,
name|IDENTITY
argument_list|,
name|IDENTITY
argument_list|)
argument_list|)
expr_stmt|;
name|SimpleAuthenticationPlugin
name|authenticationPlugin
init|=
operator|new
name|SimpleAuthenticationPlugin
argument_list|(
name|users
argument_list|)
decl_stmt|;
name|broker
operator|.
name|setPlugins
argument_list|(
operator|new
name|BrokerPlugin
index|[]
block|{
name|authenticationPlugin
block|,
name|authorizationPlugin
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|PersistenceAdapter
name|setDefaultPersistenceAdapter
parameter_list|(
name|BrokerService
name|broker
parameter_list|)
throws|throws
name|IOException
block|{
name|broker
operator|.
name|setKeepDurableSubsActive
argument_list|(
name|keepDurableSubsActive
argument_list|)
expr_stmt|;
return|return
name|super
operator|.
name|setPersistenceAdapter
argument_list|(
name|broker
argument_list|,
name|defaultPersistenceAdapter
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|ActiveMQConnectionFactory
name|createConnectionFactory
parameter_list|()
throws|throws
name|Exception
block|{
name|ActiveMQConnectionFactory
name|connectionFactory
init|=
operator|new
name|ActiveMQConnectionFactory
argument_list|(
literal|"vm://"
operator|+
name|getName
argument_list|(
literal|true
argument_list|)
argument_list|)
decl_stmt|;
name|connectionFactory
operator|.
name|setUserName
argument_list|(
name|IDENTITY
argument_list|)
expr_stmt|;
name|connectionFactory
operator|.
name|setPassword
argument_list|(
name|IDENTITY
argument_list|)
expr_stmt|;
name|connectionFactory
operator|.
name|setWatchTopicAdvisories
argument_list|(
literal|false
argument_list|)
expr_stmt|;
return|return
name|connectionFactory
return|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|60
operator|*
literal|1000
argument_list|)
specifier|public
name|void
name|testBrowseRemoveBrowseOfflineSub
parameter_list|()
throws|throws
name|Exception
block|{
comment|// create durable subscription
name|Connection
name|con
init|=
name|createConnection
argument_list|()
decl_stmt|;
name|Session
name|session
init|=
name|con
operator|.
name|createSession
argument_list|(
literal|false
argument_list|,
name|Session
operator|.
name|AUTO_ACKNOWLEDGE
argument_list|)
decl_stmt|;
name|session
operator|.
name|createDurableSubscriber
argument_list|(
name|topic
argument_list|,
literal|"SubsId"
argument_list|)
expr_stmt|;
name|session
operator|.
name|close
argument_list|()
expr_stmt|;
name|con
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// send messages
name|con
operator|=
name|createConnection
argument_list|()
expr_stmt|;
name|session
operator|=
name|con
operator|.
name|createSession
argument_list|(
literal|false
argument_list|,
name|Session
operator|.
name|AUTO_ACKNOWLEDGE
argument_list|)
expr_stmt|;
name|MessageProducer
name|producer
init|=
name|session
operator|.
name|createProducer
argument_list|(
literal|null
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
block|{
name|Message
name|message
init|=
name|session
operator|.
name|createMessage
argument_list|()
decl_stmt|;
name|message
operator|.
name|setStringProperty
argument_list|(
literal|"filter"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|producer
operator|.
name|send
argument_list|(
name|topic
argument_list|,
name|message
argument_list|)
expr_stmt|;
block|}
name|session
operator|.
name|close
argument_list|()
expr_stmt|;
name|con
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// browse the durable sub
name|ObjectName
index|[]
name|subs
init|=
name|broker
operator|.
name|getAdminView
argument_list|()
operator|.
name|getInactiveDurableTopicSubscribers
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|subs
operator|.
name|length
argument_list|)
expr_stmt|;
name|ObjectName
name|subName
init|=
name|subs
index|[
literal|0
index|]
decl_stmt|;
name|DurableSubscriptionViewMBean
name|sub
init|=
operator|(
name|DurableSubscriptionViewMBean
operator|)
name|broker
operator|.
name|getManagementContext
argument_list|()
operator|.
name|newProxyInstance
argument_list|(
name|subName
argument_list|,
name|DurableSubscriptionViewMBean
operator|.
name|class
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|CompositeData
index|[]
name|data
init|=
name|sub
operator|.
name|browse
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|data
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|data
operator|.
name|length
argument_list|)
expr_stmt|;
name|LinkedList
argument_list|<
name|String
argument_list|>
name|idToRemove
init|=
operator|new
name|LinkedList
argument_list|<>
argument_list|()
decl_stmt|;
name|idToRemove
operator|.
name|add
argument_list|(
operator|(
name|String
operator|)
name|data
index|[
literal|5
index|]
operator|.
name|get
argument_list|(
literal|"JMSMessageID"
argument_list|)
argument_list|)
expr_stmt|;
name|idToRemove
operator|.
name|add
argument_list|(
operator|(
name|String
operator|)
name|data
index|[
literal|9
index|]
operator|.
name|get
argument_list|(
literal|"JMSMessageID"
argument_list|)
argument_list|)
expr_stmt|;
name|idToRemove
operator|.
name|add
argument_list|(
operator|(
name|String
operator|)
name|data
index|[
literal|0
index|]
operator|.
name|get
argument_list|(
literal|"JMSMessageID"
argument_list|)
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Removing: "
operator|+
name|idToRemove
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|id
range|:
name|idToRemove
control|)
block|{
name|sub
operator|.
name|removeMessage
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|defaultPersistenceAdapter
operator|.
name|compareTo
argument_list|(
name|TestSupport
operator|.
name|PersistenceAdapterChoice
operator|.
name|JDBC
argument_list|)
operator|==
literal|0
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
block|{
comment|// each iteration does one priority
operator|(
operator|(
name|JDBCPersistenceAdapter
operator|)
name|broker
operator|.
name|getPersistenceAdapter
argument_list|()
operator|)
operator|.
name|cleanup
argument_list|()
expr_stmt|;
block|}
block|}
name|data
operator|=
name|sub
operator|.
name|browse
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|data
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|7
argument_list|,
name|data
operator|.
name|length
argument_list|)
expr_stmt|;
for|for
control|(
name|CompositeData
name|c
range|:
name|data
control|)
block|{
name|String
name|id
init|=
operator|(
name|String
operator|)
name|c
operator|.
name|get
argument_list|(
literal|"JMSMessageID"
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|removedId
range|:
name|idToRemove
control|)
block|{
name|assertNotEquals
argument_list|(
name|id
argument_list|,
name|removedId
argument_list|)
expr_stmt|;
block|}
block|}
comment|// remove non existent
name|LOG
operator|.
name|info
argument_list|(
literal|"Repeat remove: "
operator|+
name|idToRemove
operator|.
name|getFirst
argument_list|()
argument_list|)
expr_stmt|;
name|sub
operator|.
name|removeMessage
argument_list|(
name|idToRemove
operator|.
name|getFirst
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

