begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Copyright 2005-2006 The Apache Software Foundation  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|example
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|ejb
operator|.
name|MessageDrivenBean
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|ConnectionFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageListener
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageProducer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|InitialContext
import|;
end_import

begin_import
import|import
name|weblogic
operator|.
name|ejb
operator|.
name|GenericMessageDrivenBean
import|;
end_import

begin_import
import|import
name|weblogic
operator|.
name|ejbgen
operator|.
name|ActivationConfigProperties
import|;
end_import

begin_import
import|import
name|weblogic
operator|.
name|ejbgen
operator|.
name|ActivationConfigProperty
import|;
end_import

begin_import
import|import
name|weblogic
operator|.
name|ejbgen
operator|.
name|MessageDriven
import|;
end_import

begin_import
import|import
name|weblogic
operator|.
name|ejbgen
operator|.
name|ResourceRef
import|;
end_import

begin_comment
comment|/**  * A simple MDB that demonstrates receiving and sending messages via ActiveMQ.  *   */
end_comment

begin_class
annotation|@
name|MessageDriven
argument_list|(
name|ejbName
operator|=
literal|"CounterMDB"
argument_list|,
name|destinationType
operator|=
literal|"javax.jms.Queue"
argument_list|,
name|resourceAdapterJndiName
operator|=
literal|"activemq/ResourceAdapter"
argument_list|,
name|maxSuspendSeconds
operator|=
literal|0
argument_list|)
annotation|@
name|ActivationConfigProperties
argument_list|(
name|value
operator|=
block|{
annotation|@
name|ActivationConfigProperty
argument_list|(
name|name
operator|=
literal|"destination"
argument_list|,
name|value
operator|=
literal|"BAR"
argument_list|)
block|}
argument_list|)
annotation|@
name|ResourceRef
argument_list|(
name|jndiName
operator|=
literal|"activemq/ConnectionFactory"
argument_list|,
name|type
operator|=
literal|"javax.jms.ConnectionFactory"
argument_list|,
name|auth
operator|=
name|ResourceRef
operator|.
name|Auth
operator|.
name|APPLICATION
argument_list|,
name|name
operator|=
literal|"cf"
argument_list|,
name|id
operator|=
literal|"cf"
argument_list|,
name|sharingScope
operator|=
name|ResourceRef
operator|.
name|SharingScope
operator|.
name|SHAREABLE
argument_list|)
specifier|public
class|class
name|CounterMDB
extends|extends
name|GenericMessageDrivenBean
implements|implements
name|MessageDrivenBean
implements|,
name|MessageListener
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
specifier|static
name|int
name|counter
init|=
literal|0
decl_stmt|;
specifier|public
name|void
name|onMessage
parameter_list|(
name|Message
name|msg
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Got: "
operator|+
name|msg
argument_list|)
expr_stmt|;
name|incrementCounter
argument_list|()
expr_stmt|;
comment|// Try to forward the Message.
try|try
block|{
name|InitialContext
name|ic
init|=
operator|new
name|InitialContext
argument_list|()
decl_stmt|;
name|ConnectionFactory
name|cf
init|=
operator|(
name|ConnectionFactory
operator|)
name|ic
operator|.
name|lookup
argument_list|(
literal|"java:comp/env/cf"
argument_list|)
decl_stmt|;
name|ic
operator|.
name|close
argument_list|()
expr_stmt|;
name|Connection
name|connection
init|=
name|cf
operator|.
name|createConnection
argument_list|()
decl_stmt|;
try|try
block|{
name|Session
name|session
init|=
name|connection
operator|.
name|createSession
argument_list|(
literal|false
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|MessageProducer
name|producer
init|=
name|session
operator|.
name|createProducer
argument_list|(
name|session
operator|.
name|createQueue
argument_list|(
literal|"FOO"
argument_list|)
argument_list|)
decl_stmt|;
name|producer
operator|.
name|send
argument_list|(
name|msg
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|connection
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Could not forward the message."
argument_list|)
expr_stmt|;
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|synchronized
name|void
name|incrementCounter
parameter_list|()
block|{
name|counter
operator|++
expr_stmt|;
block|}
specifier|public
specifier|static
specifier|synchronized
name|int
name|getCounter
parameter_list|()
block|{
return|return
name|counter
return|;
block|}
block|}
end_class

end_unit

