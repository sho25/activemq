begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageListener
import|;
end_import

begin_comment
comment|/**  * A simple tool for producing and consuming messages  *   *   */
end_comment

begin_class
specifier|public
class|class
name|ProducerAndConsumerTool
extends|extends
name|ConsumerTool
implements|implements
name|MessageListener
block|{
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
name|ConsumerTool
name|consumerTool
init|=
operator|new
name|ConsumerTool
argument_list|()
decl_stmt|;
name|String
index|[]
name|unknown
init|=
name|CommandLineSupport
operator|.
name|setOptions
argument_list|(
name|consumerTool
argument_list|,
name|args
argument_list|)
decl_stmt|;
name|HashSet
argument_list|<
name|String
argument_list|>
name|set1
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|unknown
argument_list|)
argument_list|)
decl_stmt|;
name|ProducerTool
name|producerTool
init|=
operator|new
name|ProducerTool
argument_list|()
decl_stmt|;
name|unknown
operator|=
name|CommandLineSupport
operator|.
name|setOptions
argument_list|(
name|producerTool
argument_list|,
name|args
argument_list|)
expr_stmt|;
name|HashSet
argument_list|<
name|String
argument_list|>
name|set2
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|unknown
argument_list|)
argument_list|)
decl_stmt|;
name|set1
operator|.
name|retainAll
argument_list|(
name|set2
argument_list|)
expr_stmt|;
if|if
condition|(
name|set1
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Unknown options: "
operator|+
name|set1
argument_list|)
expr_stmt|;
name|System
operator|.
name|exit
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
name|consumerTool
operator|.
name|run
argument_list|()
expr_stmt|;
name|producerTool
operator|.
name|run
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

