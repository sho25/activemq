begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Copyright 2005-2006 The Apache Software Foundation  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|network
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ActiveMQDestination
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|Transport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_comment
comment|/**  * Consolidates subscriptions  *   * @version $Revision: 1.1 $  */
end_comment

begin_class
specifier|public
class|class
name|DurableConduitBridge
extends|extends
name|ConduitBridge
block|{
specifier|static
specifier|final
specifier|private
name|Log
name|log
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|DurableConduitBridge
operator|.
name|class
argument_list|)
decl_stmt|;
comment|/**      * Constructor      * @param localBroker      * @param remoteBroker      */
specifier|public
name|DurableConduitBridge
parameter_list|(
name|Transport
name|localBroker
parameter_list|,
name|Transport
name|remoteBroker
parameter_list|)
block|{
name|super
argument_list|(
name|localBroker
argument_list|,
name|remoteBroker
argument_list|)
expr_stmt|;
block|}
comment|/**      * Subscriptions for these desitnations are always created      * @throws IOException       *      */
specifier|protected
name|void
name|setupStaticDestinations
parameter_list|()
throws|throws
name|IOException
block|{
name|super
operator|.
name|setupStaticDestinations
argument_list|()
expr_stmt|;
name|ActiveMQDestination
index|[]
name|dests
init|=
name|durableDestinations
decl_stmt|;
if|if
condition|(
name|dests
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|dests
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|ActiveMQDestination
name|dest
init|=
name|dests
index|[
name|i
index|]
decl_stmt|;
if|if
condition|(
name|isPermissableDestination
argument_list|(
name|dest
argument_list|)
condition|)
block|{
name|DemandSubscription
name|sub
init|=
name|createDemandSubscription
argument_list|(
name|dest
argument_list|)
decl_stmt|;
name|addSubscription
argument_list|(
name|sub
argument_list|)
expr_stmt|;
if|if
condition|(
name|log
operator|.
name|isTraceEnabled
argument_list|()
condition|)
name|log
operator|.
name|trace
argument_list|(
literal|"Forwarding messages for durable destination: "
operator|+
name|dest
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
end_class

end_unit

