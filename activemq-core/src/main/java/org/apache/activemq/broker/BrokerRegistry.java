begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *   * Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE  * file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file  * to You under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the  * License. You may obtain a copy of the License at  *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on  * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the  * specific language governing permissions and limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_comment
comment|/**  *   * @version $Revision: 1.3 $  */
end_comment

begin_class
specifier|public
class|class
name|BrokerRegistry
block|{
specifier|private
specifier|static
specifier|final
name|Log
name|log
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|BrokerRegistry
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|static
specifier|final
specifier|private
name|BrokerRegistry
name|instance
init|=
operator|new
name|BrokerRegistry
argument_list|()
decl_stmt|;
specifier|public
specifier|static
name|BrokerRegistry
name|getInstance
parameter_list|()
block|{
return|return
name|instance
return|;
block|}
specifier|private
specifier|final
name|Object
name|mutex
init|=
operator|new
name|Object
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|HashMap
argument_list|<
name|String
argument_list|,
name|BrokerService
argument_list|>
name|brokers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|BrokerService
argument_list|>
argument_list|()
decl_stmt|;
comment|/**      * @param brokerName      * @return the BrokerService      */
specifier|public
name|BrokerService
name|lookup
parameter_list|(
name|String
name|brokerName
parameter_list|)
block|{
name|BrokerService
name|result
init|=
literal|null
decl_stmt|;
synchronized|synchronized
init|(
name|mutex
init|)
block|{
name|result
operator|=
name|brokers
operator|.
name|get
argument_list|(
name|brokerName
argument_list|)
expr_stmt|;
if|if
condition|(
name|result
operator|==
literal|null
operator|&&
name|brokerName
operator|!=
literal|null
operator|&&
name|brokerName
operator|.
name|equals
argument_list|(
name|BrokerService
operator|.
name|DEFAULT_BROKER_NAME
argument_list|)
condition|)
block|{
name|result
operator|=
name|findFirst
argument_list|()
expr_stmt|;
if|if
condition|(
name|result
operator|!=
literal|null
condition|)
block|{
name|log
operator|.
name|warn
argument_list|(
literal|"Broker localhost not started so using "
operator|+
name|result
operator|.
name|getBrokerName
argument_list|()
operator|+
literal|" instead"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
return|return
name|result
return|;
block|}
comment|/**      * Returns the first registered broker found      * @return the first BrokerService      */
specifier|public
name|BrokerService
name|findFirst
parameter_list|()
block|{
synchronized|synchronized
init|(
name|mutex
init|)
block|{
name|Iterator
argument_list|<
name|BrokerService
argument_list|>
name|iter
init|=
name|brokers
operator|.
name|values
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|iter
operator|.
name|hasNext
argument_list|()
condition|)
block|{
return|return
name|iter
operator|.
name|next
argument_list|()
return|;
block|}
return|return
literal|null
return|;
block|}
block|}
comment|/**      * @param brokerName      * @param broker      */
specifier|public
name|void
name|bind
parameter_list|(
name|String
name|brokerName
parameter_list|,
name|BrokerService
name|broker
parameter_list|)
block|{
synchronized|synchronized
init|(
name|mutex
init|)
block|{
name|brokers
operator|.
name|put
argument_list|(
name|brokerName
argument_list|,
name|broker
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * @param brokerName      */
specifier|public
name|void
name|unbind
parameter_list|(
name|String
name|brokerName
parameter_list|)
block|{
synchronized|synchronized
init|(
name|mutex
init|)
block|{
name|brokers
operator|.
name|remove
argument_list|(
name|brokerName
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * @return the mutex used      */
specifier|public
name|Object
name|getRegistryMutext
parameter_list|()
block|{
return|return
name|mutex
return|;
block|}
block|}
end_class

end_unit

