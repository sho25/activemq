begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|blob
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|EmbeddedBrokerTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|util
operator|.
name|IOHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ftpserver
operator|.
name|FtpServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ftpserver
operator|.
name|FtpServerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ftpserver
operator|.
name|ftplet
operator|.
name|Authority
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ftpserver
operator|.
name|ftplet
operator|.
name|UserManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ftpserver
operator|.
name|listener
operator|.
name|ListenerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ftpserver
operator|.
name|usermanager
operator|.
name|PropertiesUserManagerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ftpserver
operator|.
name|usermanager
operator|.
name|impl
operator|.
name|BaseUser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ftpserver
operator|.
name|usermanager
operator|.
name|impl
operator|.
name|WritePermission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jmock
operator|.
name|Mockery
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|FTPTestSupport
extends|extends
name|EmbeddedBrokerTestSupport
block|{
specifier|protected
specifier|static
specifier|final
name|String
name|ftpServerListenerName
init|=
literal|"default"
decl_stmt|;
specifier|protected
name|Connection
name|connection
decl_stmt|;
specifier|protected
name|FtpServer
name|server
decl_stmt|;
name|String
name|userNamePass
init|=
literal|"activemq"
decl_stmt|;
name|Mockery
name|context
init|=
literal|null
decl_stmt|;
name|String
name|ftpUrl
decl_stmt|;
name|int
name|ftpPort
decl_stmt|;
specifier|final
name|File
name|ftpHomeDirFile
init|=
operator|new
name|File
argument_list|(
literal|"target/FTPBlobTest/ftptest"
argument_list|)
decl_stmt|;
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|ftpHomeDirFile
operator|.
name|getParentFile
argument_list|()
operator|.
name|exists
argument_list|()
condition|)
block|{
name|IOHelper
operator|.
name|deleteFile
argument_list|(
name|ftpHomeDirFile
operator|.
name|getParentFile
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|ftpHomeDirFile
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|ftpHomeDirFile
operator|.
name|getParentFile
argument_list|()
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
name|FtpServerFactory
name|serverFactory
init|=
operator|new
name|FtpServerFactory
argument_list|()
decl_stmt|;
name|ListenerFactory
name|factory
init|=
operator|new
name|ListenerFactory
argument_list|()
decl_stmt|;
name|PropertiesUserManagerFactory
name|userManagerFactory
init|=
operator|new
name|PropertiesUserManagerFactory
argument_list|()
decl_stmt|;
name|UserManager
name|userManager
init|=
name|userManagerFactory
operator|.
name|createUserManager
argument_list|()
decl_stmt|;
name|BaseUser
name|user
init|=
operator|new
name|BaseUser
argument_list|()
decl_stmt|;
name|user
operator|.
name|setName
argument_list|(
literal|"activemq"
argument_list|)
expr_stmt|;
name|user
operator|.
name|setPassword
argument_list|(
literal|"activemq"
argument_list|)
expr_stmt|;
name|user
operator|.
name|setHomeDirectory
argument_list|(
name|ftpHomeDirFile
operator|.
name|getParent
argument_list|()
argument_list|)
expr_stmt|;
comment|// authorize user
name|List
argument_list|<
name|Authority
argument_list|>
name|auths
init|=
operator|new
name|ArrayList
argument_list|<
name|Authority
argument_list|>
argument_list|()
decl_stmt|;
name|Authority
name|auth
init|=
operator|new
name|WritePermission
argument_list|()
decl_stmt|;
name|auths
operator|.
name|add
argument_list|(
name|auth
argument_list|)
expr_stmt|;
name|user
operator|.
name|setAuthorities
argument_list|(
name|auths
argument_list|)
expr_stmt|;
name|userManager
operator|.
name|save
argument_list|(
name|user
argument_list|)
expr_stmt|;
name|BaseUser
name|guest
init|=
operator|new
name|BaseUser
argument_list|()
decl_stmt|;
name|guest
operator|.
name|setName
argument_list|(
literal|"guest"
argument_list|)
expr_stmt|;
name|guest
operator|.
name|setPassword
argument_list|(
literal|"guest"
argument_list|)
expr_stmt|;
name|guest
operator|.
name|setHomeDirectory
argument_list|(
name|ftpHomeDirFile
operator|.
name|getParent
argument_list|()
argument_list|)
expr_stmt|;
name|userManager
operator|.
name|save
argument_list|(
name|guest
argument_list|)
expr_stmt|;
name|serverFactory
operator|.
name|setUserManager
argument_list|(
name|userManager
argument_list|)
expr_stmt|;
name|factory
operator|.
name|setPort
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|serverFactory
operator|.
name|addListener
argument_list|(
name|ftpServerListenerName
argument_list|,
name|factory
operator|.
name|createListener
argument_list|()
argument_list|)
expr_stmt|;
name|server
operator|=
name|serverFactory
operator|.
name|createServer
argument_list|()
expr_stmt|;
name|server
operator|.
name|start
argument_list|()
expr_stmt|;
name|ftpPort
operator|=
name|serverFactory
operator|.
name|getListener
argument_list|(
name|ftpServerListenerName
argument_list|)
operator|.
name|getPort
argument_list|()
expr_stmt|;
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|setConnection
parameter_list|()
throws|throws
name|Exception
block|{
name|ftpUrl
operator|=
literal|"ftp://"
operator|+
name|userNamePass
operator|+
literal|":"
operator|+
name|userNamePass
operator|+
literal|"@localhost:"
operator|+
name|ftpPort
operator|+
literal|"/ftptest/"
expr_stmt|;
name|bindAddress
operator|=
literal|"vm://localhost?jms.blobTransferPolicy.defaultUploadUrl="
operator|+
name|ftpUrl
expr_stmt|;
name|connectionFactory
operator|=
name|createConnectionFactory
argument_list|()
expr_stmt|;
name|connection
operator|=
name|createConnection
argument_list|()
expr_stmt|;
name|connection
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|connection
operator|!=
literal|null
condition|)
block|{
name|connection
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
if|if
condition|(
name|server
operator|!=
literal|null
condition|)
block|{
name|server
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
name|IOHelper
operator|.
name|deleteFile
argument_list|(
name|ftpHomeDirFile
operator|.
name|getParentFile
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

