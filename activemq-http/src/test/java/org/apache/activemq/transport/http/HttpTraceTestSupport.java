begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|http
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CountDownLatch
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicInteger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|client
operator|.
name|HttpClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|client
operator|.
name|api
operator|.
name|Request
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|client
operator|.
name|api
operator|.
name|Result
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|client
operator|.
name|util
operator|.
name|BufferingResponseListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|http
operator|.
name|HttpMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|http
operator|.
name|HttpStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|util
operator|.
name|ssl
operator|.
name|SslContextFactory
import|;
end_import

begin_class
specifier|public
class|class
name|HttpTraceTestSupport
block|{
specifier|public
specifier|static
name|List
argument_list|<
name|Object
index|[]
argument_list|>
name|getTestParameters
parameter_list|()
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|Object
index|[]
index|[]
block|{
comment|//value is empty
block|{
literal|"http.enableTrace="
block|,
name|HttpStatus
operator|.
name|FORBIDDEN_403
block|}
block|,
comment|//default, trace method not specified
block|{
literal|null
block|,
name|HttpStatus
operator|.
name|FORBIDDEN_403
block|}
block|,
comment|// enable http trace method
block|{
literal|"http.enableTrace=true"
block|,
name|HttpStatus
operator|.
name|OK_200
block|}
block|,
comment|// disable trace method
block|{
literal|"http.enableTrace=false"
block|,
name|HttpStatus
operator|.
name|FORBIDDEN_403
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|void
name|testHttpTraceEnabled
parameter_list|(
specifier|final
name|String
name|uri
parameter_list|,
specifier|final
name|int
name|expectedStatus
parameter_list|)
throws|throws
name|Exception
block|{
name|testHttpTraceEnabled
argument_list|(
name|uri
argument_list|,
name|expectedStatus
argument_list|,
operator|new
name|SslContextFactory
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|testHttpTraceEnabled
parameter_list|(
specifier|final
name|String
name|uri
parameter_list|,
specifier|final
name|int
name|expectedStatus
parameter_list|,
name|SslContextFactory
name|sslContextFactory
parameter_list|)
throws|throws
name|Exception
block|{
name|HttpClient
name|httpClient
init|=
name|sslContextFactory
operator|!=
literal|null
condition|?
operator|new
name|HttpClient
argument_list|(
name|sslContextFactory
argument_list|)
else|:
operator|new
name|HttpClient
argument_list|(
operator|new
name|SslContextFactory
argument_list|()
argument_list|)
decl_stmt|;
name|httpClient
operator|.
name|start
argument_list|()
expr_stmt|;
specifier|final
name|CountDownLatch
name|latch
init|=
operator|new
name|CountDownLatch
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|Request
name|request
init|=
name|httpClient
operator|.
name|newRequest
argument_list|(
name|uri
argument_list|)
operator|.
name|method
argument_list|(
name|HttpMethod
operator|.
name|TRACE
argument_list|)
decl_stmt|;
specifier|final
name|AtomicInteger
name|status
init|=
operator|new
name|AtomicInteger
argument_list|()
decl_stmt|;
name|request
operator|.
name|send
argument_list|(
operator|new
name|BufferingResponseListener
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onComplete
parameter_list|(
name|Result
name|result
parameter_list|)
block|{
name|status
operator|.
name|set
argument_list|(
name|result
operator|.
name|getResponse
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|latch
operator|.
name|countDown
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|latch
operator|.
name|await
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedStatus
argument_list|,
name|status
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

