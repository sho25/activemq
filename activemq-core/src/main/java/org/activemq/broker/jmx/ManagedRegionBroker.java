begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Copyright 2004 The Apache Software Foundation  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|activemq
operator|.
name|broker
operator|.
name|jmx
package|;
end_package

begin_import
import|import
name|org
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|Destination
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|Region
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|RegionBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|policy
operator|.
name|PolicyMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activemq
operator|.
name|command
operator|.
name|ActiveMQDestination
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activemq
operator|.
name|memory
operator|.
name|UsageManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activemq
operator|.
name|store
operator|.
name|PersistenceAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activemq
operator|.
name|thread
operator|.
name|TaskRunnerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activemq
operator|.
name|util
operator|.
name|JMXSupport
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|MBeanServer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|ObjectName
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_class
specifier|public
class|class
name|ManagedRegionBroker
extends|extends
name|RegionBroker
block|{
specifier|private
specifier|final
name|MBeanServer
name|mbeanServer
decl_stmt|;
specifier|private
specifier|final
name|ObjectName
name|brokerObjectName
decl_stmt|;
specifier|public
name|ManagedRegionBroker
parameter_list|(
name|MBeanServer
name|mbeanServer
parameter_list|,
name|ObjectName
name|brokerObjectName
parameter_list|,
name|TaskRunnerFactory
name|taskRunnerFactory
parameter_list|,
name|UsageManager
name|memoryManager
parameter_list|,
name|PersistenceAdapter
name|adapter
parameter_list|,
name|PolicyMap
name|policyMap
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|taskRunnerFactory
argument_list|,
name|memoryManager
argument_list|,
name|adapter
argument_list|,
name|policyMap
argument_list|)
expr_stmt|;
name|this
operator|.
name|mbeanServer
operator|=
name|mbeanServer
expr_stmt|;
name|this
operator|.
name|brokerObjectName
operator|=
name|brokerObjectName
expr_stmt|;
block|}
specifier|protected
name|Region
name|createQueueRegion
parameter_list|(
name|UsageManager
name|memoryManager
parameter_list|,
name|TaskRunnerFactory
name|taskRunnerFactory
parameter_list|,
name|PersistenceAdapter
name|adapter
parameter_list|,
name|PolicyMap
name|policyMap
parameter_list|)
block|{
return|return
operator|new
name|ManagedQueueRegion
argument_list|(
name|this
argument_list|,
name|destinationStatistics
argument_list|,
name|memoryManager
argument_list|,
name|taskRunnerFactory
argument_list|,
name|adapter
argument_list|,
name|policyMap
argument_list|)
return|;
block|}
specifier|protected
name|Region
name|createTempQueueRegion
parameter_list|(
name|UsageManager
name|memoryManager
parameter_list|,
name|TaskRunnerFactory
name|taskRunnerFactory
parameter_list|)
block|{
return|return
operator|new
name|ManagedTempQueueRegion
argument_list|(
name|this
argument_list|,
name|destinationStatistics
argument_list|,
name|memoryManager
argument_list|,
name|taskRunnerFactory
argument_list|)
return|;
block|}
specifier|protected
name|Region
name|createTempTopicRegion
parameter_list|(
name|UsageManager
name|memoryManager
parameter_list|,
name|TaskRunnerFactory
name|taskRunnerFactory
parameter_list|)
block|{
return|return
operator|new
name|ManagedTempTopicRegion
argument_list|(
name|this
argument_list|,
name|destinationStatistics
argument_list|,
name|memoryManager
argument_list|,
name|taskRunnerFactory
argument_list|)
return|;
block|}
specifier|protected
name|Region
name|createTopicRegion
parameter_list|(
name|UsageManager
name|memoryManager
parameter_list|,
name|TaskRunnerFactory
name|taskRunnerFactory
parameter_list|,
name|PersistenceAdapter
name|adapter
parameter_list|,
name|PolicyMap
name|policyMap
parameter_list|)
block|{
return|return
operator|new
name|ManagedTopicRegion
argument_list|(
name|this
argument_list|,
name|destinationStatistics
argument_list|,
name|memoryManager
argument_list|,
name|taskRunnerFactory
argument_list|,
name|adapter
argument_list|,
name|policyMap
argument_list|)
return|;
block|}
specifier|public
name|void
name|register
parameter_list|(
name|ActiveMQDestination
name|destName
parameter_list|,
name|Destination
name|destination
parameter_list|)
throws|throws
name|Throwable
block|{
comment|// Build the object name for the destination
name|Hashtable
name|map
init|=
operator|new
name|Hashtable
argument_list|(
name|brokerObjectName
operator|.
name|getKeyPropertyList
argument_list|()
argument_list|)
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"Type"
argument_list|,
name|JMXSupport
operator|.
name|encodeObjectNamePart
argument_list|(
name|destName
operator|.
name|getDestinationTypeAsString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"Destination"
argument_list|,
name|JMXSupport
operator|.
name|encodeObjectNamePart
argument_list|(
name|destName
operator|.
name|getPhysicalName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ObjectName
name|destObjectName
init|=
operator|new
name|ObjectName
argument_list|(
name|brokerObjectName
operator|.
name|getDomain
argument_list|()
argument_list|,
name|map
argument_list|)
decl_stmt|;
name|DestinationViewMBean
name|view
init|=
operator|new
name|DestinationView
argument_list|(
name|destination
argument_list|)
decl_stmt|;
name|mbeanServer
operator|.
name|registerMBean
argument_list|(
name|view
argument_list|,
name|destObjectName
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|unregister
parameter_list|(
name|ActiveMQDestination
name|destName
parameter_list|)
throws|throws
name|Throwable
block|{
comment|// Build the object name for the destination
name|Hashtable
name|map
init|=
operator|new
name|Hashtable
argument_list|(
name|brokerObjectName
operator|.
name|getKeyPropertyList
argument_list|()
argument_list|)
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"Type"
argument_list|,
name|JMXSupport
operator|.
name|encodeObjectNamePart
argument_list|(
name|destName
operator|.
name|getDestinationTypeAsString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"Destination"
argument_list|,
name|JMXSupport
operator|.
name|encodeObjectNamePart
argument_list|(
name|destName
operator|.
name|getPhysicalName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ObjectName
name|destObjectName
init|=
operator|new
name|ObjectName
argument_list|(
name|brokerObjectName
operator|.
name|getDomain
argument_list|()
argument_list|,
name|map
argument_list|)
decl_stmt|;
name|mbeanServer
operator|.
name|unregisterMBean
argument_list|(
name|destObjectName
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

