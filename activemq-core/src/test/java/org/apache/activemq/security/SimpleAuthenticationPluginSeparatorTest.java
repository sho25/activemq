begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|security
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ActiveMQQueue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ActiveMQTopic
import|;
end_import

begin_class
specifier|public
class|class
name|SimpleAuthenticationPluginSeparatorTest
extends|extends
name|SimpleAuthenticationPluginTest
block|{
specifier|public
specifier|static
name|Test
name|suite
parameter_list|()
block|{
return|return
name|suite
argument_list|(
name|SimpleAuthenticationPluginSeparatorTest
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
name|junit
operator|.
name|textui
operator|.
name|TestRunner
operator|.
name|run
argument_list|(
name|suite
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|BrokerService
name|createBroker
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|createBroker
argument_list|(
literal|"org/apache/activemq/security/simple-auth-separator.xml"
argument_list|)
return|;
block|}
comment|/**      * @see {@link CombinationTestSupport}      */
specifier|public
name|void
name|initCombosForTestUserReceiveFails
parameter_list|()
block|{
name|addCombinationValues
argument_list|(
literal|"userName"
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"user"
block|}
argument_list|)
expr_stmt|;
name|addCombinationValues
argument_list|(
literal|"password"
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"password"
block|}
argument_list|)
expr_stmt|;
name|addCombinationValues
argument_list|(
literal|"destination"
argument_list|,
operator|new
name|Object
index|[]
block|{
operator|new
name|ActiveMQQueue
argument_list|(
literal|"TEST"
argument_list|)
block|,
operator|new
name|ActiveMQTopic
argument_list|(
literal|"TEST"
argument_list|)
block|,
operator|new
name|ActiveMQQueue
argument_list|(
literal|"GUEST/BAR"
argument_list|)
block|,
operator|new
name|ActiveMQTopic
argument_list|(
literal|"GUEST/BAR"
argument_list|)
block|}
argument_list|)
expr_stmt|;
block|}
comment|/**      * @see {@link CombinationTestSupport}      */
specifier|public
name|void
name|initCombosForTestInvalidAuthentication
parameter_list|()
block|{
name|addCombinationValues
argument_list|(
literal|"userName"
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"user"
block|}
argument_list|)
expr_stmt|;
name|addCombinationValues
argument_list|(
literal|"password"
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"password"
block|}
argument_list|)
expr_stmt|;
block|}
comment|/**      * @see {@link CombinationTestSupport}      */
specifier|public
name|void
name|initCombosForTestUserReceiveSucceeds
parameter_list|()
block|{
name|addCombinationValues
argument_list|(
literal|"userName"
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"user"
block|}
argument_list|)
expr_stmt|;
name|addCombinationValues
argument_list|(
literal|"password"
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"password"
block|}
argument_list|)
expr_stmt|;
name|addCombinationValues
argument_list|(
literal|"destination"
argument_list|,
operator|new
name|Object
index|[]
block|{
operator|new
name|ActiveMQQueue
argument_list|(
literal|"USERS/FOO"
argument_list|)
block|,
operator|new
name|ActiveMQTopic
argument_list|(
literal|"USERS/FOO"
argument_list|)
block|}
argument_list|)
expr_stmt|;
block|}
comment|/**      * @see {@link CombinationTestSupport}      */
specifier|public
name|void
name|initCombosForTestGuestReceiveSucceeds
parameter_list|()
block|{
name|addCombinationValues
argument_list|(
literal|"userName"
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"guest"
block|}
argument_list|)
expr_stmt|;
name|addCombinationValues
argument_list|(
literal|"password"
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"password"
block|}
argument_list|)
expr_stmt|;
name|addCombinationValues
argument_list|(
literal|"destination"
argument_list|,
operator|new
name|Object
index|[]
block|{
operator|new
name|ActiveMQQueue
argument_list|(
literal|"GUEST/BAR"
argument_list|)
block|,
operator|new
name|ActiveMQTopic
argument_list|(
literal|"GUEST/BAR"
argument_list|)
block|}
argument_list|)
expr_stmt|;
block|}
comment|/**      * @see {@link org.apache.activemq.CombinationTestSupport}      */
specifier|public
name|void
name|initCombosForTestGuestReceiveFails
parameter_list|()
block|{
name|addCombinationValues
argument_list|(
literal|"userName"
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"guest"
block|}
argument_list|)
expr_stmt|;
name|addCombinationValues
argument_list|(
literal|"password"
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"password"
block|}
argument_list|)
expr_stmt|;
name|addCombinationValues
argument_list|(
literal|"destination"
argument_list|,
operator|new
name|Object
index|[]
block|{
operator|new
name|ActiveMQQueue
argument_list|(
literal|"TEST"
argument_list|)
block|,
operator|new
name|ActiveMQTopic
argument_list|(
literal|"TEST"
argument_list|)
block|,
operator|new
name|ActiveMQQueue
argument_list|(
literal|"USERS/FOO"
argument_list|)
block|,
operator|new
name|ActiveMQTopic
argument_list|(
literal|"USERS/FOO"
argument_list|)
block|}
argument_list|)
expr_stmt|;
block|}
comment|/**      * @see {@link org.apache.activemq.CombinationTestSupport}      */
specifier|public
name|void
name|initCombosForTestUserSendSucceeds
parameter_list|()
block|{
name|addCombinationValues
argument_list|(
literal|"userName"
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"user"
block|}
argument_list|)
expr_stmt|;
name|addCombinationValues
argument_list|(
literal|"password"
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"password"
block|}
argument_list|)
expr_stmt|;
name|addCombinationValues
argument_list|(
literal|"destination"
argument_list|,
operator|new
name|Object
index|[]
block|{
operator|new
name|ActiveMQQueue
argument_list|(
literal|"USERS/FOO"
argument_list|)
block|,
operator|new
name|ActiveMQQueue
argument_list|(
literal|"GUEST/BAR"
argument_list|)
block|,
operator|new
name|ActiveMQTopic
argument_list|(
literal|"USERS/FOO"
argument_list|)
block|,
operator|new
name|ActiveMQTopic
argument_list|(
literal|"GUEST/BAR"
argument_list|)
block|}
argument_list|)
expr_stmt|;
block|}
comment|/**      * @see {@link org.apache.activemq.CombinationTestSupport}      */
specifier|public
name|void
name|initCombosForTestUserSendFails
parameter_list|()
block|{
name|addCombinationValues
argument_list|(
literal|"userName"
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"user"
block|}
argument_list|)
expr_stmt|;
name|addCombinationValues
argument_list|(
literal|"password"
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"password"
block|}
argument_list|)
expr_stmt|;
name|addCombinationValues
argument_list|(
literal|"destination"
argument_list|,
operator|new
name|Object
index|[]
block|{
operator|new
name|ActiveMQQueue
argument_list|(
literal|"TEST"
argument_list|)
block|,
operator|new
name|ActiveMQTopic
argument_list|(
literal|"TEST"
argument_list|)
block|}
argument_list|)
expr_stmt|;
block|}
comment|/**      * @see {@link org.apache.activemq.CombinationTestSupport}      */
specifier|public
name|void
name|initCombosForTestGuestSendFails
parameter_list|()
block|{
name|addCombinationValues
argument_list|(
literal|"userName"
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"guest"
block|}
argument_list|)
expr_stmt|;
name|addCombinationValues
argument_list|(
literal|"password"
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"password"
block|}
argument_list|)
expr_stmt|;
name|addCombinationValues
argument_list|(
literal|"destination"
argument_list|,
operator|new
name|Object
index|[]
block|{
operator|new
name|ActiveMQQueue
argument_list|(
literal|"TEST"
argument_list|)
block|,
operator|new
name|ActiveMQTopic
argument_list|(
literal|"TEST"
argument_list|)
block|,
operator|new
name|ActiveMQQueue
argument_list|(
literal|"USERS/FOO"
argument_list|)
block|,
operator|new
name|ActiveMQTopic
argument_list|(
literal|"USERS/FOO"
argument_list|)
block|}
argument_list|)
expr_stmt|;
block|}
comment|/**      * @see {@link org.apache.activemq.CombinationTestSupport}      */
specifier|public
name|void
name|initCombosForTestGuestSendSucceeds
parameter_list|()
block|{
name|addCombinationValues
argument_list|(
literal|"userName"
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"guest"
block|}
argument_list|)
expr_stmt|;
name|addCombinationValues
argument_list|(
literal|"password"
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"password"
block|}
argument_list|)
expr_stmt|;
name|addCombinationValues
argument_list|(
literal|"destination"
argument_list|,
operator|new
name|Object
index|[]
block|{
operator|new
name|ActiveMQQueue
argument_list|(
literal|"GUEST/BAR"
argument_list|)
block|,
operator|new
name|ActiveMQTopic
argument_list|(
literal|"GUEST/BAR"
argument_list|)
block|}
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

