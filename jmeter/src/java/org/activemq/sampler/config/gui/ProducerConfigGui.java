begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Copyright 2004 The Apache Software Foundation  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|activemq
operator|.
name|sampler
operator|.
name|config
operator|.
name|gui
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jmeter
operator|.
name|config
operator|.
name|ConfigTestElement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jmeter
operator|.
name|config
operator|.
name|gui
operator|.
name|AbstractConfigGui
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jmeter
operator|.
name|gui
operator|.
name|util
operator|.
name|VerticalPanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jmeter
operator|.
name|testelement
operator|.
name|TestElement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jmeter
operator|.
name|util
operator|.
name|JMeterUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jorphan
operator|.
name|util
operator|.
name|JOrphanUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activemq
operator|.
name|sampler
operator|.
name|Producer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTextField
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JComboBox
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JRadioButton
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPanel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JLabel
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|BorderLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|FlowLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
import|;
end_import

begin_comment
comment|/**  * Producer configuration gui bean.  */
end_comment

begin_class
specifier|public
class|class
name|ProducerConfigGui
extends|extends
name|AbstractConfigGui
block|{
specifier|private
specifier|static
specifier|final
name|String
name|URL
init|=
literal|"url"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|DURATION
init|=
literal|"duration"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|RAMP_UP
init|=
literal|"ramp_up"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|DURABLE
init|=
literal|"durable"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|NONDURABLE
init|=
literal|"nondurable"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TOPIC
init|=
literal|"topic"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|QUEUE
init|=
literal|"queue"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|MSGSIZE
init|=
literal|"msgsize"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|NOPRODUCER
init|=
literal|"noproducer"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|NOSUBJECT
init|=
literal|"nosubject"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PRODUCER_CONFIG_TITLE
init|=
literal|"producer_config_title"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|MQSERVER
init|=
literal|"mqserver"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|DEFMSGINTERVAL
init|=
literal|"defmsginterval"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|CUSMSGINTERVAL
init|=
literal|"cusmsginterval"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|MSGINTERVAL
init|=
literal|"msginterval"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ACTIVEMQ_SERVER
init|=
name|JMeterUtils
operator|.
name|getResString
argument_list|(
literal|"activemq_server"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|SONICMQ_SERVER
init|=
name|JMeterUtils
operator|.
name|getResString
argument_list|(
literal|"sonicmq_server"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TIBCOMQ_SERVER
init|=
name|JMeterUtils
operator|.
name|getResString
argument_list|(
literal|"tibcomq_server"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|JBOSSMQ_SERVER
init|=
name|JMeterUtils
operator|.
name|getResString
argument_list|(
literal|"jbossmq_server"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|OPENJMS_SERVER
init|=
name|JMeterUtils
operator|.
name|getResString
argument_list|(
literal|"openjms_server"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|JORAM_SERVER
init|=
name|JMeterUtils
operator|.
name|getResString
argument_list|(
literal|"joram_server"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|MANTARAY_SERVER
init|=
name|JMeterUtils
operator|.
name|getResString
argument_list|(
literal|"mantaray_server"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TRANSACTED
init|=
literal|"transacted"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|NONTRANSACTED
init|=
literal|"nontransacted"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|BATCHSIZE
init|=
literal|"batchsize"
decl_stmt|;
specifier|private
name|JTextField
name|setURL
decl_stmt|;
specifier|private
name|JTextField
name|setDuration
decl_stmt|;
specifier|private
name|JTextField
name|setRampUp
decl_stmt|;
specifier|private
name|JTextField
name|setMsgSize
decl_stmt|;
specifier|private
name|JTextField
name|setNoProducer
decl_stmt|;
specifier|private
name|JTextField
name|setNoSubject
decl_stmt|;
specifier|private
name|JRadioButton
name|setDurable
decl_stmt|;
specifier|private
name|JRadioButton
name|setNonDurable
decl_stmt|;
specifier|private
name|JRadioButton
name|setTopic
decl_stmt|;
specifier|private
name|JRadioButton
name|setQueue
decl_stmt|;
specifier|private
name|JRadioButton
name|setDefMsgInterval
decl_stmt|;
specifier|private
name|JRadioButton
name|setCusMsgInterval
decl_stmt|;
specifier|private
name|JTextField
name|setMsgInterval
decl_stmt|;
specifier|private
name|JComboBox
name|setMQServer
decl_stmt|;
specifier|private
name|JRadioButton
name|setTransacted
decl_stmt|;
specifier|private
name|JRadioButton
name|setNonTransacted
decl_stmt|;
specifier|private
name|JTextField
name|setBatchSize
decl_stmt|;
specifier|private
name|boolean
name|displayName
init|=
literal|true
decl_stmt|;
comment|/**      * Default constructor.      */
specifier|public
name|ProducerConfigGui
parameter_list|()
block|{
name|this
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
comment|/**      * Constructor.      *      * @param displayName - whether to display the name of the producer.      */
specifier|public
name|ProducerConfigGui
parameter_list|(
name|boolean
name|displayName
parameter_list|)
block|{
name|this
operator|.
name|displayName
operator|=
name|displayName
expr_stmt|;
name|init
argument_list|()
expr_stmt|;
block|}
comment|/**      * Returns the producer configuration title.      *      * @return producer configuration title      */
specifier|public
name|String
name|getLabelResource
parameter_list|()
block|{
return|return
name|PRODUCER_CONFIG_TITLE
return|;
block|}
comment|/**      * Configures the ProducerConfigGui bean.      *      * @param element - producer sampler properties.      */
specifier|public
name|void
name|configure
parameter_list|(
name|TestElement
name|element
parameter_list|)
block|{
name|super
operator|.
name|configure
argument_list|(
name|element
argument_list|)
expr_stmt|;
name|setURL
operator|.
name|setText
argument_list|(
name|element
operator|.
name|getPropertyAsString
argument_list|(
name|Producer
operator|.
name|URL
argument_list|)
argument_list|)
expr_stmt|;
name|setDuration
operator|.
name|setText
argument_list|(
name|element
operator|.
name|getPropertyAsString
argument_list|(
name|Producer
operator|.
name|DURATION
argument_list|)
argument_list|)
expr_stmt|;
name|setRampUp
operator|.
name|setText
argument_list|(
name|element
operator|.
name|getPropertyAsString
argument_list|(
name|Producer
operator|.
name|RAMP_UP
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|element
operator|.
name|getProperty
argument_list|(
name|Producer
operator|.
name|DURABLE
argument_list|)
operator|==
literal|null
condition|)
block|{
name|setDurable
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setNonDurable
operator|.
name|setSelected
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|element
operator|.
name|getPropertyAsBoolean
argument_list|(
name|Producer
operator|.
name|DURABLE
argument_list|)
condition|)
block|{
name|setDurable
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setNonDurable
operator|.
name|setSelected
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|setDurable
operator|.
name|setSelected
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|setNonDurable
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|element
operator|.
name|getProperty
argument_list|(
name|Producer
operator|.
name|TOPIC
argument_list|)
operator|==
literal|null
condition|)
block|{
name|setTopic
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setQueue
operator|.
name|setSelected
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|element
operator|.
name|getPropertyAsBoolean
argument_list|(
name|Producer
operator|.
name|TOPIC
argument_list|)
condition|)
block|{
name|setTopic
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setQueue
operator|.
name|setSelected
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|setTopic
operator|.
name|setSelected
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|setQueue
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
name|setMsgSize
operator|.
name|setText
argument_list|(
name|element
operator|.
name|getPropertyAsString
argument_list|(
name|Producer
operator|.
name|MSGSIZE
argument_list|)
argument_list|)
expr_stmt|;
name|setNoProducer
operator|.
name|setText
argument_list|(
name|element
operator|.
name|getPropertyAsString
argument_list|(
name|Producer
operator|.
name|NOPRODUCER
argument_list|)
argument_list|)
expr_stmt|;
name|setNoSubject
operator|.
name|setText
argument_list|(
name|element
operator|.
name|getPropertyAsString
argument_list|(
name|Producer
operator|.
name|NOSUBJECT
argument_list|)
argument_list|)
expr_stmt|;
name|setMsgSize
operator|.
name|setText
argument_list|(
name|element
operator|.
name|getPropertyAsString
argument_list|(
name|Producer
operator|.
name|MSGSIZE
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|element
operator|.
name|getProperty
argument_list|(
name|Producer
operator|.
name|DEFMSGINTERVAL
argument_list|)
operator|==
literal|null
condition|)
block|{
name|setDefMsgInterval
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setCusMsgInterval
operator|.
name|setSelected
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|setMsgInterval
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|element
operator|.
name|getPropertyAsBoolean
argument_list|(
name|Producer
operator|.
name|DEFMSGINTERVAL
argument_list|)
condition|)
block|{
name|setDefMsgInterval
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setCusMsgInterval
operator|.
name|setSelected
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|setMsgInterval
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|setDefMsgInterval
operator|.
name|setSelected
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|setCusMsgInterval
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setMsgInterval
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setMsgInterval
operator|.
name|setText
argument_list|(
name|element
operator|.
name|getPropertyAsString
argument_list|(
name|Producer
operator|.
name|MSGINTERVAL
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|setMQServer
operator|.
name|setSelectedItem
argument_list|(
name|element
operator|.
name|getPropertyAsString
argument_list|(
name|Producer
operator|.
name|MQSERVER
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|element
operator|.
name|getProperty
argument_list|(
name|Producer
operator|.
name|TRANSACTED
argument_list|)
operator|==
literal|null
condition|)
block|{
name|setTransacted
operator|.
name|setSelected
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|setNonTransacted
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setBatchSize
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|element
operator|.
name|getPropertyAsBoolean
argument_list|(
name|Producer
operator|.
name|TRANSACTED
argument_list|)
condition|)
block|{
name|setTransacted
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setNonTransacted
operator|.
name|setSelected
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|setBatchSize
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setBatchSize
operator|.
name|setText
argument_list|(
name|element
operator|.
name|getPropertyAsString
argument_list|(
name|Producer
operator|.
name|BATCHSIZE
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|setTransacted
operator|.
name|setSelected
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|setNonTransacted
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setBatchSize
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|setBatchSize
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|/**      * Creates a test element.      *      * @return element      */
specifier|public
name|TestElement
name|createTestElement
parameter_list|()
block|{
name|ConfigTestElement
name|element
init|=
operator|new
name|ConfigTestElement
argument_list|()
decl_stmt|;
name|modifyTestElement
argument_list|(
name|element
argument_list|)
expr_stmt|;
return|return
name|element
return|;
block|}
comment|/**      * Sets the producer sampler properties to the test element.      *      * @param element      */
specifier|public
name|void
name|modifyTestElement
parameter_list|(
name|TestElement
name|element
parameter_list|)
block|{
name|configureTestElement
argument_list|(
name|element
argument_list|)
expr_stmt|;
name|element
operator|.
name|setProperty
argument_list|(
name|Producer
operator|.
name|URL
argument_list|,
name|setURL
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
name|element
operator|.
name|setProperty
argument_list|(
name|Producer
operator|.
name|DURATION
argument_list|,
name|setDuration
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
name|element
operator|.
name|setProperty
argument_list|(
name|Producer
operator|.
name|RAMP_UP
argument_list|,
name|setRampUp
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
name|element
operator|.
name|setProperty
argument_list|(
name|Producer
operator|.
name|DURABLE
argument_list|,
name|JOrphanUtils
operator|.
name|booleanToString
argument_list|(
name|setDurable
operator|.
name|isSelected
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|element
operator|.
name|setProperty
argument_list|(
name|Producer
operator|.
name|TOPIC
argument_list|,
name|JOrphanUtils
operator|.
name|booleanToString
argument_list|(
name|setTopic
operator|.
name|isSelected
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|element
operator|.
name|setProperty
argument_list|(
name|Producer
operator|.
name|MSGSIZE
argument_list|,
name|setMsgSize
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
name|element
operator|.
name|setProperty
argument_list|(
name|Producer
operator|.
name|NOPRODUCER
argument_list|,
name|setNoProducer
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
name|element
operator|.
name|setProperty
argument_list|(
name|Producer
operator|.
name|NOSUBJECT
argument_list|,
name|setNoSubject
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
name|element
operator|.
name|setProperty
argument_list|(
name|Producer
operator|.
name|DEFMSGINTERVAL
argument_list|,
name|JOrphanUtils
operator|.
name|booleanToString
argument_list|(
name|setDefMsgInterval
operator|.
name|isSelected
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|element
operator|.
name|setProperty
argument_list|(
name|Producer
operator|.
name|MSGINTERVAL
argument_list|,
name|setMsgInterval
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
name|element
operator|.
name|setProperty
argument_list|(
name|Producer
operator|.
name|MQSERVER
argument_list|,
name|setMQServer
operator|.
name|getSelectedItem
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|element
operator|.
name|setProperty
argument_list|(
name|Producer
operator|.
name|TRANSACTED
argument_list|,
name|JOrphanUtils
operator|.
name|booleanToString
argument_list|(
name|setTransacted
operator|.
name|isSelected
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|element
operator|.
name|setProperty
argument_list|(
name|Producer
operator|.
name|BATCHSIZE
argument_list|,
name|setBatchSize
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Creates the URL panel.      *      * @return urlPanel      */
specifier|private
name|JPanel
name|createURLPanel
parameter_list|()
block|{
name|JLabel
name|label
init|=
operator|new
name|JLabel
argument_list|(
name|JMeterUtils
operator|.
name|getResString
argument_list|(
literal|"form_url"
argument_list|)
argument_list|)
decl_stmt|;
name|setURL
operator|=
operator|new
name|JTextField
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|setURL
operator|.
name|setName
argument_list|(
name|URL
argument_list|)
expr_stmt|;
name|label
operator|.
name|setLabelFor
argument_list|(
name|setURL
argument_list|)
expr_stmt|;
name|JPanel
name|urlPanel
init|=
operator|new
name|JPanel
argument_list|(
operator|new
name|BorderLayout
argument_list|(
literal|5
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|urlPanel
operator|.
name|add
argument_list|(
name|label
argument_list|,
name|BorderLayout
operator|.
name|WEST
argument_list|)
expr_stmt|;
name|urlPanel
operator|.
name|add
argument_list|(
name|setURL
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
return|return
name|urlPanel
return|;
block|}
comment|/**      * Creates the duration panel.      *      * @return durationPanel      */
specifier|private
name|JPanel
name|createDurationPanel
parameter_list|()
block|{
name|JLabel
name|label
init|=
operator|new
name|JLabel
argument_list|(
name|JMeterUtils
operator|.
name|getResString
argument_list|(
literal|"form_duration"
argument_list|)
argument_list|)
decl_stmt|;
name|setDuration
operator|=
operator|new
name|JTextField
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|setDuration
operator|.
name|setName
argument_list|(
name|DURATION
argument_list|)
expr_stmt|;
name|label
operator|.
name|setLabelFor
argument_list|(
name|setDuration
argument_list|)
expr_stmt|;
name|JPanel
name|durationPanel
init|=
operator|new
name|JPanel
argument_list|(
operator|new
name|BorderLayout
argument_list|(
literal|5
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|durationPanel
operator|.
name|add
argument_list|(
name|label
argument_list|,
name|BorderLayout
operator|.
name|WEST
argument_list|)
expr_stmt|;
name|durationPanel
operator|.
name|add
argument_list|(
name|setDuration
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
return|return
name|durationPanel
return|;
block|}
comment|/**      * Creates teh ramp up panel.      *      * @return rampUpPanel      */
specifier|private
name|JPanel
name|createRampUpPanel
parameter_list|()
block|{
name|JLabel
name|label
init|=
operator|new
name|JLabel
argument_list|(
name|JMeterUtils
operator|.
name|getResString
argument_list|(
literal|"form_ramp_up"
argument_list|)
argument_list|)
decl_stmt|;
name|setRampUp
operator|=
operator|new
name|JTextField
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|setRampUp
operator|.
name|setName
argument_list|(
name|RAMP_UP
argument_list|)
expr_stmt|;
name|label
operator|.
name|setLabelFor
argument_list|(
name|setRampUp
argument_list|)
expr_stmt|;
name|JPanel
name|rampUpPanel
init|=
operator|new
name|JPanel
argument_list|(
operator|new
name|BorderLayout
argument_list|(
literal|5
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|rampUpPanel
operator|.
name|add
argument_list|(
name|label
argument_list|,
name|BorderLayout
operator|.
name|WEST
argument_list|)
expr_stmt|;
name|rampUpPanel
operator|.
name|add
argument_list|(
name|setRampUp
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
return|return
name|rampUpPanel
return|;
block|}
comment|/**      * Creates the durable panel.      *      * @return durablePanel      */
specifier|private
name|JPanel
name|createDurablePanel
parameter_list|()
block|{
name|JLabel
name|labelDeliveryMode
init|=
operator|new
name|JLabel
argument_list|(
name|JMeterUtils
operator|.
name|getResString
argument_list|(
literal|"form_delivery_mode"
argument_list|)
argument_list|)
decl_stmt|;
name|JLabel
name|labelDurable
init|=
operator|new
name|JLabel
argument_list|(
name|JMeterUtils
operator|.
name|getResString
argument_list|(
literal|"form_persistent"
argument_list|)
argument_list|)
decl_stmt|;
name|setDurable
operator|=
operator|new
name|JRadioButton
argument_list|()
expr_stmt|;
name|setDurable
operator|.
name|setName
argument_list|(
name|DURABLE
argument_list|)
expr_stmt|;
name|labelDurable
operator|.
name|setLabelFor
argument_list|(
name|setDurable
argument_list|)
expr_stmt|;
name|setDurable
operator|.
name|setActionCommand
argument_list|(
name|DURABLE
argument_list|)
expr_stmt|;
name|setDurable
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|evt
parameter_list|)
block|{
name|jRadioButtonActionPerformedDelivery
argument_list|(
name|evt
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|setDurable
operator|.
name|setSelected
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|JLabel
name|labelNonDurable
init|=
operator|new
name|JLabel
argument_list|(
name|JMeterUtils
operator|.
name|getResString
argument_list|(
literal|"form_non_persistent"
argument_list|)
argument_list|)
decl_stmt|;
name|setNonDurable
operator|=
operator|new
name|JRadioButton
argument_list|()
expr_stmt|;
name|setNonDurable
operator|.
name|setName
argument_list|(
name|NONDURABLE
argument_list|)
expr_stmt|;
name|labelNonDurable
operator|.
name|setLabelFor
argument_list|(
name|setNonDurable
argument_list|)
expr_stmt|;
name|setNonDurable
operator|.
name|setActionCommand
argument_list|(
name|NONDURABLE
argument_list|)
expr_stmt|;
name|setNonDurable
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|evt
parameter_list|)
block|{
name|jRadioButtonActionPerformedDelivery
argument_list|(
name|evt
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|setNonDurable
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|FlowLayout
name|flow
init|=
operator|new
name|FlowLayout
argument_list|(
name|FlowLayout
operator|.
name|LEFT
argument_list|)
decl_stmt|;
name|flow
operator|.
name|setHgap
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|flow
operator|.
name|setVgap
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|JPanel
name|durablePanel
init|=
operator|new
name|JPanel
argument_list|(
name|flow
argument_list|)
decl_stmt|;
name|durablePanel
operator|.
name|add
argument_list|(
name|labelDeliveryMode
argument_list|)
expr_stmt|;
name|durablePanel
operator|.
name|add
argument_list|(
operator|new
name|JLabel
argument_list|(
literal|"  "
argument_list|)
argument_list|)
expr_stmt|;
name|durablePanel
operator|.
name|add
argument_list|(
name|setDurable
argument_list|)
expr_stmt|;
name|durablePanel
operator|.
name|add
argument_list|(
name|labelDurable
argument_list|)
expr_stmt|;
name|durablePanel
operator|.
name|add
argument_list|(
operator|new
name|JLabel
argument_list|(
literal|"   "
argument_list|)
argument_list|)
expr_stmt|;
name|durablePanel
operator|.
name|add
argument_list|(
name|setNonDurable
argument_list|)
expr_stmt|;
name|durablePanel
operator|.
name|add
argument_list|(
name|labelNonDurable
argument_list|)
expr_stmt|;
return|return
name|durablePanel
return|;
block|}
comment|/**      * Creates the topic panel.      *      * @return topicPanel      */
specifier|private
name|JPanel
name|createTopicPanel
parameter_list|()
block|{
name|JLabel
name|labelMessagingDomain
init|=
operator|new
name|JLabel
argument_list|(
name|JMeterUtils
operator|.
name|getResString
argument_list|(
literal|"messaging_domain"
argument_list|)
argument_list|)
decl_stmt|;
name|JLabel
name|labelTopic
init|=
operator|new
name|JLabel
argument_list|(
name|JMeterUtils
operator|.
name|getResString
argument_list|(
literal|"form_topic"
argument_list|)
argument_list|)
decl_stmt|;
name|setTopic
operator|=
operator|new
name|JRadioButton
argument_list|()
expr_stmt|;
name|setTopic
operator|.
name|setName
argument_list|(
name|TOPIC
argument_list|)
expr_stmt|;
name|labelTopic
operator|.
name|setLabelFor
argument_list|(
name|setTopic
argument_list|)
expr_stmt|;
name|setTopic
operator|.
name|setActionCommand
argument_list|(
name|TOPIC
argument_list|)
expr_stmt|;
name|setTopic
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|evt
parameter_list|)
block|{
name|jRadioButtonActionPerformed
argument_list|(
name|evt
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|setTopic
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|JLabel
name|labelQueue
init|=
operator|new
name|JLabel
argument_list|(
name|JMeterUtils
operator|.
name|getResString
argument_list|(
literal|"form_queue"
argument_list|)
argument_list|)
decl_stmt|;
name|setQueue
operator|=
operator|new
name|JRadioButton
argument_list|()
expr_stmt|;
name|setQueue
operator|.
name|setName
argument_list|(
name|QUEUE
argument_list|)
expr_stmt|;
name|labelQueue
operator|.
name|setLabelFor
argument_list|(
name|setQueue
argument_list|)
expr_stmt|;
name|setQueue
operator|.
name|setActionCommand
argument_list|(
name|QUEUE
argument_list|)
expr_stmt|;
name|setQueue
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|evt
parameter_list|)
block|{
name|jRadioButtonActionPerformed
argument_list|(
name|evt
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|setQueue
operator|.
name|setSelected
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|FlowLayout
name|flow
init|=
operator|new
name|FlowLayout
argument_list|(
name|FlowLayout
operator|.
name|LEFT
argument_list|)
decl_stmt|;
name|flow
operator|.
name|setHgap
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|flow
operator|.
name|setVgap
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|JPanel
name|topicPanel
init|=
operator|new
name|JPanel
argument_list|(
name|flow
argument_list|)
decl_stmt|;
name|topicPanel
operator|.
name|add
argument_list|(
name|labelMessagingDomain
argument_list|)
expr_stmt|;
name|topicPanel
operator|.
name|add
argument_list|(
operator|new
name|JLabel
argument_list|(
literal|"  "
argument_list|)
argument_list|)
expr_stmt|;
name|topicPanel
operator|.
name|add
argument_list|(
name|setTopic
argument_list|)
expr_stmt|;
name|topicPanel
operator|.
name|add
argument_list|(
name|labelTopic
argument_list|)
expr_stmt|;
name|topicPanel
operator|.
name|add
argument_list|(
operator|new
name|JLabel
argument_list|(
literal|"   "
argument_list|)
argument_list|)
expr_stmt|;
name|topicPanel
operator|.
name|add
argument_list|(
name|setQueue
argument_list|)
expr_stmt|;
name|topicPanel
operator|.
name|add
argument_list|(
name|labelQueue
argument_list|)
expr_stmt|;
return|return
name|topicPanel
return|;
block|}
comment|/**      * Creates the message size panel.      *      * @return msgSizePanel      */
specifier|private
name|JPanel
name|createMsgSizePanel
parameter_list|()
block|{
name|JLabel
name|label
init|=
operator|new
name|JLabel
argument_list|(
name|JMeterUtils
operator|.
name|getResString
argument_list|(
literal|"form_msg_size"
argument_list|)
argument_list|)
decl_stmt|;
name|setMsgSize
operator|=
operator|new
name|JTextField
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|setMsgSize
operator|.
name|setName
argument_list|(
name|MSGSIZE
argument_list|)
expr_stmt|;
name|label
operator|.
name|setLabelFor
argument_list|(
name|setMsgSize
argument_list|)
expr_stmt|;
name|JPanel
name|msgSizePanel
init|=
operator|new
name|JPanel
argument_list|(
operator|new
name|BorderLayout
argument_list|(
literal|5
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|msgSizePanel
operator|.
name|add
argument_list|(
name|label
argument_list|,
name|BorderLayout
operator|.
name|WEST
argument_list|)
expr_stmt|;
name|msgSizePanel
operator|.
name|add
argument_list|(
name|setMsgSize
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
return|return
name|msgSizePanel
return|;
block|}
comment|/**      * Creates the no prod panel.      *      * @return noProdPanel      */
specifier|private
name|JPanel
name|createNoProducerPanel
parameter_list|()
block|{
name|JLabel
name|label
init|=
operator|new
name|JLabel
argument_list|(
name|JMeterUtils
operator|.
name|getResString
argument_list|(
literal|"form_no_producer"
argument_list|)
argument_list|)
decl_stmt|;
name|setNoProducer
operator|=
operator|new
name|JTextField
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|setNoProducer
operator|.
name|setName
argument_list|(
name|NOPRODUCER
argument_list|)
expr_stmt|;
name|label
operator|.
name|setLabelFor
argument_list|(
name|setNoProducer
argument_list|)
expr_stmt|;
name|JPanel
name|noProdPanel
init|=
operator|new
name|JPanel
argument_list|(
operator|new
name|BorderLayout
argument_list|(
literal|5
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|noProdPanel
operator|.
name|add
argument_list|(
name|label
argument_list|,
name|BorderLayout
operator|.
name|WEST
argument_list|)
expr_stmt|;
name|noProdPanel
operator|.
name|add
argument_list|(
name|setNoProducer
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
return|return
name|noProdPanel
return|;
block|}
comment|/**      * Creates the no subject panel.      *      * @return noSubjectPanel      */
specifier|private
name|JPanel
name|createNoSubjectPanel
parameter_list|()
block|{
name|JLabel
name|label
init|=
operator|new
name|JLabel
argument_list|(
name|JMeterUtils
operator|.
name|getResString
argument_list|(
literal|"form_no_subject"
argument_list|)
argument_list|)
decl_stmt|;
name|setNoSubject
operator|=
operator|new
name|JTextField
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|setNoSubject
operator|.
name|setName
argument_list|(
name|NOSUBJECT
argument_list|)
expr_stmt|;
name|label
operator|.
name|setLabelFor
argument_list|(
name|setNoSubject
argument_list|)
expr_stmt|;
name|JPanel
name|noSubjectPanel
init|=
operator|new
name|JPanel
argument_list|(
operator|new
name|BorderLayout
argument_list|(
literal|5
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|noSubjectPanel
operator|.
name|add
argument_list|(
name|label
argument_list|,
name|BorderLayout
operator|.
name|WEST
argument_list|)
expr_stmt|;
name|noSubjectPanel
operator|.
name|add
argument_list|(
name|setNoSubject
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
return|return
name|noSubjectPanel
return|;
block|}
comment|/**      * Creates the default/cutom Message Interval Panel      *      * @return msgIntervalPanel      */
specifier|private
name|JPanel
name|createDefMsgIntervalPanel
parameter_list|()
block|{
name|JLabel
name|labelMsgInterval
init|=
operator|new
name|JLabel
argument_list|(
name|JMeterUtils
operator|.
name|getResString
argument_list|(
literal|"form_msg_interval"
argument_list|)
argument_list|)
decl_stmt|;
comment|// create Default Message Interval.
name|JLabel
name|labelDefMsgInterval
init|=
operator|new
name|JLabel
argument_list|(
name|JMeterUtils
operator|.
name|getResString
argument_list|(
literal|"form_default_msg_interval"
argument_list|)
argument_list|)
decl_stmt|;
name|setDefMsgInterval
operator|=
operator|new
name|JRadioButton
argument_list|()
expr_stmt|;
name|setDefMsgInterval
operator|.
name|setName
argument_list|(
name|DEFMSGINTERVAL
argument_list|)
expr_stmt|;
name|labelDefMsgInterval
operator|.
name|setLabelFor
argument_list|(
name|setDefMsgInterval
argument_list|)
expr_stmt|;
name|setDefMsgInterval
operator|.
name|setActionCommand
argument_list|(
name|DEFMSGINTERVAL
argument_list|)
expr_stmt|;
name|setDefMsgInterval
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|evt
parameter_list|)
block|{
name|jRadioActionPerformedMsgInterval
argument_list|(
name|evt
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|setDefMsgInterval
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// create Custom Message Interval.
name|JLabel
name|labelCusMsgInterval
init|=
operator|new
name|JLabel
argument_list|(
name|JMeterUtils
operator|.
name|getResString
argument_list|(
literal|"form_custom_msg_interval"
argument_list|)
argument_list|)
decl_stmt|;
name|setCusMsgInterval
operator|=
operator|new
name|JRadioButton
argument_list|()
expr_stmt|;
name|setCusMsgInterval
operator|.
name|setName
argument_list|(
name|CUSMSGINTERVAL
argument_list|)
expr_stmt|;
name|labelDefMsgInterval
operator|.
name|setLabelFor
argument_list|(
name|setCusMsgInterval
argument_list|)
expr_stmt|;
name|setCusMsgInterval
operator|.
name|setActionCommand
argument_list|(
name|CUSMSGINTERVAL
argument_list|)
expr_stmt|;
name|setCusMsgInterval
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|evt
parameter_list|)
block|{
name|jRadioActionPerformedMsgInterval
argument_list|(
name|evt
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|setCusMsgInterval
operator|.
name|setSelected
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|//create Custom Message Interval Value.
name|JLabel
name|labelCusMsgIntervalValue
init|=
operator|new
name|JLabel
argument_list|(
name|JMeterUtils
operator|.
name|getResString
argument_list|(
literal|"form_custom_msg_interval_value"
argument_list|)
argument_list|)
decl_stmt|;
name|setMsgInterval
operator|=
operator|new
name|JTextField
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|setMsgInterval
operator|.
name|setName
argument_list|(
name|MSGINTERVAL
argument_list|)
expr_stmt|;
name|labelCusMsgIntervalValue
operator|.
name|setLabelFor
argument_list|(
name|setMsgInterval
argument_list|)
expr_stmt|;
name|FlowLayout
name|flow
init|=
operator|new
name|FlowLayout
argument_list|(
name|FlowLayout
operator|.
name|LEFT
argument_list|)
decl_stmt|;
name|flow
operator|.
name|setHgap
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|flow
operator|.
name|setVgap
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|JPanel
name|msgIntervalPanel
init|=
operator|new
name|JPanel
argument_list|(
name|flow
argument_list|)
decl_stmt|;
name|msgIntervalPanel
operator|.
name|add
argument_list|(
name|labelMsgInterval
argument_list|)
expr_stmt|;
name|msgIntervalPanel
operator|.
name|add
argument_list|(
operator|new
name|JLabel
argument_list|(
literal|"  "
argument_list|)
argument_list|)
expr_stmt|;
name|msgIntervalPanel
operator|.
name|add
argument_list|(
name|setDefMsgInterval
argument_list|)
expr_stmt|;
name|msgIntervalPanel
operator|.
name|add
argument_list|(
name|labelDefMsgInterval
argument_list|)
expr_stmt|;
name|msgIntervalPanel
operator|.
name|add
argument_list|(
operator|new
name|JLabel
argument_list|(
literal|"   "
argument_list|)
argument_list|)
expr_stmt|;
name|msgIntervalPanel
operator|.
name|add
argument_list|(
name|setCusMsgInterval
argument_list|)
expr_stmt|;
name|msgIntervalPanel
operator|.
name|add
argument_list|(
name|labelCusMsgInterval
argument_list|)
expr_stmt|;
name|msgIntervalPanel
operator|.
name|add
argument_list|(
operator|new
name|JLabel
argument_list|(
literal|"   "
argument_list|)
argument_list|)
expr_stmt|;
name|msgIntervalPanel
operator|.
name|add
argument_list|(
name|setMsgInterval
argument_list|)
expr_stmt|;
name|msgIntervalPanel
operator|.
name|add
argument_list|(
operator|new
name|JLabel
argument_list|(
literal|"   "
argument_list|)
argument_list|)
expr_stmt|;
name|msgIntervalPanel
operator|.
name|add
argument_list|(
name|labelCusMsgIntervalValue
argument_list|)
expr_stmt|;
return|return
name|msgIntervalPanel
return|;
block|}
comment|/**      * Creates the Transaction Panel.      *      * @return transactionPanel      */
specifier|private
name|JPanel
name|createTransactedPanel
parameter_list|()
block|{
name|JLabel
name|labelTransactionType
init|=
operator|new
name|JLabel
argument_list|(
name|JMeterUtils
operator|.
name|getResString
argument_list|(
literal|"form_msg_transaction_type"
argument_list|)
argument_list|)
decl_stmt|;
comment|//create Transacted Type
name|JLabel
name|labelTransacted
init|=
operator|new
name|JLabel
argument_list|(
name|JMeterUtils
operator|.
name|getResString
argument_list|(
literal|"form_transacted"
argument_list|)
argument_list|)
decl_stmt|;
name|setTransacted
operator|=
operator|new
name|JRadioButton
argument_list|()
expr_stmt|;
name|setTransacted
operator|.
name|setName
argument_list|(
name|TRANSACTED
argument_list|)
expr_stmt|;
name|labelTransacted
operator|.
name|setLabelFor
argument_list|(
name|setTransacted
argument_list|)
expr_stmt|;
name|setTransacted
operator|.
name|setActionCommand
argument_list|(
name|TRANSACTED
argument_list|)
expr_stmt|;
name|setTransacted
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|evt
parameter_list|)
block|{
name|jRadioActionPerformedTransaction
argument_list|(
name|evt
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|setTransacted
operator|.
name|setSelected
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|//create Non Transacted Type
name|JLabel
name|labelNonTransacted
init|=
operator|new
name|JLabel
argument_list|(
name|JMeterUtils
operator|.
name|getResString
argument_list|(
literal|"form_non_transacted"
argument_list|)
argument_list|)
decl_stmt|;
name|setNonTransacted
operator|=
operator|new
name|JRadioButton
argument_list|()
expr_stmt|;
name|setNonTransacted
operator|.
name|setName
argument_list|(
name|NONTRANSACTED
argument_list|)
expr_stmt|;
name|labelNonTransacted
operator|.
name|setLabelFor
argument_list|(
name|setNonTransacted
argument_list|)
expr_stmt|;
name|setNonTransacted
operator|.
name|setActionCommand
argument_list|(
name|NONTRANSACTED
argument_list|)
expr_stmt|;
name|setNonTransacted
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|evt
parameter_list|)
block|{
name|jRadioActionPerformedTransaction
argument_list|(
name|evt
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|setNonTransacted
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|//create Batch Size.
name|JLabel
name|labelBatchSize
init|=
operator|new
name|JLabel
argument_list|(
name|JMeterUtils
operator|.
name|getResString
argument_list|(
literal|"form_batch_size"
argument_list|)
argument_list|)
decl_stmt|;
name|setBatchSize
operator|=
operator|new
name|JTextField
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|setBatchSize
operator|.
name|setName
argument_list|(
name|BATCHSIZE
argument_list|)
expr_stmt|;
name|labelBatchSize
operator|.
name|setLabelFor
argument_list|(
name|setBatchSize
argument_list|)
expr_stmt|;
name|FlowLayout
name|flow
init|=
operator|new
name|FlowLayout
argument_list|(
name|FlowLayout
operator|.
name|LEFT
argument_list|)
decl_stmt|;
name|flow
operator|.
name|setHgap
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|flow
operator|.
name|setVgap
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|JPanel
name|transactionPanel
init|=
operator|new
name|JPanel
argument_list|(
name|flow
argument_list|)
decl_stmt|;
name|transactionPanel
operator|.
name|add
argument_list|(
name|labelTransactionType
argument_list|)
expr_stmt|;
name|transactionPanel
operator|.
name|add
argument_list|(
operator|new
name|JLabel
argument_list|(
literal|"   "
argument_list|)
argument_list|)
expr_stmt|;
name|transactionPanel
operator|.
name|add
argument_list|(
name|setNonTransacted
argument_list|)
expr_stmt|;
name|transactionPanel
operator|.
name|add
argument_list|(
name|labelNonTransacted
argument_list|)
expr_stmt|;
name|transactionPanel
operator|.
name|add
argument_list|(
operator|new
name|JLabel
argument_list|(
literal|"   "
argument_list|)
argument_list|)
expr_stmt|;
name|transactionPanel
operator|.
name|add
argument_list|(
name|setTransacted
argument_list|)
expr_stmt|;
name|transactionPanel
operator|.
name|add
argument_list|(
name|labelTransacted
argument_list|)
expr_stmt|;
name|transactionPanel
operator|.
name|add
argument_list|(
operator|new
name|JLabel
argument_list|(
literal|"   "
argument_list|)
argument_list|)
expr_stmt|;
name|transactionPanel
operator|.
name|add
argument_list|(
name|setBatchSize
argument_list|)
expr_stmt|;
name|transactionPanel
operator|.
name|add
argument_list|(
operator|new
name|JLabel
argument_list|(
literal|"   "
argument_list|)
argument_list|)
expr_stmt|;
name|transactionPanel
operator|.
name|add
argument_list|(
name|labelBatchSize
argument_list|)
expr_stmt|;
return|return
name|transactionPanel
return|;
block|}
comment|/**      * Creates the MQ Server Combo Box.      *      * @return mqServerPanel      */
specifier|private
name|JPanel
name|createMQServerPanel
parameter_list|()
block|{
name|String
index|[]
name|mqServers
init|=
block|{
name|ACTIVEMQ_SERVER
block|,
name|JBOSSMQ_SERVER
block|,
name|SONICMQ_SERVER
block|,
name|TIBCOMQ_SERVER
block|,
name|OPENJMS_SERVER
block|,
name|JORAM_SERVER
block|,
name|MANTARAY_SERVER
block|}
decl_stmt|;
name|JLabel
name|label
init|=
operator|new
name|JLabel
argument_list|(
name|JMeterUtils
operator|.
name|getResString
argument_list|(
literal|"form_mq_servers"
argument_list|)
argument_list|)
decl_stmt|;
name|setMQServer
operator|=
operator|new
name|JComboBox
argument_list|(
name|mqServers
argument_list|)
expr_stmt|;
name|setMQServer
operator|.
name|setName
argument_list|(
name|MQSERVER
argument_list|)
expr_stmt|;
name|label
operator|.
name|setLabelFor
argument_list|(
name|setMQServer
argument_list|)
expr_stmt|;
name|FlowLayout
name|flow
init|=
operator|new
name|FlowLayout
argument_list|(
name|FlowLayout
operator|.
name|LEFT
argument_list|)
decl_stmt|;
name|flow
operator|.
name|setHgap
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|flow
operator|.
name|setVgap
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|JPanel
name|mqServerPanel
init|=
operator|new
name|JPanel
argument_list|(
name|flow
argument_list|)
decl_stmt|;
name|mqServerPanel
operator|.
name|add
argument_list|(
name|label
argument_list|)
expr_stmt|;
name|mqServerPanel
operator|.
name|add
argument_list|(
operator|new
name|JLabel
argument_list|(
literal|"   "
argument_list|)
argument_list|)
expr_stmt|;
name|mqServerPanel
operator|.
name|add
argument_list|(
name|setMQServer
argument_list|)
expr_stmt|;
name|mqServerPanel
operator|.
name|add
argument_list|(
operator|new
name|JLabel
argument_list|(
literal|"   "
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|mqServerPanel
return|;
block|}
comment|/**      * Initializes the gui components.      */
specifier|private
name|void
name|init
parameter_list|()
block|{
name|setLayout
argument_list|(
operator|new
name|BorderLayout
argument_list|(
literal|0
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|displayName
condition|)
block|{
name|setBorder
argument_list|(
name|makeBorder
argument_list|()
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|makeTitlePanel
argument_list|()
argument_list|,
name|BorderLayout
operator|.
name|NORTH
argument_list|)
expr_stmt|;
block|}
name|VerticalPanel
name|mainPanel
init|=
operator|new
name|VerticalPanel
argument_list|()
decl_stmt|;
name|mainPanel
operator|.
name|add
argument_list|(
name|createURLPanel
argument_list|()
argument_list|)
expr_stmt|;
name|mainPanel
operator|.
name|add
argument_list|(
name|createDurationPanel
argument_list|()
argument_list|)
expr_stmt|;
name|mainPanel
operator|.
name|add
argument_list|(
name|createRampUpPanel
argument_list|()
argument_list|)
expr_stmt|;
name|mainPanel
operator|.
name|add
argument_list|(
name|createNoProducerPanel
argument_list|()
argument_list|)
expr_stmt|;
name|mainPanel
operator|.
name|add
argument_list|(
name|createNoSubjectPanel
argument_list|()
argument_list|)
expr_stmt|;
name|mainPanel
operator|.
name|add
argument_list|(
name|createMsgSizePanel
argument_list|()
argument_list|)
expr_stmt|;
name|mainPanel
operator|.
name|add
argument_list|(
name|createDurablePanel
argument_list|()
argument_list|)
expr_stmt|;
name|mainPanel
operator|.
name|add
argument_list|(
name|createTopicPanel
argument_list|()
argument_list|)
expr_stmt|;
name|mainPanel
operator|.
name|add
argument_list|(
name|createTransactedPanel
argument_list|()
argument_list|)
expr_stmt|;
name|mainPanel
operator|.
name|add
argument_list|(
name|createDefMsgIntervalPanel
argument_list|()
argument_list|)
expr_stmt|;
name|mainPanel
operator|.
name|add
argument_list|(
name|createMQServerPanel
argument_list|()
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|mainPanel
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
block|}
comment|/**      * Listener action for selecting Messaging Domain.      *      * @param evt - event triggered.      */
specifier|private
name|void
name|jRadioButtonActionPerformed
parameter_list|(
name|ActionEvent
name|evt
parameter_list|)
block|{
name|String
name|evtActionCommand
init|=
name|evt
operator|.
name|getActionCommand
argument_list|()
decl_stmt|;
if|if
condition|(
name|evtActionCommand
operator|.
name|equals
argument_list|(
name|TOPIC
argument_list|)
condition|)
block|{
name|setTopic
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setQueue
operator|.
name|setSelected
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|evtActionCommand
operator|.
name|equals
argument_list|(
name|QUEUE
argument_list|)
condition|)
block|{
name|setTopic
operator|.
name|setSelected
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|setQueue
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * Listener action for selecting Delivery Mode.      *      * @param evt - event triggered.      */
specifier|private
name|void
name|jRadioButtonActionPerformedDelivery
parameter_list|(
name|ActionEvent
name|evt
parameter_list|)
block|{
name|String
name|evtActionCommand
init|=
name|evt
operator|.
name|getActionCommand
argument_list|()
decl_stmt|;
if|if
condition|(
name|evtActionCommand
operator|.
name|equals
argument_list|(
name|DURABLE
argument_list|)
condition|)
block|{
name|setDurable
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setNonDurable
operator|.
name|setSelected
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|evtActionCommand
operator|.
name|equals
argument_list|(
name|NONDURABLE
argument_list|)
condition|)
block|{
name|setDurable
operator|.
name|setSelected
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|setNonDurable
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * @param evt - event triggered.      */
specifier|private
name|void
name|jRadioActionPerformedMsgInterval
parameter_list|(
name|ActionEvent
name|evt
parameter_list|)
block|{
name|String
name|evtActionCommand
init|=
name|evt
operator|.
name|getActionCommand
argument_list|()
decl_stmt|;
if|if
condition|(
name|evtActionCommand
operator|.
name|equals
argument_list|(
name|DEFMSGINTERVAL
argument_list|)
condition|)
block|{
name|setDefMsgInterval
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setCusMsgInterval
operator|.
name|setSelected
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|setMsgInterval
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|setMsgInterval
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|evtActionCommand
operator|.
name|equals
argument_list|(
name|CUSMSGINTERVAL
argument_list|)
condition|)
block|{
name|setDefMsgInterval
operator|.
name|setSelected
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|setCusMsgInterval
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setMsgInterval
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * @param evt - event triggered.      */
specifier|private
name|void
name|jRadioActionPerformedTransaction
parameter_list|(
name|ActionEvent
name|evt
parameter_list|)
block|{
name|String
name|evtActionCommand
init|=
name|evt
operator|.
name|getActionCommand
argument_list|()
decl_stmt|;
if|if
condition|(
name|evtActionCommand
operator|.
name|equals
argument_list|(
name|TRANSACTED
argument_list|)
condition|)
block|{
name|setTransacted
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setNonTransacted
operator|.
name|setSelected
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|setBatchSize
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|evtActionCommand
operator|.
name|equals
argument_list|(
name|NONTRANSACTED
argument_list|)
condition|)
block|{
name|setTransacted
operator|.
name|setSelected
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|setNonTransacted
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setBatchSize
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|setBatchSize
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

