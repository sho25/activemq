begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|shiro
operator|.
name|subject
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|shiro
operator|.
name|authc
operator|.
name|AuthenticationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|shiro
operator|.
name|authc
operator|.
name|AuthenticationToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|shiro
operator|.
name|authz
operator|.
name|AuthorizationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|shiro
operator|.
name|authz
operator|.
name|Permission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|shiro
operator|.
name|session
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|shiro
operator|.
name|subject
operator|.
name|ExecutionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|shiro
operator|.
name|subject
operator|.
name|PrincipalCollection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|shiro
operator|.
name|subject
operator|.
name|Subject
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Callable
import|;
end_import

begin_comment
comment|/**  * @since 5.10.0  */
end_comment

begin_class
specifier|public
class|class
name|SubjectAdapter
implements|implements
name|Subject
block|{
annotation|@
name|Override
specifier|public
name|Object
name|getPrincipal
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|PrincipalCollection
name|getPrincipals
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isPermitted
parameter_list|(
name|String
name|permission
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isPermitted
parameter_list|(
name|Permission
name|permission
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
index|[]
name|isPermitted
parameter_list|(
name|String
modifier|...
name|permissions
parameter_list|)
block|{
return|return
operator|new
name|boolean
index|[
literal|0
index|]
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
index|[]
name|isPermitted
parameter_list|(
name|List
argument_list|<
name|Permission
argument_list|>
name|permissions
parameter_list|)
block|{
return|return
operator|new
name|boolean
index|[
literal|0
index|]
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isPermittedAll
parameter_list|(
name|String
modifier|...
name|permissions
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isPermittedAll
parameter_list|(
name|Collection
argument_list|<
name|Permission
argument_list|>
name|permissions
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|checkPermission
parameter_list|(
name|String
name|permission
parameter_list|)
throws|throws
name|AuthorizationException
block|{     }
annotation|@
name|Override
specifier|public
name|void
name|checkPermission
parameter_list|(
name|Permission
name|permission
parameter_list|)
throws|throws
name|AuthorizationException
block|{     }
annotation|@
name|Override
specifier|public
name|void
name|checkPermissions
parameter_list|(
name|String
modifier|...
name|permissions
parameter_list|)
throws|throws
name|AuthorizationException
block|{     }
annotation|@
name|Override
specifier|public
name|void
name|checkPermissions
parameter_list|(
name|Collection
argument_list|<
name|Permission
argument_list|>
name|permissions
parameter_list|)
throws|throws
name|AuthorizationException
block|{     }
annotation|@
name|Override
specifier|public
name|boolean
name|hasRole
parameter_list|(
name|String
name|roleIdentifier
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
index|[]
name|hasRoles
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|roleIdentifiers
parameter_list|)
block|{
return|return
operator|new
name|boolean
index|[
literal|0
index|]
return|;
comment|//To change body of implemented methods use File | Settings | File Templates.
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|hasAllRoles
parameter_list|(
name|Collection
argument_list|<
name|String
argument_list|>
name|roleIdentifiers
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|checkRole
parameter_list|(
name|String
name|roleIdentifier
parameter_list|)
throws|throws
name|AuthorizationException
block|{     }
annotation|@
name|Override
specifier|public
name|void
name|checkRoles
parameter_list|(
name|Collection
argument_list|<
name|String
argument_list|>
name|roleIdentifiers
parameter_list|)
throws|throws
name|AuthorizationException
block|{     }
annotation|@
name|Override
specifier|public
name|void
name|checkRoles
parameter_list|(
name|String
modifier|...
name|roleIdentifiers
parameter_list|)
throws|throws
name|AuthorizationException
block|{     }
annotation|@
name|Override
specifier|public
name|void
name|login
parameter_list|(
name|AuthenticationToken
name|token
parameter_list|)
throws|throws
name|AuthenticationException
block|{     }
annotation|@
name|Override
specifier|public
name|boolean
name|isAuthenticated
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isRemembered
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|Session
name|getSession
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|Session
name|getSession
parameter_list|(
name|boolean
name|create
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|logout
parameter_list|()
block|{     }
annotation|@
name|Override
specifier|public
parameter_list|<
name|V
parameter_list|>
name|V
name|execute
parameter_list|(
name|Callable
argument_list|<
name|V
argument_list|>
name|callable
parameter_list|)
throws|throws
name|ExecutionException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|(
name|Runnable
name|runnable
parameter_list|)
block|{     }
annotation|@
name|Override
specifier|public
parameter_list|<
name|V
parameter_list|>
name|Callable
argument_list|<
name|V
argument_list|>
name|associateWith
parameter_list|(
name|Callable
argument_list|<
name|V
argument_list|>
name|callable
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|Runnable
name|associateWith
parameter_list|(
name|Runnable
name|runnable
parameter_list|)
block|{
return|return
name|runnable
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|runAs
parameter_list|(
name|PrincipalCollection
name|principals
parameter_list|)
throws|throws
name|NullPointerException
throws|,
name|IllegalStateException
block|{     }
annotation|@
name|Override
specifier|public
name|boolean
name|isRunAs
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|PrincipalCollection
name|getPreviousPrincipals
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|PrincipalCollection
name|releaseRunAs
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

