begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY VIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|group
package|;
end_package

begin_comment
comment|/**  * Holds information about the Value in the Map  *  */
end_comment

begin_class
class|class
name|EntryValue
parameter_list|<
name|V
parameter_list|>
block|{
specifier|private
name|Member
name|owner
decl_stmt|;
specifier|private
name|V
name|value
decl_stmt|;
name|EntryValue
parameter_list|(
name|Member
name|owner
parameter_list|,
name|V
name|value
parameter_list|)
block|{
name|this
operator|.
name|owner
operator|=
name|owner
expr_stmt|;
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
comment|/**      * @return the owner      */
specifier|public
name|Member
name|getOwner
parameter_list|()
block|{
return|return
name|this
operator|.
name|owner
return|;
block|}
comment|/**      * @return the key      */
specifier|public
name|V
name|getValue
parameter_list|()
block|{
return|return
name|this
operator|.
name|value
return|;
block|}
comment|/**      * set the value      * @param value      */
specifier|public
name|void
name|setValue
parameter_list|(
name|V
name|value
parameter_list|)
block|{
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|this
operator|.
name|value
operator|!=
literal|null
condition|?
name|this
operator|.
name|value
operator|.
name|hashCode
argument_list|()
else|:
name|super
operator|.
name|hashCode
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
name|boolean
name|result
init|=
literal|false
decl_stmt|;
if|if
condition|(
name|obj
operator|instanceof
name|EntryValue
condition|)
block|{
name|EntryValue
name|other
init|=
operator|(
name|EntryValue
operator|)
name|obj
decl_stmt|;
name|result
operator|=
operator|(
name|this
operator|.
name|value
operator|==
literal|null
operator|&&
name|other
operator|.
name|value
operator|==
literal|null
operator|)
operator|||
operator|(
name|this
operator|.
name|value
operator|!=
literal|null
operator|&&
name|other
operator|.
name|value
operator|!=
literal|null
operator|&&
name|this
operator|.
name|value
operator|.
name|equals
argument_list|(
name|other
operator|.
name|value
argument_list|)
operator|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
block|}
end_class

end_unit

