begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Enumeration
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|JMSException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageFormatException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageNotWriteableException
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|openwire
operator|.
name|OpenWireFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|state
operator|.
name|CommandVisitor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|util
operator|.
name|ByteSequence
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|wireformat
operator|.
name|WireFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_comment
comment|/**  * @version $Revision$  */
end_comment

begin_class
specifier|public
class|class
name|ActiveMQMessageTest
extends|extends
name|TestCase
block|{
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|ActiveMQMessageTest
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
name|boolean
name|readOnlyMessage
decl_stmt|;
specifier|private
name|String
name|jmsMessageID
decl_stmt|;
specifier|private
name|String
name|jmsCorrelationID
decl_stmt|;
specifier|private
name|ActiveMQDestination
name|jmsDestination
decl_stmt|;
specifier|private
name|ActiveMQDestination
name|jmsReplyTo
decl_stmt|;
specifier|private
name|int
name|jmsDeliveryMode
decl_stmt|;
specifier|private
name|boolean
name|jmsRedelivered
decl_stmt|;
specifier|private
name|String
name|jmsType
decl_stmt|;
specifier|private
name|long
name|jmsExpiration
decl_stmt|;
specifier|private
name|int
name|jmsPriority
decl_stmt|;
specifier|private
name|long
name|jmsTimestamp
decl_stmt|;
specifier|private
name|long
index|[]
name|consumerIDs
decl_stmt|;
comment|/**      * Constructor for ActiveMQMessageTest.      *       * @param name      */
specifier|public
name|ActiveMQMessageTest
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{     }
comment|/*      * @see TestCase#setUp()      */
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|this
operator|.
name|jmsMessageID
operator|=
literal|"testid"
expr_stmt|;
name|this
operator|.
name|jmsCorrelationID
operator|=
literal|"testcorrelationid"
expr_stmt|;
name|this
operator|.
name|jmsDestination
operator|=
operator|new
name|ActiveMQTopic
argument_list|(
literal|"test.topic"
argument_list|)
expr_stmt|;
name|this
operator|.
name|jmsReplyTo
operator|=
operator|new
name|ActiveMQTempTopic
argument_list|(
literal|"test.replyto.topic:001"
argument_list|)
expr_stmt|;
name|this
operator|.
name|jmsDeliveryMode
operator|=
name|Message
operator|.
name|DEFAULT_DELIVERY_MODE
expr_stmt|;
name|this
operator|.
name|jmsRedelivered
operator|=
literal|true
expr_stmt|;
name|this
operator|.
name|jmsType
operator|=
literal|"test type"
expr_stmt|;
name|this
operator|.
name|jmsExpiration
operator|=
literal|100000
expr_stmt|;
name|this
operator|.
name|jmsPriority
operator|=
literal|5
expr_stmt|;
name|this
operator|.
name|jmsTimestamp
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
expr_stmt|;
name|this
operator|.
name|readOnlyMessage
operator|=
literal|false
expr_stmt|;
name|this
operator|.
name|consumerIDs
operator|=
operator|new
name|long
index|[
literal|3
index|]
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|this
operator|.
name|consumerIDs
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|this
operator|.
name|consumerIDs
index|[
name|i
index|]
operator|=
name|i
expr_stmt|;
block|}
block|}
comment|/*      * @see TestCase#tearDown()      */
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testGetDataStructureType
parameter_list|()
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|msg
operator|.
name|getDataStructureType
argument_list|()
argument_list|,
name|CommandTypes
operator|.
name|ACTIVEMQ_MESSAGE
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testHashCode
parameter_list|()
throws|throws
name|Exception
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|msg
operator|.
name|setJMSMessageID
argument_list|(
name|this
operator|.
name|jmsMessageID
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|msg
operator|.
name|hashCode
argument_list|()
operator|==
name|jmsMessageID
operator|.
name|hashCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSetReadOnly
parameter_list|()
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|msg
operator|.
name|setReadOnlyProperties
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|boolean
name|test
init|=
literal|false
decl_stmt|;
try|try
block|{
name|msg
operator|.
name|setIntProperty
argument_list|(
literal|"test"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageNotWriteableException
name|me
parameter_list|)
block|{
name|test
operator|=
literal|true
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JMSException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|(
name|System
operator|.
name|err
argument_list|)
expr_stmt|;
name|test
operator|=
literal|false
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|test
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSetToForeignJMSID
parameter_list|()
throws|throws
name|Exception
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|msg
operator|.
name|setJMSMessageID
argument_list|(
literal|"ID:EMS-SERVER.8B443C380083:429"
argument_list|)
expr_stmt|;
block|}
comment|/*      * Class to test for boolean equals(Object)      */
specifier|public
name|void
name|testEqualsObject
parameter_list|()
throws|throws
name|Exception
block|{
name|ActiveMQMessage
name|msg1
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|ActiveMQMessage
name|msg2
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|msg1
operator|.
name|setJMSMessageID
argument_list|(
name|this
operator|.
name|jmsMessageID
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|!
name|msg1
operator|.
name|equals
argument_list|(
name|msg2
argument_list|)
argument_list|)
expr_stmt|;
name|msg2
operator|.
name|setJMSMessageID
argument_list|(
name|this
operator|.
name|jmsMessageID
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|msg1
operator|.
name|equals
argument_list|(
name|msg2
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testShallowCopy
parameter_list|()
throws|throws
name|Exception
block|{
name|ActiveMQMessage
name|msg1
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|msg1
operator|.
name|setJMSMessageID
argument_list|(
name|jmsMessageID
argument_list|)
expr_stmt|;
name|ActiveMQMessage
name|msg2
init|=
operator|(
name|ActiveMQMessage
operator|)
name|msg1
operator|.
name|copy
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|msg1
operator|!=
name|msg2
operator|&&
name|msg1
operator|.
name|equals
argument_list|(
name|msg2
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testCopy
parameter_list|()
throws|throws
name|Exception
block|{
name|this
operator|.
name|jmsMessageID
operator|=
literal|"testid"
expr_stmt|;
name|this
operator|.
name|jmsCorrelationID
operator|=
literal|"testcorrelationid"
expr_stmt|;
name|this
operator|.
name|jmsDestination
operator|=
operator|new
name|ActiveMQTopic
argument_list|(
literal|"test.topic"
argument_list|)
expr_stmt|;
name|this
operator|.
name|jmsReplyTo
operator|=
operator|new
name|ActiveMQTempTopic
argument_list|(
literal|"test.replyto.topic:001"
argument_list|)
expr_stmt|;
name|this
operator|.
name|jmsDeliveryMode
operator|=
name|Message
operator|.
name|DEFAULT_DELIVERY_MODE
expr_stmt|;
name|this
operator|.
name|jmsRedelivered
operator|=
literal|true
expr_stmt|;
name|this
operator|.
name|jmsType
operator|=
literal|"test type"
expr_stmt|;
name|this
operator|.
name|jmsExpiration
operator|=
literal|100000
expr_stmt|;
name|this
operator|.
name|jmsPriority
operator|=
literal|5
expr_stmt|;
name|this
operator|.
name|jmsTimestamp
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
expr_stmt|;
name|this
operator|.
name|readOnlyMessage
operator|=
literal|false
expr_stmt|;
name|ActiveMQMessage
name|msg1
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|msg1
operator|.
name|setJMSMessageID
argument_list|(
name|this
operator|.
name|jmsMessageID
argument_list|)
expr_stmt|;
name|msg1
operator|.
name|setJMSCorrelationID
argument_list|(
name|this
operator|.
name|jmsCorrelationID
argument_list|)
expr_stmt|;
name|msg1
operator|.
name|setJMSDestination
argument_list|(
name|this
operator|.
name|jmsDestination
argument_list|)
expr_stmt|;
name|msg1
operator|.
name|setJMSReplyTo
argument_list|(
name|this
operator|.
name|jmsReplyTo
argument_list|)
expr_stmt|;
name|msg1
operator|.
name|setJMSDeliveryMode
argument_list|(
name|this
operator|.
name|jmsDeliveryMode
argument_list|)
expr_stmt|;
name|msg1
operator|.
name|setJMSRedelivered
argument_list|(
name|this
operator|.
name|jmsRedelivered
argument_list|)
expr_stmt|;
name|msg1
operator|.
name|setJMSType
argument_list|(
name|this
operator|.
name|jmsType
argument_list|)
expr_stmt|;
name|msg1
operator|.
name|setJMSExpiration
argument_list|(
name|this
operator|.
name|jmsExpiration
argument_list|)
expr_stmt|;
name|msg1
operator|.
name|setJMSPriority
argument_list|(
name|this
operator|.
name|jmsPriority
argument_list|)
expr_stmt|;
name|msg1
operator|.
name|setJMSTimestamp
argument_list|(
name|this
operator|.
name|jmsTimestamp
argument_list|)
expr_stmt|;
name|msg1
operator|.
name|setReadOnlyProperties
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|ActiveMQMessage
name|msg2
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|msg1
operator|.
name|copy
argument_list|(
name|msg2
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|msg1
operator|.
name|getJMSMessageID
argument_list|()
operator|.
name|equals
argument_list|(
name|msg2
operator|.
name|getJMSMessageID
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|msg1
operator|.
name|getJMSCorrelationID
argument_list|()
operator|.
name|equals
argument_list|(
name|msg2
operator|.
name|getJMSCorrelationID
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|msg1
operator|.
name|getJMSDestination
argument_list|()
operator|.
name|equals
argument_list|(
name|msg2
operator|.
name|getJMSDestination
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|msg1
operator|.
name|getJMSReplyTo
argument_list|()
operator|.
name|equals
argument_list|(
name|msg2
operator|.
name|getJMSReplyTo
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|msg1
operator|.
name|getJMSDeliveryMode
argument_list|()
operator|==
name|msg2
operator|.
name|getJMSDeliveryMode
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|msg1
operator|.
name|getJMSRedelivered
argument_list|()
operator|==
name|msg2
operator|.
name|getJMSRedelivered
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|msg1
operator|.
name|getJMSType
argument_list|()
operator|.
name|equals
argument_list|(
name|msg2
operator|.
name|getJMSType
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|msg1
operator|.
name|getJMSExpiration
argument_list|()
operator|==
name|msg2
operator|.
name|getJMSExpiration
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|msg1
operator|.
name|getJMSPriority
argument_list|()
operator|==
name|msg2
operator|.
name|getJMSPriority
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|msg1
operator|.
name|getJMSTimestamp
argument_list|()
operator|==
name|msg2
operator|.
name|getJMSTimestamp
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Message is:  "
operator|+
name|msg1
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetAndSetJMSMessageID
parameter_list|()
throws|throws
name|Exception
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|msg
operator|.
name|setJMSMessageID
argument_list|(
name|this
operator|.
name|jmsMessageID
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
operator|.
name|getJMSMessageID
argument_list|()
argument_list|,
name|this
operator|.
name|jmsMessageID
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetAndSetJMSTimestamp
parameter_list|()
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|msg
operator|.
name|setJMSTimestamp
argument_list|(
name|this
operator|.
name|jmsTimestamp
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|msg
operator|.
name|getJMSTimestamp
argument_list|()
operator|==
name|this
operator|.
name|jmsTimestamp
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetJMSCorrelationIDAsBytes
parameter_list|()
throws|throws
name|Exception
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|msg
operator|.
name|setJMSCorrelationID
argument_list|(
name|this
operator|.
name|jmsCorrelationID
argument_list|)
expr_stmt|;
name|byte
index|[]
name|testbytes
init|=
name|msg
operator|.
name|getJMSCorrelationIDAsBytes
argument_list|()
decl_stmt|;
name|String
name|str2
init|=
operator|new
name|String
argument_list|(
name|testbytes
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|this
operator|.
name|jmsCorrelationID
operator|.
name|equals
argument_list|(
name|str2
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSetJMSCorrelationIDAsBytes
parameter_list|()
throws|throws
name|Exception
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|byte
index|[]
name|testbytes
init|=
name|this
operator|.
name|jmsCorrelationID
operator|.
name|getBytes
argument_list|()
decl_stmt|;
name|msg
operator|.
name|setJMSCorrelationIDAsBytes
argument_list|(
name|testbytes
argument_list|)
expr_stmt|;
name|testbytes
operator|=
name|msg
operator|.
name|getJMSCorrelationIDAsBytes
argument_list|()
expr_stmt|;
name|String
name|str2
init|=
operator|new
name|String
argument_list|(
name|testbytes
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|this
operator|.
name|jmsCorrelationID
operator|.
name|equals
argument_list|(
name|str2
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetAndSetJMSCorrelationID
parameter_list|()
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|msg
operator|.
name|setJMSCorrelationID
argument_list|(
name|this
operator|.
name|jmsCorrelationID
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|msg
operator|.
name|getJMSCorrelationID
argument_list|()
operator|.
name|equals
argument_list|(
name|this
operator|.
name|jmsCorrelationID
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetAndSetJMSReplyTo
parameter_list|()
throws|throws
name|JMSException
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|msg
operator|.
name|setJMSReplyTo
argument_list|(
name|this
operator|.
name|jmsReplyTo
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|msg
operator|.
name|getJMSReplyTo
argument_list|()
operator|.
name|equals
argument_list|(
name|this
operator|.
name|jmsReplyTo
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetAndSetJMSDestination
parameter_list|()
throws|throws
name|Exception
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|msg
operator|.
name|setJMSDestination
argument_list|(
name|this
operator|.
name|jmsDestination
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|msg
operator|.
name|getJMSDestination
argument_list|()
operator|.
name|equals
argument_list|(
name|this
operator|.
name|jmsDestination
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetAndSetJMSDeliveryMode
parameter_list|()
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|msg
operator|.
name|setJMSDeliveryMode
argument_list|(
name|this
operator|.
name|jmsDeliveryMode
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|msg
operator|.
name|getJMSDeliveryMode
argument_list|()
operator|==
name|this
operator|.
name|jmsDeliveryMode
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetAndSetMSRedelivered
parameter_list|()
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|msg
operator|.
name|setJMSRedelivered
argument_list|(
name|this
operator|.
name|jmsRedelivered
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|msg
operator|.
name|getJMSRedelivered
argument_list|()
operator|==
name|this
operator|.
name|jmsRedelivered
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetAndSetJMSType
parameter_list|()
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|msg
operator|.
name|setJMSType
argument_list|(
name|this
operator|.
name|jmsType
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|msg
operator|.
name|getJMSType
argument_list|()
operator|.
name|equals
argument_list|(
name|this
operator|.
name|jmsType
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetAndSetJMSExpiration
parameter_list|()
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|msg
operator|.
name|setJMSExpiration
argument_list|(
name|this
operator|.
name|jmsExpiration
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|msg
operator|.
name|getJMSExpiration
argument_list|()
operator|==
name|this
operator|.
name|jmsExpiration
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetAndSetJMSPriority
parameter_list|()
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|msg
operator|.
name|setJMSPriority
argument_list|(
name|this
operator|.
name|jmsPriority
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|msg
operator|.
name|getJMSPriority
argument_list|()
operator|==
name|this
operator|.
name|jmsPriority
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testClearProperties
parameter_list|()
throws|throws
name|JMSException
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|msg
operator|.
name|setStringProperty
argument_list|(
literal|"test"
argument_list|,
literal|"test"
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setContent
argument_list|(
operator|new
name|ByteSequence
argument_list|(
operator|new
name|byte
index|[
literal|1
index|]
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setJMSMessageID
argument_list|(
name|this
operator|.
name|jmsMessageID
argument_list|)
expr_stmt|;
name|msg
operator|.
name|clearProperties
argument_list|()
expr_stmt|;
name|assertNull
argument_list|(
name|msg
operator|.
name|getStringProperty
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|msg
operator|.
name|getJMSMessageID
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|msg
operator|.
name|getContent
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testPropertyExists
parameter_list|()
throws|throws
name|JMSException
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|msg
operator|.
name|setStringProperty
argument_list|(
literal|"test"
argument_list|,
literal|"test"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|msg
operator|.
name|propertyExists
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setIntProperty
argument_list|(
literal|"JMSXDeliveryCount"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|msg
operator|.
name|propertyExists
argument_list|(
literal|"JMSXDeliveryCount"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetBooleanProperty
parameter_list|()
throws|throws
name|JMSException
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|String
name|name
init|=
literal|"booleanProperty"
decl_stmt|;
name|msg
operator|.
name|setBooleanProperty
argument_list|(
name|name
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|msg
operator|.
name|getBooleanProperty
argument_list|(
name|name
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetByteProperty
parameter_list|()
throws|throws
name|JMSException
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|String
name|name
init|=
literal|"byteProperty"
decl_stmt|;
name|msg
operator|.
name|setByteProperty
argument_list|(
name|name
argument_list|,
operator|(
name|byte
operator|)
literal|1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|msg
operator|.
name|getByteProperty
argument_list|(
name|name
argument_list|)
operator|==
literal|1
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetShortProperty
parameter_list|()
throws|throws
name|JMSException
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|String
name|name
init|=
literal|"shortProperty"
decl_stmt|;
name|msg
operator|.
name|setShortProperty
argument_list|(
name|name
argument_list|,
operator|(
name|short
operator|)
literal|1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|msg
operator|.
name|getShortProperty
argument_list|(
name|name
argument_list|)
operator|==
literal|1
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetIntProperty
parameter_list|()
throws|throws
name|JMSException
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|String
name|name
init|=
literal|"intProperty"
decl_stmt|;
name|msg
operator|.
name|setIntProperty
argument_list|(
name|name
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|msg
operator|.
name|getIntProperty
argument_list|(
name|name
argument_list|)
operator|==
literal|1
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetLongProperty
parameter_list|()
throws|throws
name|JMSException
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|String
name|name
init|=
literal|"longProperty"
decl_stmt|;
name|msg
operator|.
name|setLongProperty
argument_list|(
name|name
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|msg
operator|.
name|getLongProperty
argument_list|(
name|name
argument_list|)
operator|==
literal|1
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetFloatProperty
parameter_list|()
throws|throws
name|JMSException
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|String
name|name
init|=
literal|"floatProperty"
decl_stmt|;
name|msg
operator|.
name|setFloatProperty
argument_list|(
name|name
argument_list|,
literal|1.3f
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|msg
operator|.
name|getFloatProperty
argument_list|(
name|name
argument_list|)
operator|==
literal|1.3f
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetDoubleProperty
parameter_list|()
throws|throws
name|JMSException
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|String
name|name
init|=
literal|"doubleProperty"
decl_stmt|;
name|msg
operator|.
name|setDoubleProperty
argument_list|(
name|name
argument_list|,
literal|1.3d
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|msg
operator|.
name|getDoubleProperty
argument_list|(
name|name
argument_list|)
operator|==
literal|1.3
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetStringProperty
parameter_list|()
throws|throws
name|JMSException
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|String
name|name
init|=
literal|"stringProperty"
decl_stmt|;
name|msg
operator|.
name|setStringProperty
argument_list|(
name|name
argument_list|,
name|name
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|msg
operator|.
name|getStringProperty
argument_list|(
name|name
argument_list|)
operator|.
name|equals
argument_list|(
name|name
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetObjectProperty
parameter_list|()
throws|throws
name|JMSException
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|String
name|name
init|=
literal|"floatProperty"
decl_stmt|;
name|msg
operator|.
name|setFloatProperty
argument_list|(
name|name
argument_list|,
literal|1.3f
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|msg
operator|.
name|getObjectProperty
argument_list|(
name|name
argument_list|)
operator|instanceof
name|Float
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|(
operator|(
name|Float
operator|)
name|msg
operator|.
name|getObjectProperty
argument_list|(
name|name
argument_list|)
operator|)
operator|.
name|floatValue
argument_list|()
operator|==
literal|1.3f
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetPropertyNames
parameter_list|()
throws|throws
name|JMSException
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|String
name|name1
init|=
literal|"floatProperty"
decl_stmt|;
name|msg
operator|.
name|setFloatProperty
argument_list|(
name|name1
argument_list|,
literal|1.3f
argument_list|)
expr_stmt|;
name|String
name|name2
init|=
literal|"JMSXDeliveryCount"
decl_stmt|;
name|msg
operator|.
name|setIntProperty
argument_list|(
name|name2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|String
name|name3
init|=
literal|"JMSRedelivered"
decl_stmt|;
name|msg
operator|.
name|setBooleanProperty
argument_list|(
name|name3
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|boolean
name|found1
init|=
literal|false
decl_stmt|;
name|boolean
name|found2
init|=
literal|false
decl_stmt|;
name|boolean
name|found3
init|=
literal|false
decl_stmt|;
for|for
control|(
name|Enumeration
name|iter
init|=
name|msg
operator|.
name|getPropertyNames
argument_list|()
init|;
name|iter
operator|.
name|hasMoreElements
argument_list|()
condition|;
control|)
block|{
name|Object
name|element
init|=
name|iter
operator|.
name|nextElement
argument_list|()
decl_stmt|;
name|found1
operator||=
name|element
operator|.
name|equals
argument_list|(
name|name1
argument_list|)
expr_stmt|;
name|found2
operator||=
name|element
operator|.
name|equals
argument_list|(
name|name2
argument_list|)
expr_stmt|;
name|found3
operator||=
name|element
operator|.
name|equals
argument_list|(
name|name3
argument_list|)
expr_stmt|;
block|}
name|assertTrue
argument_list|(
literal|"prop name1 found"
argument_list|,
name|found1
argument_list|)
expr_stmt|;
comment|// spec compliance, only non JMS (and JMSX) props returned
name|assertFalse
argument_list|(
literal|"prop name2 not found"
argument_list|,
name|found2
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"prop name4 not found"
argument_list|,
name|found3
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetAllPropertyNames
parameter_list|()
throws|throws
name|JMSException
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|String
name|name1
init|=
literal|"floatProperty"
decl_stmt|;
name|msg
operator|.
name|setFloatProperty
argument_list|(
name|name1
argument_list|,
literal|1.3f
argument_list|)
expr_stmt|;
name|String
name|name2
init|=
literal|"JMSXDeliveryCount"
decl_stmt|;
name|msg
operator|.
name|setIntProperty
argument_list|(
name|name2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|String
name|name3
init|=
literal|"JMSRedelivered"
decl_stmt|;
name|msg
operator|.
name|setBooleanProperty
argument_list|(
name|name3
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|boolean
name|found1
init|=
literal|false
decl_stmt|;
name|boolean
name|found2
init|=
literal|false
decl_stmt|;
name|boolean
name|found3
init|=
literal|false
decl_stmt|;
for|for
control|(
name|Enumeration
name|iter
init|=
name|msg
operator|.
name|getAllPropertyNames
argument_list|()
init|;
name|iter
operator|.
name|hasMoreElements
argument_list|()
condition|;
control|)
block|{
name|Object
name|element
init|=
name|iter
operator|.
name|nextElement
argument_list|()
decl_stmt|;
name|found1
operator||=
name|element
operator|.
name|equals
argument_list|(
name|name1
argument_list|)
expr_stmt|;
name|found2
operator||=
name|element
operator|.
name|equals
argument_list|(
name|name2
argument_list|)
expr_stmt|;
name|found3
operator||=
name|element
operator|.
name|equals
argument_list|(
name|name3
argument_list|)
expr_stmt|;
block|}
name|assertTrue
argument_list|(
literal|"prop name1 found"
argument_list|,
name|found1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"prop name2 found"
argument_list|,
name|found2
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"prop name4 found"
argument_list|,
name|found3
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSetObjectProperty
parameter_list|()
throws|throws
name|JMSException
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|String
name|name
init|=
literal|"property"
decl_stmt|;
try|try
block|{
name|msg
operator|.
name|setObjectProperty
argument_list|(
name|name
argument_list|,
literal|"string"
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setObjectProperty
argument_list|(
name|name
argument_list|,
name|Byte
operator|.
name|valueOf
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setObjectProperty
argument_list|(
name|name
argument_list|,
name|Short
operator|.
name|valueOf
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setObjectProperty
argument_list|(
name|name
argument_list|,
name|Integer
operator|.
name|valueOf
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setObjectProperty
argument_list|(
name|name
argument_list|,
name|Long
operator|.
name|valueOf
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setObjectProperty
argument_list|(
name|name
argument_list|,
name|Float
operator|.
name|valueOf
argument_list|(
literal|"1.1f"
argument_list|)
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setObjectProperty
argument_list|(
name|name
argument_list|,
name|Double
operator|.
name|valueOf
argument_list|(
literal|"1.1"
argument_list|)
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setObjectProperty
argument_list|(
name|name
argument_list|,
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setObjectProperty
argument_list|(
name|name
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{
name|fail
argument_list|(
literal|"should accept object primitives and String"
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|msg
operator|.
name|setObjectProperty
argument_list|(
name|name
argument_list|,
operator|new
name|byte
index|[
literal|5
index|]
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"should accept only object primitives and String"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|setObjectProperty
argument_list|(
name|name
argument_list|,
operator|new
name|Object
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"should accept only object primitives and String"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
block|}
specifier|public
name|void
name|testConvertProperties
parameter_list|()
throws|throws
name|Exception
block|{
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|Message
name|msg
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|Message
argument_list|()
block|{
specifier|public
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|Message
name|copy
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|beforeMarshall
parameter_list|(
name|WireFormat
name|wireFormat
parameter_list|)
throws|throws
name|IOException
block|{
name|super
operator|.
name|beforeMarshall
argument_list|(
name|wireFormat
argument_list|)
expr_stmt|;
block|}
specifier|public
name|byte
name|getDataStructureType
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
specifier|public
name|Response
name|visit
parameter_list|(
name|CommandVisitor
name|visitor
parameter_list|)
throws|throws
name|Exception
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|clearBody
parameter_list|()
throws|throws
name|JMSException
block|{                             }
block|}
decl_stmt|;
name|msg
operator|.
name|setProperty
argument_list|(
literal|"stringProperty"
argument_list|,
literal|"string"
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setProperty
argument_list|(
literal|"byteProperty"
argument_list|,
name|Byte
operator|.
name|valueOf
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setProperty
argument_list|(
literal|"shortProperty"
argument_list|,
name|Short
operator|.
name|valueOf
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setProperty
argument_list|(
literal|"intProperty"
argument_list|,
name|Integer
operator|.
name|valueOf
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setProperty
argument_list|(
literal|"longProperty"
argument_list|,
name|Long
operator|.
name|valueOf
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setProperty
argument_list|(
literal|"floatProperty"
argument_list|,
name|Float
operator|.
name|valueOf
argument_list|(
literal|"1.1f"
argument_list|)
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setProperty
argument_list|(
literal|"doubleProperty"
argument_list|,
name|Double
operator|.
name|valueOf
argument_list|(
literal|"1.1"
argument_list|)
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setProperty
argument_list|(
literal|"booleanProperty"
argument_list|,
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setProperty
argument_list|(
literal|"nullProperty"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|msg
operator|.
name|beforeMarshall
argument_list|(
operator|new
name|OpenWireFormat
argument_list|()
argument_list|)
expr_stmt|;
name|Map
name|properties
init|=
name|msg
operator|.
name|getProperties
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|properties
operator|.
name|get
argument_list|(
literal|"stringProperty"
argument_list|)
argument_list|,
literal|"string"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|(
operator|(
name|Byte
operator|)
name|properties
operator|.
name|get
argument_list|(
literal|"byteProperty"
argument_list|)
operator|)
operator|.
name|byteValue
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|(
operator|(
name|Short
operator|)
name|properties
operator|.
name|get
argument_list|(
literal|"shortProperty"
argument_list|)
operator|)
operator|.
name|shortValue
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|(
operator|(
name|Integer
operator|)
name|properties
operator|.
name|get
argument_list|(
literal|"intProperty"
argument_list|)
operator|)
operator|.
name|intValue
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|(
operator|(
name|Long
operator|)
name|properties
operator|.
name|get
argument_list|(
literal|"longProperty"
argument_list|)
operator|)
operator|.
name|longValue
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|(
operator|(
name|Float
operator|)
name|properties
operator|.
name|get
argument_list|(
literal|"floatProperty"
argument_list|)
operator|)
operator|.
name|floatValue
argument_list|()
argument_list|,
literal|1.1f
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|(
operator|(
name|Double
operator|)
name|properties
operator|.
name|get
argument_list|(
literal|"doubleProperty"
argument_list|)
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
literal|1.1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|(
operator|(
name|Boolean
operator|)
name|properties
operator|.
name|get
argument_list|(
literal|"booleanProperty"
argument_list|)
operator|)
operator|.
name|booleanValue
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|properties
operator|.
name|get
argument_list|(
literal|"nullProperty"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSetNullProperty
parameter_list|()
throws|throws
name|JMSException
block|{
name|Message
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|String
name|name
init|=
literal|"cheese"
decl_stmt|;
name|msg
operator|.
name|setStringProperty
argument_list|(
name|name
argument_list|,
literal|"Cheddar"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Cheddar"
argument_list|,
name|msg
operator|.
name|getStringProperty
argument_list|(
name|name
argument_list|)
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setStringProperty
argument_list|(
name|name
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|msg
operator|.
name|getStringProperty
argument_list|(
name|name
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSetNullPropertyName
parameter_list|()
throws|throws
name|JMSException
block|{
name|Message
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
try|try
block|{
name|msg
operator|.
name|setStringProperty
argument_list|(
literal|null
argument_list|,
literal|"Cheese"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Worked, caught: "
operator|+
name|e
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testSetEmptyPropertyName
parameter_list|()
throws|throws
name|JMSException
block|{
name|Message
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
try|try
block|{
name|msg
operator|.
name|setStringProperty
argument_list|(
literal|""
argument_list|,
literal|"Cheese"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Worked, caught: "
operator|+
name|e
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testGetAndSetJMSXDeliveryCount
parameter_list|()
throws|throws
name|JMSException
block|{
name|Message
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|msg
operator|.
name|setIntProperty
argument_list|(
literal|"JMSXDeliveryCount"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|int
name|count
init|=
name|msg
operator|.
name|getIntProperty
argument_list|(
literal|"JMSXDeliveryCount"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"expected delivery count = 1 - got: "
operator|+
name|count
argument_list|,
name|count
operator|==
literal|1
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testClearBody
parameter_list|()
throws|throws
name|JMSException
block|{
name|ActiveMQBytesMessage
name|message
init|=
operator|new
name|ActiveMQBytesMessage
argument_list|()
decl_stmt|;
name|message
operator|.
name|clearBody
argument_list|()
expr_stmt|;
name|assertFalse
argument_list|(
name|message
operator|.
name|isReadOnlyBody
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|message
operator|.
name|getContent
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testBooleanPropertyConversion
parameter_list|()
throws|throws
name|JMSException
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|String
name|propertyName
init|=
literal|"property"
decl_stmt|;
name|msg
operator|.
name|setBooleanProperty
argument_list|(
name|propertyName
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|(
operator|(
name|Boolean
operator|)
name|msg
operator|.
name|getObjectProperty
argument_list|(
name|propertyName
argument_list|)
operator|)
operator|.
name|booleanValue
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|msg
operator|.
name|getBooleanProperty
argument_list|(
name|propertyName
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
operator|.
name|getStringProperty
argument_list|(
name|propertyName
argument_list|)
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
try|try
block|{
name|msg
operator|.
name|getByteProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getShortProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getIntProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getLongProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getFloatProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getDoubleProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
block|}
specifier|public
name|void
name|testBytePropertyConversion
parameter_list|()
throws|throws
name|JMSException
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|String
name|propertyName
init|=
literal|"property"
decl_stmt|;
name|msg
operator|.
name|setByteProperty
argument_list|(
name|propertyName
argument_list|,
operator|(
name|byte
operator|)
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|(
operator|(
name|Byte
operator|)
name|msg
operator|.
name|getObjectProperty
argument_list|(
name|propertyName
argument_list|)
operator|)
operator|.
name|byteValue
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
operator|.
name|getByteProperty
argument_list|(
name|propertyName
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
operator|.
name|getShortProperty
argument_list|(
name|propertyName
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
operator|.
name|getIntProperty
argument_list|(
name|propertyName
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
operator|.
name|getLongProperty
argument_list|(
name|propertyName
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
operator|.
name|getStringProperty
argument_list|(
name|propertyName
argument_list|)
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
try|try
block|{
name|msg
operator|.
name|getBooleanProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getFloatProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getDoubleProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
block|}
specifier|public
name|void
name|testShortPropertyConversion
parameter_list|()
throws|throws
name|JMSException
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|String
name|propertyName
init|=
literal|"property"
decl_stmt|;
name|msg
operator|.
name|setShortProperty
argument_list|(
name|propertyName
argument_list|,
operator|(
name|short
operator|)
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|(
operator|(
name|Short
operator|)
name|msg
operator|.
name|getObjectProperty
argument_list|(
name|propertyName
argument_list|)
operator|)
operator|.
name|shortValue
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
operator|.
name|getShortProperty
argument_list|(
name|propertyName
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
operator|.
name|getIntProperty
argument_list|(
name|propertyName
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
operator|.
name|getLongProperty
argument_list|(
name|propertyName
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
operator|.
name|getStringProperty
argument_list|(
name|propertyName
argument_list|)
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
try|try
block|{
name|msg
operator|.
name|getBooleanProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getByteProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getFloatProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getDoubleProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
block|}
specifier|public
name|void
name|testIntPropertyConversion
parameter_list|()
throws|throws
name|JMSException
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|String
name|propertyName
init|=
literal|"property"
decl_stmt|;
name|msg
operator|.
name|setIntProperty
argument_list|(
name|propertyName
argument_list|,
operator|(
name|int
operator|)
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|(
operator|(
name|Integer
operator|)
name|msg
operator|.
name|getObjectProperty
argument_list|(
name|propertyName
argument_list|)
operator|)
operator|.
name|intValue
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
operator|.
name|getIntProperty
argument_list|(
name|propertyName
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
operator|.
name|getLongProperty
argument_list|(
name|propertyName
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
operator|.
name|getStringProperty
argument_list|(
name|propertyName
argument_list|)
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
try|try
block|{
name|msg
operator|.
name|getBooleanProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getByteProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getShortProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getFloatProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getDoubleProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
block|}
specifier|public
name|void
name|testLongPropertyConversion
parameter_list|()
throws|throws
name|JMSException
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|String
name|propertyName
init|=
literal|"property"
decl_stmt|;
name|msg
operator|.
name|setLongProperty
argument_list|(
name|propertyName
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|(
operator|(
name|Long
operator|)
name|msg
operator|.
name|getObjectProperty
argument_list|(
name|propertyName
argument_list|)
operator|)
operator|.
name|longValue
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
operator|.
name|getLongProperty
argument_list|(
name|propertyName
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
operator|.
name|getStringProperty
argument_list|(
name|propertyName
argument_list|)
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
try|try
block|{
name|msg
operator|.
name|getBooleanProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getByteProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getShortProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getIntProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getFloatProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getDoubleProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
block|}
specifier|public
name|void
name|testFloatPropertyConversion
parameter_list|()
throws|throws
name|JMSException
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|String
name|propertyName
init|=
literal|"property"
decl_stmt|;
name|msg
operator|.
name|setFloatProperty
argument_list|(
name|propertyName
argument_list|,
operator|(
name|float
operator|)
literal|1.5
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|(
operator|(
name|Float
operator|)
name|msg
operator|.
name|getObjectProperty
argument_list|(
name|propertyName
argument_list|)
operator|)
operator|.
name|floatValue
argument_list|()
argument_list|,
literal|1.5
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
operator|.
name|getFloatProperty
argument_list|(
name|propertyName
argument_list|)
argument_list|,
literal|1.5
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
operator|.
name|getDoubleProperty
argument_list|(
name|propertyName
argument_list|)
argument_list|,
literal|1.5
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
operator|.
name|getStringProperty
argument_list|(
name|propertyName
argument_list|)
argument_list|,
literal|"1.5"
argument_list|)
expr_stmt|;
try|try
block|{
name|msg
operator|.
name|getBooleanProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getByteProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getShortProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getIntProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getLongProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
block|}
specifier|public
name|void
name|testDoublePropertyConversion
parameter_list|()
throws|throws
name|JMSException
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|String
name|propertyName
init|=
literal|"property"
decl_stmt|;
name|msg
operator|.
name|setDoubleProperty
argument_list|(
name|propertyName
argument_list|,
literal|1.5
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|(
operator|(
name|Double
operator|)
name|msg
operator|.
name|getObjectProperty
argument_list|(
name|propertyName
argument_list|)
operator|)
operator|.
name|doubleValue
argument_list|()
argument_list|,
literal|1.5
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
operator|.
name|getDoubleProperty
argument_list|(
name|propertyName
argument_list|)
argument_list|,
literal|1.5
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
operator|.
name|getStringProperty
argument_list|(
name|propertyName
argument_list|)
argument_list|,
literal|"1.5"
argument_list|)
expr_stmt|;
try|try
block|{
name|msg
operator|.
name|getBooleanProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getByteProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getShortProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getIntProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getLongProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getFloatProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
block|}
specifier|public
name|void
name|testStringPropertyConversion
parameter_list|()
throws|throws
name|JMSException
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|String
name|propertyName
init|=
literal|"property"
decl_stmt|;
name|String
name|stringValue
init|=
literal|"true"
decl_stmt|;
name|msg
operator|.
name|setStringProperty
argument_list|(
name|propertyName
argument_list|,
name|stringValue
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
operator|.
name|getStringProperty
argument_list|(
name|propertyName
argument_list|)
argument_list|,
name|stringValue
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|(
name|String
operator|)
name|msg
operator|.
name|getObjectProperty
argument_list|(
name|propertyName
argument_list|)
argument_list|,
name|stringValue
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
operator|.
name|getBooleanProperty
argument_list|(
name|propertyName
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|stringValue
operator|=
literal|"1"
expr_stmt|;
name|msg
operator|.
name|setStringProperty
argument_list|(
name|propertyName
argument_list|,
name|stringValue
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
operator|.
name|getByteProperty
argument_list|(
name|propertyName
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
operator|.
name|getShortProperty
argument_list|(
name|propertyName
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
operator|.
name|getIntProperty
argument_list|(
name|propertyName
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
operator|.
name|getLongProperty
argument_list|(
name|propertyName
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|stringValue
operator|=
literal|"1.5"
expr_stmt|;
name|msg
operator|.
name|setStringProperty
argument_list|(
name|propertyName
argument_list|,
name|stringValue
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
operator|.
name|getFloatProperty
argument_list|(
name|propertyName
argument_list|)
argument_list|,
literal|1.5
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|msg
operator|.
name|getDoubleProperty
argument_list|(
name|propertyName
argument_list|)
argument_list|,
literal|1.5
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|stringValue
operator|=
literal|"bad"
expr_stmt|;
name|msg
operator|.
name|setStringProperty
argument_list|(
name|propertyName
argument_list|,
name|stringValue
argument_list|)
expr_stmt|;
try|try
block|{
name|msg
operator|.
name|getByteProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NumberFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getShortProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NumberFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getIntProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NumberFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getLongProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NumberFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getFloatProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NumberFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getDoubleProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NumberFormatException
name|e
parameter_list|)
block|{         }
name|assertFalse
argument_list|(
name|msg
operator|.
name|getBooleanProperty
argument_list|(
name|propertyName
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testObjectPropertyConversion
parameter_list|()
throws|throws
name|JMSException
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|String
name|propertyName
init|=
literal|"property"
decl_stmt|;
name|Object
name|obj
init|=
operator|new
name|Object
argument_list|()
decl_stmt|;
try|try
block|{
operator|(
operator|(
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|Message
operator|)
name|msg
operator|)
operator|.
name|setProperty
argument_list|(
name|propertyName
argument_list|,
name|obj
argument_list|)
expr_stmt|;
comment|// bypass
comment|// object
comment|// check
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getStringProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getBooleanProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getByteProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getShortProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getIntProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getLongProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getFloatProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|getDoubleProperty
argument_list|(
name|propertyName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageFormatException
name|e
parameter_list|)
block|{         }
block|}
specifier|public
name|void
name|testReadOnlyProperties
parameter_list|()
throws|throws
name|JMSException
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|String
name|propertyName
init|=
literal|"property"
decl_stmt|;
name|msg
operator|.
name|setReadOnlyProperties
argument_list|(
literal|true
argument_list|)
expr_stmt|;
try|try
block|{
name|msg
operator|.
name|setObjectProperty
argument_list|(
name|propertyName
argument_list|,
operator|new
name|Object
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageNotWriteableException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|setStringProperty
argument_list|(
name|propertyName
argument_list|,
literal|"test"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageNotWriteableException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|setBooleanProperty
argument_list|(
name|propertyName
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageNotWriteableException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|setByteProperty
argument_list|(
name|propertyName
argument_list|,
operator|(
name|byte
operator|)
literal|1
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageNotWriteableException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|setShortProperty
argument_list|(
name|propertyName
argument_list|,
operator|(
name|short
operator|)
literal|1
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageNotWriteableException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|setIntProperty
argument_list|(
name|propertyName
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageNotWriteableException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|setLongProperty
argument_list|(
name|propertyName
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageNotWriteableException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|setFloatProperty
argument_list|(
name|propertyName
argument_list|,
operator|(
name|float
operator|)
literal|1.5
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageNotWriteableException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|msg
operator|.
name|setDoubleProperty
argument_list|(
name|propertyName
argument_list|,
literal|1.5
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessageNotWriteableException
name|e
parameter_list|)
block|{         }
block|}
specifier|public
name|void
name|testIsExpired
parameter_list|()
block|{
name|ActiveMQMessage
name|msg
init|=
operator|new
name|ActiveMQMessage
argument_list|()
decl_stmt|;
name|msg
operator|.
name|setJMSExpiration
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|msg
operator|.
name|isExpired
argument_list|()
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setJMSExpiration
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|+
literal|10000
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|msg
operator|.
name|isExpired
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

