begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Copyright 2004 The Apache Software Foundation  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|activecluster
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Timer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|ConnectionFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|DeliveryMode
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Destination
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|JMSException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageProducer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Topic
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activecluster
operator|.
name|Cluster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activecluster
operator|.
name|ClusterException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activecluster
operator|.
name|ClusterFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activecluster
operator|.
name|DestinationMarshaller
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activemq
operator|.
name|util
operator|.
name|IdGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_comment
comment|/**  * A Factory of DefaultCluster instances  *  * @version $Revision: 1.4 $  */
end_comment

begin_class
specifier|public
class|class
name|DefaultClusterFactory
implements|implements
name|ClusterFactory
block|{
specifier|private
specifier|final
specifier|static
name|Log
name|log
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|DefaultClusterFactory
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|ConnectionFactory
name|connectionFactory
decl_stmt|;
specifier|private
name|boolean
name|transacted
decl_stmt|;
specifier|private
name|int
name|acknowledgeMode
decl_stmt|;
specifier|private
name|String
name|dataTopicPrefix
decl_stmt|;
specifier|private
name|long
name|inactiveTime
decl_stmt|;
specifier|private
name|boolean
name|useQueueForInbox
init|=
literal|false
decl_stmt|;
specifier|private
name|int
name|deliveryMode
init|=
name|DeliveryMode
operator|.
name|NON_PERSISTENT
decl_stmt|;
specifier|private
name|IdGenerator
name|idGenerator
init|=
operator|new
name|IdGenerator
argument_list|()
decl_stmt|;
specifier|public
name|DefaultClusterFactory
parameter_list|(
name|ConnectionFactory
name|connectionFactory
parameter_list|,
name|boolean
name|transacted
parameter_list|,
name|int
name|acknowledgeMode
parameter_list|,
name|String
name|dataTopicPrefix
parameter_list|,
name|long
name|inactiveTime
parameter_list|)
block|{
name|this
operator|.
name|connectionFactory
operator|=
name|connectionFactory
expr_stmt|;
name|this
operator|.
name|transacted
operator|=
name|transacted
expr_stmt|;
name|this
operator|.
name|acknowledgeMode
operator|=
name|acknowledgeMode
expr_stmt|;
name|this
operator|.
name|dataTopicPrefix
operator|=
name|dataTopicPrefix
expr_stmt|;
name|this
operator|.
name|inactiveTime
operator|=
name|inactiveTime
expr_stmt|;
block|}
specifier|public
name|DefaultClusterFactory
parameter_list|(
name|ConnectionFactory
name|connectionFactory
parameter_list|)
block|{
name|this
argument_list|(
name|connectionFactory
argument_list|,
literal|false
argument_list|,
name|Session
operator|.
name|AUTO_ACKNOWLEDGE
argument_list|,
literal|"ACTIVECLUSTER.DATA."
argument_list|,
literal|6000L
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Cluster
name|createCluster
parameter_list|(
name|Destination
name|groupDestination
parameter_list|)
throws|throws
name|JMSException
block|{
return|return
name|createCluster
argument_list|(
name|idGenerator
operator|.
name|generateId
argument_list|()
argument_list|,
name|groupDestination
argument_list|)
return|;
block|}
specifier|public
name|Cluster
name|createCluster
parameter_list|(
name|String
name|name
parameter_list|,
name|Destination
name|groupDestination
parameter_list|)
throws|throws
name|JMSException
block|{
name|Connection
name|connection
init|=
name|getConnectionFactory
argument_list|()
operator|.
name|createConnection
argument_list|()
decl_stmt|;
name|Session
name|session
init|=
name|createSession
argument_list|(
name|connection
argument_list|)
decl_stmt|;
return|return
name|createCluster
argument_list|(
name|connection
argument_list|,
name|session
argument_list|,
name|name
argument_list|,
name|groupDestination
argument_list|,
operator|new
name|DefaultDestinationMarshaller
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|Cluster
name|createCluster
parameter_list|(
name|String
name|name
parameter_list|,
name|Destination
name|groupDestination
parameter_list|,
name|DestinationMarshaller
name|marshaller
parameter_list|)
throws|throws
name|JMSException
block|{
name|Connection
name|connection
init|=
name|getConnectionFactory
argument_list|()
operator|.
name|createConnection
argument_list|()
decl_stmt|;
name|Session
name|session
init|=
name|createSession
argument_list|(
name|connection
argument_list|)
decl_stmt|;
return|return
name|createCluster
argument_list|(
name|connection
argument_list|,
name|session
argument_list|,
name|name
argument_list|,
name|groupDestination
argument_list|,
name|marshaller
argument_list|)
return|;
block|}
specifier|public
name|Cluster
name|createCluster
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|groupDestinationName
parameter_list|)
throws|throws
name|JMSException
block|{
name|Connection
name|connection
init|=
name|getConnectionFactory
argument_list|()
operator|.
name|createConnection
argument_list|()
decl_stmt|;
name|Session
name|session
init|=
name|createSession
argument_list|(
name|connection
argument_list|)
decl_stmt|;
return|return
name|createCluster
argument_list|(
name|connection
argument_list|,
name|session
argument_list|,
name|name
argument_list|,
name|session
operator|.
name|createTopic
argument_list|(
name|groupDestinationName
argument_list|)
argument_list|,
operator|new
name|DefaultDestinationMarshaller
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|Cluster
name|createCluster
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|groupDestinationName
parameter_list|,
name|DestinationMarshaller
name|marshaller
parameter_list|)
throws|throws
name|JMSException
block|{
name|Connection
name|connection
init|=
name|getConnectionFactory
argument_list|()
operator|.
name|createConnection
argument_list|()
decl_stmt|;
name|Session
name|session
init|=
name|createSession
argument_list|(
name|connection
argument_list|)
decl_stmt|;
return|return
name|createCluster
argument_list|(
name|connection
argument_list|,
name|session
argument_list|,
name|name
argument_list|,
name|session
operator|.
name|createTopic
argument_list|(
name|groupDestinationName
argument_list|)
argument_list|,
name|marshaller
argument_list|)
return|;
block|}
specifier|public
name|Cluster
name|createCluster
parameter_list|(
name|String
name|groupDestinationName
parameter_list|)
throws|throws
name|JMSException
block|{
return|return
name|createCluster
argument_list|(
name|idGenerator
operator|.
name|generateId
argument_list|()
argument_list|,
name|groupDestinationName
argument_list|)
return|;
block|}
comment|// Properties
comment|//-------------------------------------------------------------------------
specifier|public
name|String
name|getDataTopicPrefix
parameter_list|()
block|{
return|return
name|dataTopicPrefix
return|;
block|}
specifier|public
name|void
name|setDataTopicPrefix
parameter_list|(
name|String
name|dataTopicPrefix
parameter_list|)
block|{
name|this
operator|.
name|dataTopicPrefix
operator|=
name|dataTopicPrefix
expr_stmt|;
block|}
specifier|public
name|int
name|getAcknowledgeMode
parameter_list|()
block|{
return|return
name|acknowledgeMode
return|;
block|}
specifier|public
name|void
name|setAcknowledgeMode
parameter_list|(
name|int
name|acknowledgeMode
parameter_list|)
block|{
name|this
operator|.
name|acknowledgeMode
operator|=
name|acknowledgeMode
expr_stmt|;
block|}
specifier|public
name|long
name|getInactiveTime
parameter_list|()
block|{
return|return
name|inactiveTime
return|;
block|}
specifier|public
name|void
name|setInactiveTime
parameter_list|(
name|long
name|inactiveTime
parameter_list|)
block|{
name|this
operator|.
name|inactiveTime
operator|=
name|inactiveTime
expr_stmt|;
block|}
specifier|public
name|boolean
name|isTransacted
parameter_list|()
block|{
return|return
name|transacted
return|;
block|}
specifier|public
name|void
name|setTransacted
parameter_list|(
name|boolean
name|transacted
parameter_list|)
block|{
name|this
operator|.
name|transacted
operator|=
name|transacted
expr_stmt|;
block|}
specifier|public
name|boolean
name|isUseQueueForInbox
parameter_list|()
block|{
return|return
name|useQueueForInbox
return|;
block|}
specifier|public
name|void
name|setUseQueueForInbox
parameter_list|(
name|boolean
name|useQueueForInbox
parameter_list|)
block|{
name|this
operator|.
name|useQueueForInbox
operator|=
name|useQueueForInbox
expr_stmt|;
block|}
specifier|public
name|ConnectionFactory
name|getConnectionFactory
parameter_list|()
block|{
return|return
name|connectionFactory
return|;
block|}
specifier|public
name|void
name|setConnectionFactory
parameter_list|(
name|ConnectionFactory
name|connectionFactory
parameter_list|)
block|{
name|this
operator|.
name|connectionFactory
operator|=
name|connectionFactory
expr_stmt|;
block|}
specifier|public
name|int
name|getDeliveryMode
parameter_list|()
block|{
return|return
name|deliveryMode
return|;
block|}
comment|/**      * Sets the delivery mode of the group based producer      */
specifier|public
name|void
name|setDeliveryMode
parameter_list|(
name|int
name|deliveryMode
parameter_list|)
block|{
name|this
operator|.
name|deliveryMode
operator|=
name|deliveryMode
expr_stmt|;
block|}
comment|// Implementation methods
comment|//-------------------------------------------------------------------------
specifier|protected
name|Cluster
name|createCluster
parameter_list|(
name|Connection
name|connection
parameter_list|,
name|Session
name|session
parameter_list|,
name|String
name|name
parameter_list|,
name|Destination
name|groupDestination
parameter_list|,
name|DestinationMarshaller
name|marshaller
parameter_list|)
throws|throws
name|JMSException
block|{
name|String
name|dataDestination
init|=
name|dataTopicPrefix
operator|+
name|groupDestination
decl_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"Creating cluster group producer on topic: "
operator|+
name|groupDestination
argument_list|)
expr_stmt|;
name|MessageProducer
name|producer
init|=
name|createProducer
argument_list|(
name|session
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|producer
operator|.
name|setDeliveryMode
argument_list|(
name|deliveryMode
argument_list|)
expr_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"Creating cluster data producer on data destination: "
operator|+
name|dataDestination
argument_list|)
expr_stmt|;
name|Topic
name|dataTopic
init|=
name|session
operator|.
name|createTopic
argument_list|(
name|dataDestination
argument_list|)
decl_stmt|;
name|MessageProducer
name|keepAliveProducer
init|=
name|session
operator|.
name|createProducer
argument_list|(
name|dataTopic
argument_list|)
decl_stmt|;
name|keepAliveProducer
operator|.
name|setDeliveryMode
argument_list|(
name|DeliveryMode
operator|.
name|NON_PERSISTENT
argument_list|)
expr_stmt|;
name|StateService
name|serviceStub
init|=
operator|new
name|StateServiceStub
argument_list|(
name|session
argument_list|,
name|keepAliveProducer
argument_list|,
name|marshaller
argument_list|)
decl_stmt|;
name|Destination
name|localInboxDestination
init|=
name|session
operator|.
name|createTopic
argument_list|(
name|dataDestination
operator|+
literal|"."
operator|+
name|name
argument_list|)
decl_stmt|;
name|ReplicatedLocalNode
name|localNode
init|=
operator|new
name|ReplicatedLocalNode
argument_list|(
name|name
argument_list|,
name|localInboxDestination
argument_list|,
name|serviceStub
argument_list|)
decl_stmt|;
name|Timer
name|timer
init|=
operator|new
name|Timer
argument_list|()
decl_stmt|;
name|DefaultCluster
name|answer
init|=
operator|new
name|DefaultCluster
argument_list|(
name|localNode
argument_list|,
name|dataTopic
argument_list|,
name|groupDestination
argument_list|,
name|marshaller
argument_list|,
name|connection
argument_list|,
name|session
argument_list|,
name|producer
argument_list|,
name|timer
argument_list|,
name|inactiveTime
argument_list|)
decl_stmt|;
return|return
name|answer
return|;
block|}
comment|/*      * protected Cluster createInternalCluster(Session session, Topic dataDestination) { MessageProducer producer =      * createProducer(session); return new DefaultCluster(new NonReplicatedLocalNode(), dataDestination, connection,      * session, producer); }      */
specifier|protected
name|MessageProducer
name|createProducer
parameter_list|(
name|Session
name|session
parameter_list|,
name|Topic
name|groupDestination
parameter_list|)
throws|throws
name|JMSException
block|{
return|return
name|session
operator|.
name|createProducer
argument_list|(
name|groupDestination
argument_list|)
return|;
block|}
specifier|protected
name|Session
name|createSession
parameter_list|(
name|Connection
name|connection
parameter_list|)
throws|throws
name|JMSException
block|{
return|return
name|connection
operator|.
name|createSession
argument_list|(
name|transacted
argument_list|,
name|acknowledgeMode
argument_list|)
return|;
block|}
block|}
end_class

end_unit

