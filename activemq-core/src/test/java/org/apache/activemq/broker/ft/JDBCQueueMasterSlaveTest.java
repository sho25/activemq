begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|ft
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|jdbc
operator|.
name|DataSourceSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|jdbc
operator|.
name|JDBCPersistenceAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|derby
operator|.
name|jdbc
operator|.
name|EmbeddedDataSource
import|;
end_import

begin_class
specifier|public
class|class
name|JDBCQueueMasterSlaveTest
extends|extends
name|QueueMasterSlaveTest
block|{
specifier|protected
name|EmbeddedDataSource
name|sharedDs
decl_stmt|;
specifier|protected
name|String
name|MASTER_URL
init|=
literal|"tcp://localhost:62001"
decl_stmt|;
specifier|protected
name|String
name|SLAVE_URL
init|=
literal|"tcp://localhost:62002"
decl_stmt|;
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
comment|// startup db
name|sharedDs
operator|=
operator|(
name|EmbeddedDataSource
operator|)
operator|new
name|DataSourceSupport
argument_list|()
operator|.
name|getDataSource
argument_list|()
expr_stmt|;
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|createMaster
parameter_list|()
throws|throws
name|Exception
block|{
name|master
operator|=
operator|new
name|BrokerService
argument_list|()
expr_stmt|;
name|master
operator|.
name|addConnector
argument_list|(
name|MASTER_URL
argument_list|)
expr_stmt|;
name|master
operator|.
name|setUseJmx
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|master
operator|.
name|setPersistent
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|master
operator|.
name|setDeleteAllMessagesOnStartup
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|JDBCPersistenceAdapter
name|persistenceAdapter
init|=
operator|new
name|JDBCPersistenceAdapter
argument_list|()
decl_stmt|;
name|persistenceAdapter
operator|.
name|setDataSource
argument_list|(
name|getExistingDataSource
argument_list|()
argument_list|)
expr_stmt|;
name|persistenceAdapter
operator|.
name|setLockKeepAlivePeriod
argument_list|(
literal|500
argument_list|)
expr_stmt|;
name|persistenceAdapter
operator|.
name|setLockAcquireSleepInterval
argument_list|(
literal|500
argument_list|)
expr_stmt|;
name|master
operator|.
name|setPersistenceAdapter
argument_list|(
name|persistenceAdapter
argument_list|)
expr_stmt|;
name|master
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|createSlave
parameter_list|()
throws|throws
name|Exception
block|{
comment|// use a separate thread as the slave will block waiting for
comment|// the exclusive db lock
name|Thread
name|t
init|=
operator|new
name|Thread
argument_list|()
block|{
specifier|public
name|void
name|run
parameter_list|()
block|{
try|try
block|{
name|BrokerService
name|broker
init|=
operator|new
name|BrokerService
argument_list|()
decl_stmt|;
name|broker
operator|.
name|addConnector
argument_list|(
name|SLAVE_URL
argument_list|)
expr_stmt|;
comment|// no need for broker.setMasterConnectorURI(masterConnectorURI)
comment|// as the db lock provides the slave/master initialisation
name|broker
operator|.
name|setUseJmx
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|broker
operator|.
name|setPersistent
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|JDBCPersistenceAdapter
name|persistenceAdapter
init|=
operator|new
name|JDBCPersistenceAdapter
argument_list|()
decl_stmt|;
name|persistenceAdapter
operator|.
name|setDataSource
argument_list|(
name|getExistingDataSource
argument_list|()
argument_list|)
expr_stmt|;
name|persistenceAdapter
operator|.
name|setCreateTablesOnStartup
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|broker
operator|.
name|setPersistenceAdapter
argument_list|(
name|persistenceAdapter
argument_list|)
expr_stmt|;
name|broker
operator|.
name|start
argument_list|()
expr_stmt|;
name|slave
operator|.
name|set
argument_list|(
name|broker
argument_list|)
expr_stmt|;
name|slaveStarted
operator|.
name|countDown
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|fail
argument_list|(
literal|"failed to start slave broker, reason:"
operator|+
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
decl_stmt|;
name|t
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|EmbeddedDataSource
name|getExistingDataSource
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|sharedDs
return|;
block|}
block|}
end_class

end_unit

