begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|plugin
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|CompositeDestinationInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|DestinationInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|RegionBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|virtual
operator|.
name|CompositeQueue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|virtual
operator|.
name|CompositeTopic
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|virtual
operator|.
name|VirtualDestination
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|virtual
operator|.
name|VirtualDestinationInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|region
operator|.
name|virtual
operator|.
name|VirtualTopic
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|schema
operator|.
name|core
operator|.
name|DtoCompositeQueue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|schema
operator|.
name|core
operator|.
name|DtoCompositeTopic
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|schema
operator|.
name|core
operator|.
name|DtoVirtualDestinationInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|schema
operator|.
name|core
operator|.
name|DtoVirtualTopic
import|;
end_import

begin_class
specifier|public
class|class
name|VirtualDestinationInterceptorProcessor
extends|extends
name|DefaultConfigurationProcessor
block|{
specifier|public
name|VirtualDestinationInterceptorProcessor
parameter_list|(
name|RuntimeConfigurationBroker
name|plugin
parameter_list|,
name|Class
name|configurationClass
parameter_list|)
block|{
name|super
argument_list|(
name|plugin
argument_list|,
name|configurationClass
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|addNew
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
specifier|final
name|DtoVirtualDestinationInterceptor
name|dto
init|=
operator|(
name|DtoVirtualDestinationInterceptor
operator|)
name|o
decl_stmt|;
name|plugin
operator|.
name|addDestinationWork
operator|.
name|add
argument_list|(
operator|new
name|UpdateVirtualDestinationsTask
argument_list|(
name|plugin
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|VirtualDestination
index|[]
name|getVirtualDestinations
parameter_list|()
block|{
return|return
name|fromDto
argument_list|(
name|dto
argument_list|)
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|remove
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
comment|// whack it
name|plugin
operator|.
name|addDestinationWork
operator|.
name|add
argument_list|(
operator|new
name|Runnable
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
name|List
argument_list|<
name|DestinationInterceptor
argument_list|>
name|interceptorsList
init|=
operator|new
name|ArrayList
argument_list|<
name|DestinationInterceptor
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|DestinationInterceptor
name|candidate
range|:
name|plugin
operator|.
name|getBrokerService
argument_list|()
operator|.
name|getDestinationInterceptors
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
operator|(
name|candidate
operator|instanceof
name|VirtualDestinationInterceptor
operator|)
condition|)
block|{
name|interceptorsList
operator|.
name|add
argument_list|(
name|candidate
argument_list|)
expr_stmt|;
block|}
block|}
name|DestinationInterceptor
index|[]
name|destinationInterceptors
init|=
name|interceptorsList
operator|.
name|toArray
argument_list|(
operator|new
name|DestinationInterceptor
index|[]
block|{}
argument_list|)
decl_stmt|;
name|plugin
operator|.
name|getBrokerService
argument_list|()
operator|.
name|setDestinationInterceptors
argument_list|(
name|destinationInterceptors
argument_list|)
expr_stmt|;
operator|(
call|(
name|CompositeDestinationInterceptor
call|)
argument_list|(
operator|(
name|RegionBroker
operator|)
name|plugin
operator|.
name|getBrokerService
argument_list|()
operator|.
name|getRegionBroker
argument_list|()
argument_list|)
operator|.
name|getDestinationInterceptor
argument_list|()
operator|)
operator|.
name|setInterceptors
argument_list|(
name|destinationInterceptors
argument_list|)
expr_stmt|;
name|plugin
operator|.
name|info
argument_list|(
literal|"removed VirtualDestinationInterceptor from: "
operator|+
name|interceptorsList
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|private
name|VirtualDestination
index|[]
name|fromDto
parameter_list|(
name|DtoVirtualDestinationInterceptor
name|virtualDestinationInterceptor
parameter_list|)
block|{
name|List
argument_list|<
name|VirtualDestination
argument_list|>
name|answer
init|=
operator|new
name|ArrayList
argument_list|<
name|VirtualDestination
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Object
name|vd
range|:
name|filter
argument_list|(
name|virtualDestinationInterceptor
argument_list|,
name|DtoVirtualDestinationInterceptor
operator|.
name|VirtualDestinations
operator|.
name|class
argument_list|)
control|)
block|{
for|for
control|(
name|Object
name|vt
range|:
name|filter
argument_list|(
name|vd
argument_list|,
name|DtoVirtualTopic
operator|.
name|class
argument_list|)
control|)
block|{
name|answer
operator|.
name|add
argument_list|(
name|fromDto
argument_list|(
name|vt
argument_list|,
operator|new
name|VirtualTopic
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|Object
name|vt
range|:
name|filter
argument_list|(
name|vd
argument_list|,
name|DtoCompositeTopic
operator|.
name|class
argument_list|)
control|)
block|{
name|answer
operator|.
name|add
argument_list|(
name|fromDto
argument_list|(
name|vt
argument_list|,
operator|new
name|CompositeTopic
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|Object
name|vt
range|:
name|filter
argument_list|(
name|vd
argument_list|,
name|DtoCompositeQueue
operator|.
name|class
argument_list|)
control|)
block|{
name|answer
operator|.
name|add
argument_list|(
name|fromDto
argument_list|(
name|vt
argument_list|,
operator|new
name|CompositeQueue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|VirtualDestination
index|[]
name|array
init|=
operator|new
name|VirtualDestination
index|[
name|answer
operator|.
name|size
argument_list|()
index|]
decl_stmt|;
name|answer
operator|.
name|toArray
argument_list|(
name|array
argument_list|)
expr_stmt|;
return|return
name|array
return|;
block|}
block|}
end_class

end_unit

