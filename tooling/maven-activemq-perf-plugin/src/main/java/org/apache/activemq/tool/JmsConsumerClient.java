begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Copyright 2005-2006 The Apache Software Foundation  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|tool
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|*
import|;
end_import

begin_class
specifier|public
class|class
name|JmsConsumerClient
extends|extends
name|JmsPerfClientSupport
implements|implements
name|MessageListener
block|{
specifier|private
name|ConnectionFactory
name|factory
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|factoryClass
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|brokerUrl
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|destinationName
init|=
literal|null
decl_stmt|;
specifier|private
name|Destination
name|destination
init|=
literal|null
decl_stmt|;
specifier|private
name|boolean
name|isDurable
init|=
literal|false
decl_stmt|;
specifier|private
name|boolean
name|isAsync
init|=
literal|true
decl_stmt|;
specifier|public
name|JmsConsumerClient
parameter_list|(
name|ConnectionFactory
name|factory
parameter_list|)
block|{
name|this
operator|.
name|factory
operator|=
name|factory
expr_stmt|;
block|}
specifier|public
name|JmsConsumerClient
parameter_list|(
name|ConnectionFactory
name|factory
parameter_list|,
name|String
name|destinationName
parameter_list|)
block|{
name|this
operator|.
name|factory
operator|=
name|factory
expr_stmt|;
name|this
operator|.
name|setDestinationName
argument_list|(
name|destinationName
argument_list|)
expr_stmt|;
block|}
specifier|public
name|JmsConsumerClient
parameter_list|(
name|String
name|factoryClass
parameter_list|,
name|String
name|brokerUrl
parameter_list|,
name|String
name|destinationName
parameter_list|)
block|{
name|this
operator|.
name|factoryClass
operator|=
name|factoryClass
expr_stmt|;
name|this
operator|.
name|brokerUrl
operator|=
name|brokerUrl
expr_stmt|;
name|this
operator|.
name|destinationName
operator|=
name|destinationName
expr_stmt|;
block|}
specifier|public
name|JmsConsumerClient
parameter_list|(
name|String
name|brokerUrl
parameter_list|,
name|String
name|destinationName
parameter_list|)
block|{
name|this
operator|.
name|brokerUrl
operator|=
name|brokerUrl
expr_stmt|;
name|this
operator|.
name|destinationName
operator|=
name|destinationName
expr_stmt|;
block|}
specifier|public
name|void
name|createConsumer
parameter_list|(
name|long
name|duration
parameter_list|)
throws|throws
name|JMSException
block|{
name|listener
operator|.
name|onConfigEnd
argument_list|(
name|this
argument_list|)
expr_stmt|;
comment|// Create connection factory
if|if
condition|(
name|factory
operator|!=
literal|null
condition|)
block|{
name|createConnectionFactory
argument_list|(
name|factory
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|factoryClass
operator|!=
literal|null
condition|)
block|{
name|createConnectionFactory
argument_list|(
name|factoryClass
argument_list|,
name|brokerUrl
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|createConnectionFactory
argument_list|(
name|brokerUrl
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|getDestination
argument_list|()
operator|==
literal|null
condition|)
block|{
name|setDestination
argument_list|(
name|getDestinationName
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|isDurable
condition|)
block|{
name|createDurableSubscriber
argument_list|(
operator|(
name|Topic
operator|)
name|getDestination
argument_list|()
argument_list|,
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|createMessageConsumer
argument_list|(
name|getDestination
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|isAsync
condition|)
block|{
name|getMessageConsumer
argument_list|()
operator|.
name|setMessageListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|getConnection
argument_list|()
operator|.
name|start
argument_list|()
expr_stmt|;
try|try
block|{
name|Thread
operator|.
name|sleep
argument_list|(
name|duration
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|JMSException
argument_list|(
literal|"Error while consumer is sleeping "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
throw|;
block|}
block|}
else|else
block|{
name|getConnection
argument_list|()
operator|.
name|start
argument_list|()
expr_stmt|;
name|consumeMessages
argument_list|(
name|getMessageConsumer
argument_list|()
argument_list|,
name|duration
argument_list|)
expr_stmt|;
block|}
name|close
argument_list|()
expr_stmt|;
comment|//close consumer, session, and connection.
name|listener
operator|.
name|onConfigEnd
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
comment|//Increments throughput
specifier|public
name|void
name|onMessage
parameter_list|(
name|Message
name|message
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|message
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|incThroughput
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|consumeMessages
parameter_list|(
name|MessageConsumer
name|consumer
parameter_list|,
name|long
name|duration
parameter_list|)
throws|throws
name|JMSException
block|{
name|long
name|currentTime
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|long
name|endTime
init|=
name|currentTime
operator|+
name|duration
decl_stmt|;
while|while
condition|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|<=
name|endTime
condition|)
block|{
name|Message
name|message
init|=
name|consumer
operator|.
name|receive
argument_list|()
decl_stmt|;
name|onMessage
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|close
parameter_list|()
throws|throws
name|JMSException
block|{
name|getMessageConsumer
argument_list|()
operator|.
name|close
argument_list|()
expr_stmt|;
name|getSession
argument_list|()
operator|.
name|close
argument_list|()
expr_stmt|;
name|getConnection
argument_list|()
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|Exception
block|{
name|JmsConsumerClient
name|cons
init|=
operator|new
name|JmsConsumerClient
argument_list|(
literal|"org.apache.activemq.ActiveMQConnectionFactory"
argument_list|,
literal|"tcp://localhost:61616"
argument_list|,
literal|"topic://TEST.FOO"
argument_list|)
decl_stmt|;
name|cons
operator|.
name|setPerfEventListener
argument_list|(
operator|new
name|PerfEventAdapter
argument_list|()
argument_list|)
expr_stmt|;
name|cons
operator|.
name|createConsumer
argument_list|(
literal|20000
argument_list|)
expr_stmt|;
block|}
comment|// Helper Methods
specifier|public
name|boolean
name|isDurable
parameter_list|()
block|{
return|return
name|isDurable
return|;
block|}
specifier|public
name|void
name|setDurable
parameter_list|(
name|boolean
name|durable
parameter_list|)
block|{
name|isDurable
operator|=
name|durable
expr_stmt|;
block|}
specifier|public
name|boolean
name|isAsync
parameter_list|()
block|{
return|return
name|isAsync
return|;
block|}
specifier|public
name|void
name|setAsync
parameter_list|(
name|boolean
name|async
parameter_list|)
block|{
name|isAsync
operator|=
name|async
expr_stmt|;
block|}
specifier|public
name|String
name|getDestinationName
parameter_list|()
block|{
return|return
name|this
operator|.
name|destinationName
return|;
block|}
specifier|public
name|void
name|setDestinationName
parameter_list|(
name|String
name|destinationName
parameter_list|)
block|{
name|this
operator|.
name|destinationName
operator|=
name|destinationName
expr_stmt|;
block|}
specifier|public
name|Destination
name|getDestination
parameter_list|()
block|{
return|return
name|this
operator|.
name|destination
return|;
block|}
specifier|public
name|void
name|setDestination
parameter_list|(
name|Destination
name|dest
parameter_list|)
block|{
name|this
operator|.
name|destination
operator|=
name|dest
expr_stmt|;
block|}
specifier|public
name|void
name|setDestination
parameter_list|(
name|String
name|destinationName
parameter_list|)
throws|throws
name|JMSException
block|{
name|this
operator|.
name|setDestinationName
argument_list|(
name|destinationName
argument_list|)
expr_stmt|;
comment|// Create destinations
if|if
condition|(
name|this
operator|.
name|getDestinationName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"topic://"
argument_list|)
condition|)
block|{
name|setDestination
argument_list|(
name|createTopic
argument_list|(
name|getDestinationName
argument_list|()
operator|.
name|substring
argument_list|(
literal|"topic://"
operator|.
name|length
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|getDestinationName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"queue://"
argument_list|)
condition|)
block|{
name|setDestination
argument_list|(
name|createQueue
argument_list|(
name|getDestinationName
argument_list|()
operator|.
name|substring
argument_list|(
literal|"queue://"
operator|.
name|length
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|setDestination
argument_list|(
name|createQueue
argument_list|(
name|getDestinationName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

