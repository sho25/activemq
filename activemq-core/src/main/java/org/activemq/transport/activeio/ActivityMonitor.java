begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/** *<a href="http://activemq.org">ActiveMQ: The Open Source Message Fabric</a> * * Copyright 2005 (C) LogicBlaze, Inc. http://www.logicblaze.com * * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. * **/
end_comment

begin_package
package|package
name|org
operator|.
name|activemq
operator|.
name|transport
operator|.
name|activeio
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activeio
operator|.
name|AsyncChannel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activeio
operator|.
name|FilterAsyncChannel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activeio
operator|.
name|Packet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activemq
operator|.
name|management
operator|.
name|CountStatisticImpl
import|;
end_import

begin_comment
comment|/**  * Used to make sure that commands are arriving periodically from the peer of the transport.    *   * @version $Revision$  */
end_comment

begin_class
specifier|public
class|class
name|ActivityMonitor
extends|extends
name|FilterAsyncChannel
block|{
specifier|final
name|CountStatisticImpl
name|writeCounter
init|=
operator|new
name|CountStatisticImpl
argument_list|(
literal|"writeCounter"
argument_list|,
literal|"The number of bytes written to the transport"
argument_list|)
decl_stmt|;
specifier|final
name|CountStatisticImpl
name|readCounter
init|=
operator|new
name|CountStatisticImpl
argument_list|(
literal|"readCoutner"
argument_list|,
literal|"The number bytes written to the transport"
argument_list|)
decl_stmt|;
specifier|public
name|ActivityMonitor
parameter_list|(
name|AsyncChannel
name|next
parameter_list|)
block|{
name|super
argument_list|(
name|next
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|onPacket
parameter_list|(
name|Packet
name|packet
parameter_list|)
block|{
name|readCounter
operator|.
name|add
argument_list|(
name|packet
operator|.
name|remaining
argument_list|()
argument_list|)
expr_stmt|;
name|super
operator|.
name|onPacket
argument_list|(
name|packet
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|write
parameter_list|(
name|Packet
name|packet
parameter_list|)
throws|throws
name|IOException
block|{
name|writeCounter
operator|.
name|add
argument_list|(
name|packet
operator|.
name|remaining
argument_list|()
argument_list|)
expr_stmt|;
name|super
operator|.
name|write
argument_list|(
name|packet
argument_list|)
expr_stmt|;
block|}
specifier|public
name|CountStatisticImpl
name|getWriteCounter
parameter_list|()
block|{
return|return
name|writeCounter
return|;
block|}
specifier|public
name|CountStatisticImpl
name|getReadCounter
parameter_list|()
block|{
return|return
name|readCounter
return|;
block|}
block|}
end_class

end_unit

