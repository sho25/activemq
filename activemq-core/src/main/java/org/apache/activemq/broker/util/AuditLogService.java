begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|util
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_class
specifier|public
class|class
name|AuditLogService
block|{
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|AuditLogService
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|AuditLogFactory
name|factory
decl_stmt|;
specifier|private
specifier|static
name|AuditLogService
name|auditLog
decl_stmt|;
specifier|public
specifier|static
name|AuditLogService
name|getAuditLog
parameter_list|()
block|{
if|if
condition|(
name|auditLog
operator|==
literal|null
condition|)
block|{
name|auditLog
operator|=
operator|new
name|AuditLogService
argument_list|()
expr_stmt|;
block|}
return|return
name|auditLog
return|;
block|}
specifier|private
name|AuditLogService
parameter_list|()
block|{
name|String
name|auditLogFactory
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"org.apache.activemq.audit.factory"
argument_list|,
literal|"org.apache.activemq.broker.util.DefaultAuditLogFactory"
argument_list|)
decl_stmt|;
try|try
block|{
name|factory
operator|=
operator|(
name|AuditLogFactory
operator|)
name|Class
operator|.
name|forName
argument_list|(
name|auditLogFactory
argument_list|)
operator|.
name|newInstance
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"Cannot instantiate audit log factory '"
operator|+
name|auditLogFactory
operator|+
literal|"', using default audit log factory"
argument_list|,
name|e
argument_list|)
expr_stmt|;
name|factory
operator|=
operator|new
name|DefaultAuditLogFactory
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|log
parameter_list|(
name|String
name|message
parameter_list|)
block|{
for|for
control|(
name|AuditLog
name|log
range|:
name|factory
operator|.
name|getAuditLogs
argument_list|()
control|)
block|{
name|log
operator|.
name|log
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

