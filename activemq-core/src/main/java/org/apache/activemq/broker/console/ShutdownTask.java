begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Copyright 2005-2006 The Apache Software Foundation  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|console
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|MBeanServerConnection
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|ObjectName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|ObjectInstance
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_class
specifier|public
class|class
name|ShutdownTask
extends|extends
name|AbstractJmxTask
block|{
specifier|private
name|boolean
name|isStopAllBrokers
init|=
literal|false
decl_stmt|;
specifier|protected
name|void
name|startTask
parameter_list|(
name|List
name|brokerNames
parameter_list|)
block|{
try|try
block|{
name|Set
name|mbeans
init|=
operator|new
name|HashSet
argument_list|()
decl_stmt|;
name|MBeanServerConnection
name|server
init|=
name|createJmxConnector
argument_list|()
operator|.
name|getMBeanServerConnection
argument_list|()
decl_stmt|;
comment|// Stop all brokers
if|if
condition|(
name|isStopAllBrokers
condition|)
block|{
name|mbeans
operator|=
name|AmqJmxSupport
operator|.
name|getAllBrokers
argument_list|(
name|server
argument_list|)
expr_stmt|;
name|brokerNames
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
comment|// Stop the default broker
elseif|else
if|if
condition|(
name|brokerNames
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|mbeans
operator|=
name|AmqJmxSupport
operator|.
name|getAllBrokers
argument_list|(
name|server
argument_list|)
expr_stmt|;
comment|// If there is no broker to stop
if|if
condition|(
name|mbeans
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"There are no brokers to stop."
argument_list|)
expr_stmt|;
return|return;
comment|// There should only be one broker to stop
block|}
elseif|else
if|if
condition|(
name|mbeans
operator|.
name|size
argument_list|()
operator|>
literal|1
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"There are multiple brokers to stop. Please select the broker(s) to stop or use --all to stop all brokers."
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|()
expr_stmt|;
name|AmqJmxSupport
operator|.
name|printBrokerList
argument_list|(
name|mbeans
argument_list|)
expr_stmt|;
return|return;
comment|// Get the first broker only
block|}
else|else
block|{
name|Object
name|firstBroker
init|=
name|mbeans
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|mbeans
operator|.
name|clear
argument_list|()
expr_stmt|;
name|mbeans
operator|.
name|add
argument_list|(
name|firstBroker
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Stop each specified broker
else|else
block|{
name|String
name|brokerName
decl_stmt|;
while|while
condition|(
operator|!
name|brokerNames
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|brokerName
operator|=
operator|(
name|String
operator|)
name|brokerNames
operator|.
name|remove
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|Set
name|matchedBrokers
init|=
name|AmqJmxSupport
operator|.
name|getBrokers
argument_list|(
name|server
argument_list|,
name|brokerName
argument_list|)
decl_stmt|;
if|if
condition|(
name|matchedBrokers
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|brokerName
operator|+
literal|" did not match any running brokers."
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|mbeans
operator|.
name|addAll
argument_list|(
name|matchedBrokers
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|// Stop all brokers in set
name|stopBrokers
argument_list|(
name|server
argument_list|,
name|mbeans
argument_list|)
expr_stmt|;
name|closeJmxConnector
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Failed to execute stop task. Reason: "
operator|+
name|e
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|stopBrokers
parameter_list|(
name|MBeanServerConnection
name|server
parameter_list|,
name|Set
name|brokerBeans
parameter_list|)
throws|throws
name|Exception
block|{
name|ObjectName
name|brokerObjName
decl_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|brokerBeans
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|brokerObjName
operator|=
operator|(
operator|(
name|ObjectInstance
operator|)
name|i
operator|.
name|next
argument_list|()
operator|)
operator|.
name|getObjectName
argument_list|()
expr_stmt|;
name|String
name|brokerName
init|=
name|brokerObjName
operator|.
name|getKeyProperty
argument_list|(
literal|"BrokerName"
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Stopping broker: "
operator|+
name|brokerName
argument_list|)
expr_stmt|;
try|try
block|{
name|server
operator|.
name|invoke
argument_list|(
name|brokerObjName
argument_list|,
literal|"terminateJVM"
argument_list|,
operator|new
name|Object
index|[]
block|{
operator|new
name|Integer
argument_list|(
literal|0
argument_list|)
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"int"
block|}
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Succesfully stopped broker: "
operator|+
name|brokerName
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// TODO: Check exceptions throwned
comment|//System.out.println("Failed to stop broker: [ " + brokerName + " ]. Reason: " + e.getMessage());
block|}
block|}
block|}
specifier|protected
name|void
name|printHelp
parameter_list|()
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Task Usage: Main stop [stop-options] [broker-name1] [broker-name2] ..."
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Description: Stops a running broker."
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Stop Options:"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"    --jmxurl<url>      Set the JMX URL to connect to."
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"    --all               Stop all brokers."
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"    --version           Display the version information."
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"    -h,-?,--help        Display the stop broker help information."
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Broker Names:"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"    Name of the brokers that will be stopped."
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"    If omitted, it is assumed that there is only one broker running, and it will be stopped."
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"    Use -all to stop all running brokers."
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|handleOption
parameter_list|(
name|String
name|token
parameter_list|,
name|List
name|tokens
parameter_list|)
throws|throws
name|Exception
block|{
comment|// Try to handle the options first
if|if
condition|(
name|token
operator|.
name|equals
argument_list|(
literal|"--all"
argument_list|)
condition|)
block|{
name|isStopAllBrokers
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
comment|// Let the super class handle the option
name|super
operator|.
name|handleOption
argument_list|(
name|token
argument_list|,
name|tokens
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

