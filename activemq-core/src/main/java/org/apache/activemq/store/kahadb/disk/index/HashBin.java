begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadb
operator|.
name|disk
operator|.
name|index
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadb
operator|.
name|disk
operator|.
name|page
operator|.
name|Page
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadb
operator|.
name|disk
operator|.
name|page
operator|.
name|Transaction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadb
operator|.
name|disk
operator|.
name|util
operator|.
name|VariableMarshaller
import|;
end_import

begin_comment
comment|/**  * Bin in a HashIndex  *   *   */
end_comment

begin_class
class|class
name|HashBin
parameter_list|<
name|Key
parameter_list|,
name|Value
parameter_list|>
block|{
specifier|static
specifier|public
class|class
name|Marshaller
parameter_list|<
name|Key
parameter_list|,
name|Value
parameter_list|>
extends|extends
name|VariableMarshaller
argument_list|<
name|HashBin
argument_list|<
name|Key
argument_list|,
name|Value
argument_list|>
argument_list|>
block|{
specifier|private
specifier|final
name|HashIndex
argument_list|<
name|Key
argument_list|,
name|Value
argument_list|>
name|hashIndex
decl_stmt|;
specifier|public
name|Marshaller
parameter_list|(
name|HashIndex
argument_list|<
name|Key
argument_list|,
name|Value
argument_list|>
name|index
parameter_list|)
block|{
name|this
operator|.
name|hashIndex
operator|=
name|index
expr_stmt|;
block|}
specifier|public
name|HashBin
argument_list|<
name|Key
argument_list|,
name|Value
argument_list|>
name|readPayload
parameter_list|(
name|DataInput
name|is
parameter_list|)
throws|throws
name|IOException
block|{
name|HashBin
argument_list|<
name|Key
argument_list|,
name|Value
argument_list|>
name|bin
init|=
operator|new
name|HashBin
argument_list|<
name|Key
argument_list|,
name|Value
argument_list|>
argument_list|()
decl_stmt|;
name|int
name|size
init|=
name|is
operator|.
name|readInt
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|Key
name|key
init|=
name|hashIndex
operator|.
name|getKeyMarshaller
argument_list|()
operator|.
name|readPayload
argument_list|(
name|is
argument_list|)
decl_stmt|;
name|Value
name|value
init|=
name|hashIndex
operator|.
name|getValueMarshaller
argument_list|()
operator|.
name|readPayload
argument_list|(
name|is
argument_list|)
decl_stmt|;
name|bin
operator|.
name|data
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|bin
return|;
block|}
specifier|public
name|void
name|writePayload
parameter_list|(
name|HashBin
argument_list|<
name|Key
argument_list|,
name|Value
argument_list|>
name|bin
parameter_list|,
name|DataOutput
name|os
parameter_list|)
throws|throws
name|IOException
block|{
name|os
operator|.
name|writeInt
argument_list|(
name|bin
operator|.
name|data
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|Key
argument_list|,
name|Value
argument_list|>
name|entry
range|:
name|bin
operator|.
name|data
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|hashIndex
operator|.
name|getKeyMarshaller
argument_list|()
operator|.
name|writePayload
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|,
name|os
argument_list|)
expr_stmt|;
name|hashIndex
operator|.
name|getValueMarshaller
argument_list|()
operator|.
name|writePayload
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
argument_list|,
name|os
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|Page
argument_list|<
name|HashBin
argument_list|<
name|Key
argument_list|,
name|Value
argument_list|>
argument_list|>
name|page
decl_stmt|;
specifier|private
name|TreeMap
argument_list|<
name|Key
argument_list|,
name|Value
argument_list|>
name|data
init|=
operator|new
name|TreeMap
argument_list|<
name|Key
argument_list|,
name|Value
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|int
name|size
parameter_list|()
block|{
return|return
name|data
operator|.
name|size
argument_list|()
return|;
block|}
specifier|public
name|Value
name|put
parameter_list|(
name|Key
name|key
parameter_list|,
name|Value
name|value
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|data
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Value
name|get
parameter_list|(
name|Key
name|key
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|data
operator|.
name|get
argument_list|(
name|key
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|containsKey
parameter_list|(
name|Key
name|key
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|data
operator|.
name|containsKey
argument_list|(
name|key
argument_list|)
return|;
block|}
specifier|public
name|Map
argument_list|<
name|Key
argument_list|,
name|Value
argument_list|>
name|getAll
parameter_list|(
name|Transaction
name|tx
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|data
return|;
block|}
specifier|public
name|Value
name|remove
parameter_list|(
name|Key
name|key
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|data
operator|.
name|remove
argument_list|(
name|key
argument_list|)
return|;
block|}
specifier|public
name|Page
argument_list|<
name|HashBin
argument_list|<
name|Key
argument_list|,
name|Value
argument_list|>
argument_list|>
name|getPage
parameter_list|()
block|{
return|return
name|page
return|;
block|}
specifier|public
name|void
name|setPage
parameter_list|(
name|Page
argument_list|<
name|HashBin
argument_list|<
name|Key
argument_list|,
name|Value
argument_list|>
argument_list|>
name|page
parameter_list|)
block|{
name|this
operator|.
name|page
operator|=
name|page
expr_stmt|;
name|this
operator|.
name|page
operator|.
name|set
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

