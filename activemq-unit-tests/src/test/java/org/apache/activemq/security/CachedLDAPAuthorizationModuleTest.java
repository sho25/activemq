begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|security
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|directory
operator|.
name|ldap
operator|.
name|client
operator|.
name|api
operator|.
name|LdapConnection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|directory
operator|.
name|ldap
operator|.
name|client
operator|.
name|api
operator|.
name|LdapNetworkConnection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|directory
operator|.
name|server
operator|.
name|annotations
operator|.
name|CreateLdapServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|directory
operator|.
name|server
operator|.
name|annotations
operator|.
name|CreateTransport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|directory
operator|.
name|server
operator|.
name|core
operator|.
name|annotations
operator|.
name|ApplyLdifFiles
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|directory
operator|.
name|server
operator|.
name|core
operator|.
name|integ
operator|.
name|FrameworkRunner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|directory
operator|.
name|shared
operator|.
name|ldap
operator|.
name|model
operator|.
name|name
operator|.
name|Dn
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|FrameworkRunner
operator|.
name|class
argument_list|)
annotation|@
name|CreateLdapServer
argument_list|(
name|transports
operator|=
block|{
annotation|@
name|CreateTransport
argument_list|(
name|protocol
operator|=
literal|"LDAP"
argument_list|)
block|}
argument_list|)
annotation|@
name|ApplyLdifFiles
argument_list|(
literal|"org/apache/activemq/security/activemq-apacheds.ldif"
argument_list|)
specifier|public
class|class
name|CachedLDAPAuthorizationModuleTest
extends|extends
name|AbstractCachedLDAPAuthorizationModuleTest
block|{
annotation|@
name|Override
specifier|protected
name|SimpleCachedLDAPAuthorizationMap
name|createMap
parameter_list|()
block|{
name|SimpleCachedLDAPAuthorizationMap
name|map
init|=
name|super
operator|.
name|createMap
argument_list|()
decl_stmt|;
name|map
operator|.
name|setConnectionURL
argument_list|(
literal|"ldap://localhost:"
operator|+
name|getLdapServer
argument_list|()
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
name|map
operator|.
name|setConnectionPassword
argument_list|(
literal|"secret"
argument_list|)
expr_stmt|;
return|return
name|map
return|;
block|}
annotation|@
name|Override
specifier|protected
name|InputStream
name|getAddLdif
parameter_list|()
block|{
return|return
name|getClass
argument_list|()
operator|.
name|getClassLoader
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"org/apache/activemq/security/activemq-apacheds-add.ldif"
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|InputStream
name|getRemoveLdif
parameter_list|()
block|{
return|return
name|getClass
argument_list|()
operator|.
name|getClassLoader
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"org/apache/activemq/security/activemq-apacheds-delete.ldif"
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|String
name|getMemberAttributeValueForModifyRequest
parameter_list|()
block|{
return|return
literal|"cn=users,ou=Group,ou=ActiveMQ,ou=system"
return|;
block|}
specifier|protected
name|String
name|getQueueBaseDn
parameter_list|()
block|{
return|return
literal|"ou=Queue,ou=Destination,ou=ActiveMQ,ou=system"
return|;
block|}
annotation|@
name|Override
specifier|protected
name|LdapConnection
name|getLdapConnection
parameter_list|()
throws|throws
name|Exception
block|{
name|LdapConnection
name|connection
init|=
operator|new
name|LdapNetworkConnection
argument_list|(
literal|"localhost"
argument_list|,
name|getLdapServer
argument_list|()
operator|.
name|getPort
argument_list|()
argument_list|)
decl_stmt|;
name|connection
operator|.
name|bind
argument_list|(
operator|new
name|Dn
argument_list|(
literal|"uid=admin,ou=system"
argument_list|)
argument_list|,
literal|"secret"
argument_list|)
expr_stmt|;
return|return
name|connection
return|;
block|}
block|}
end_class

end_unit

