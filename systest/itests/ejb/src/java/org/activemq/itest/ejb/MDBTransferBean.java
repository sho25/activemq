begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|activemq
operator|.
name|itest
operator|.
name|ejb
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|ejb
operator|.
name|EJBException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ejb
operator|.
name|MessageDrivenBean
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ejb
operator|.
name|MessageDrivenContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|ConnectionFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Destination
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageListener
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|MessageProducer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|InitialContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|NameClassPair
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|NamingEnumeration
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|NamingException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_comment
comment|/**  *  *  * @version $Revision: 1.1 $ $Date: 2005/03/14 02:57:53 $  *  * */
end_comment

begin_class
specifier|public
class|class
name|MDBTransferBean
implements|implements
name|MessageDrivenBean
implements|,
name|MessageListener
block|{
specifier|private
specifier|static
specifier|final
name|Log
name|log
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|MDBTransferBean
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|MessageDrivenContext
name|messageDrivenContext
decl_stmt|;
specifier|private
name|Context
name|envContext
decl_stmt|;
specifier|public
name|void
name|ejbCreate
parameter_list|()
block|{      }
specifier|public
name|void
name|ejbRemove
parameter_list|()
throws|throws
name|EJBException
block|{     }
specifier|public
name|void
name|setMessageDrivenContext
parameter_list|(
name|MessageDrivenContext
name|messageDrivenContext
parameter_list|)
throws|throws
name|EJBException
block|{
try|try
block|{
name|this
operator|.
name|messageDrivenContext
operator|=
name|messageDrivenContext
expr_stmt|;
name|envContext
operator|=
operator|(
name|Context
operator|)
operator|new
name|InitialContext
argument_list|()
operator|.
name|lookup
argument_list|(
literal|"java:comp/env"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NamingException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|EJBException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
name|void
name|onMessage
parameter_list|(
name|Message
name|message
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"entering onMessage"
argument_list|)
expr_stmt|;
try|try
block|{
name|ConnectionFactory
name|cf
init|=
operator|(
name|ConnectionFactory
operator|)
name|envContext
operator|.
name|lookup
argument_list|(
literal|"jms/Default"
argument_list|)
decl_stmt|;
name|Connection
name|con
init|=
name|cf
operator|.
name|createConnection
argument_list|()
decl_stmt|;
try|try
block|{
name|Session
name|session
init|=
name|con
operator|.
name|createSession
argument_list|(
literal|true
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|Destination
name|dest
init|=
operator|(
name|Destination
operator|)
name|envContext
operator|.
name|lookup
argument_list|(
literal|"MDBOut"
argument_list|)
decl_stmt|;
name|MessageProducer
name|producer
init|=
name|session
operator|.
name|createProducer
argument_list|(
name|dest
argument_list|)
decl_stmt|;
name|producer
operator|.
name|setDeliveryMode
argument_list|(
name|message
operator|.
name|getJMSDeliveryMode
argument_list|()
argument_list|)
expr_stmt|;
name|producer
operator|.
name|send
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|con
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|log
operator|.
name|info
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"leaving onMessage"
argument_list|)
expr_stmt|;
block|}
comment|/**     *     */
specifier|private
name|void
name|printCompEnv
parameter_list|()
throws|throws
name|NamingException
block|{
name|log
operator|.
name|warn
argument_list|(
literal|"Printing java:comp/env/jms context: "
argument_list|)
expr_stmt|;
name|Context
name|c
init|=
operator|(
name|Context
operator|)
operator|new
name|InitialContext
argument_list|()
operator|.
name|lookup
argument_list|(
literal|"java:comp/env/jms"
argument_list|)
decl_stmt|;
name|NamingEnumeration
name|iter
init|=
name|c
operator|.
name|list
argument_list|(
literal|""
argument_list|)
decl_stmt|;
while|while
condition|(
name|iter
operator|.
name|hasMoreElements
argument_list|()
condition|)
block|{
name|NameClassPair
name|pair
init|=
operator|(
name|NameClassPair
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|log
operator|.
name|warn
argument_list|(
literal|"'"
operator|+
name|pair
operator|.
name|getName
argument_list|()
operator|+
literal|"'"
argument_list|)
expr_stmt|;
comment|/*             * Object obj = ctx.lookup(node.getName()); if ( obj instanceof             * Context ){ node.type = Node.CONTEXT;             * buildNode(node,(Context)obj); } else if (obj instanceof             * java.rmi.Remote) { node.type = Node.BEAN; } else { node.type =             * Node.OTHER; }             */
block|}
block|}
block|}
end_class

end_unit

