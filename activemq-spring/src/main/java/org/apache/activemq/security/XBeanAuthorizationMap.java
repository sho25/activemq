begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|security
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|PostConstruct
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|filter
operator|.
name|DestinationMapEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|InitializingBean
import|;
end_import

begin_comment
comment|/**  *  @org.apache.xbean.XBean element="authorizationMap"  */
end_comment

begin_class
specifier|public
class|class
name|XBeanAuthorizationMap
extends|extends
name|DefaultAuthorizationMap
implements|implements
name|InitializingBean
block|{
specifier|protected
name|List
argument_list|<
name|DestinationMapEntry
argument_list|>
name|authorizationEntries
decl_stmt|;
comment|/**      * JSR-250 callback wrapper; converts checked exceptions to runtime exceptions      *      * delegates to afterPropertiesSet, done to prevent backwards incompatible signature change.      */
annotation|@
name|PostConstruct
specifier|private
name|void
name|postConstruct
parameter_list|()
block|{
try|try
block|{
name|afterPropertiesSet
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
comment|/**      *      * @org.apache.xbean.InitMethod      */
annotation|@
name|Override
specifier|public
name|void
name|afterPropertiesSet
parameter_list|()
throws|throws
name|Exception
block|{
for|for
control|(
name|DestinationMapEntry
name|entry
range|:
name|authorizationEntries
control|)
block|{
if|if
condition|(
operator|(
operator|(
name|XBeanAuthorizationEntry
operator|)
name|entry
operator|)
operator|.
name|getGroupClass
argument_list|()
operator|==
literal|null
condition|)
block|{
operator|(
operator|(
name|XBeanAuthorizationEntry
operator|)
name|entry
operator|)
operator|.
name|setGroupClass
argument_list|(
name|groupClass
argument_list|)
expr_stmt|;
block|}
operator|(
operator|(
name|XBeanAuthorizationEntry
operator|)
name|entry
operator|)
operator|.
name|afterPropertiesSet
argument_list|()
expr_stmt|;
block|}
name|super
operator|.
name|setEntries
argument_list|(
name|authorizationEntries
argument_list|)
expr_stmt|;
block|}
comment|/**      * Sets the individual entries on the authorization map      *      * @org.apache.xbean.ElementType class="org.apache.activemq.security.AuthorizationEntry"      */
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
specifier|public
name|void
name|setAuthorizationEntries
parameter_list|(
name|List
argument_list|<
name|DestinationMapEntry
argument_list|>
name|entries
parameter_list|)
block|{
name|this
operator|.
name|authorizationEntries
operator|=
name|entries
expr_stmt|;
block|}
block|}
end_class

end_unit

