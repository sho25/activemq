begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|shiro
operator|.
name|authc
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|ConnectionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|shiro
operator|.
name|subject
operator|.
name|SubjectConnectionReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|shiro
operator|.
name|authc
operator|.
name|AuthenticationToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|shiro
operator|.
name|authc
operator|.
name|UsernamePasswordToken
import|;
end_import

begin_comment
comment|/**  * Default implementation of the {@link AuthenticationTokenFactory} interface that returns  * {@link org.apache.shiro.authc.UsernamePasswordToken UsernamePasswordToken} instances based on inspecting the  * {@link ConnectionInfo}.  *  * @since 5.10.0  */
end_comment

begin_class
specifier|public
class|class
name|DefaultAuthenticationTokenFactory
implements|implements
name|AuthenticationTokenFactory
block|{
specifier|public
name|DefaultAuthenticationTokenFactory
parameter_list|()
block|{     }
comment|/**      * Returns a new {@link UsernamePasswordToken} instance populated based on the ConnectionInfo's      * {@link org.apache.activemq.command.ConnectionInfo#getUserName() userName} and      * {@link org.apache.activemq.command.ConnectionInfo#getPassword() password} properties.      *      * @param conn the subject's connection      * @return a new {@link UsernamePasswordToken} instance populated based on the ConnectionInfo's      *         ConnectionInfo's {@link org.apache.activemq.command.ConnectionInfo#getUserName() userName} and      *         {@link org.apache.activemq.command.ConnectionInfo#getPassword() password} properties.      */
annotation|@
name|Override
specifier|public
name|AuthenticationToken
name|getAuthenticationToken
parameter_list|(
name|SubjectConnectionReference
name|conn
parameter_list|)
block|{
name|String
name|username
init|=
name|conn
operator|.
name|getConnectionInfo
argument_list|()
operator|.
name|getUserName
argument_list|()
decl_stmt|;
name|String
name|password
init|=
name|conn
operator|.
name|getConnectionInfo
argument_list|()
operator|.
name|getPassword
argument_list|()
decl_stmt|;
if|if
condition|(
name|username
operator|==
literal|null
operator|&&
name|password
operator|==
literal|null
condition|)
block|{
comment|//no identity or credentials provided by the client for the connection - return null to reflect this
return|return
literal|null
return|;
block|}
return|return
operator|new
name|UsernamePasswordToken
argument_list|(
name|username
argument_list|,
name|password
argument_list|)
return|;
block|}
block|}
end_class

end_unit

