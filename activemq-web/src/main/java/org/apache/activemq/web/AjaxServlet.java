begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|//========================================================================
end_comment

begin_comment
comment|//Copyright 2006 Mort Bay Consulting Pty. Ltd.
end_comment

begin_comment
comment|//------------------------------------------------------------------------
end_comment

begin_comment
comment|//Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|//you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|//You may obtain a copy of the License at
end_comment

begin_comment
comment|//http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|//distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|//See the License for the specific language governing permissions and
end_comment

begin_comment
comment|//limitations under the License.
end_comment

begin_comment
comment|//========================================================================
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|web
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_comment
comment|/* ------------------------------------------------------------ */
end_comment

begin_comment
comment|/** AjaxServlet.  * The AjaxServlet extends the {@link MessageListenerServlet} with the capability to   * server the<code>amq.js</code> script and associated scripts from resources   * within the activemq-web jar.  The amq.js script is the client side companion to  * the MessageListenerServlet and supports sending messages and long polling for   * receiving messages (Also called Comet style Ajax).  *   */
end_comment

begin_class
specifier|public
class|class
name|AjaxServlet
extends|extends
name|MessageListenerServlet
block|{
specifier|private
name|Map
name|jsCache
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
specifier|private
name|long
name|jsLastModified
init|=
literal|1000
operator|*
operator|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|/
literal|1000
operator|)
decl_stmt|;
specifier|protected
name|void
name|doGet
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|ServletException
throws|,
name|IOException
block|{
if|if
condition|(
name|request
operator|.
name|getPathInfo
argument_list|()
operator|!=
literal|null
operator|&&
name|request
operator|.
name|getPathInfo
argument_list|()
operator|.
name|endsWith
argument_list|(
literal|".js"
argument_list|)
condition|)
name|doJavaScript
argument_list|(
name|request
argument_list|,
name|response
argument_list|)
expr_stmt|;
else|else
name|super
operator|.
name|doGet
argument_list|(
name|request
argument_list|,
name|response
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|doJavaScript
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|IOException
throws|,
name|ServletException
block|{
comment|// Look for a local resource first.
name|String
name|js
init|=
name|request
operator|.
name|getServletPath
argument_list|()
operator|+
name|request
operator|.
name|getPathInfo
argument_list|()
decl_stmt|;
name|URL
name|url
init|=
name|getServletContext
argument_list|()
operator|.
name|getResource
argument_list|(
name|js
argument_list|)
decl_stmt|;
if|if
condition|(
name|url
operator|!=
literal|null
condition|)
block|{
name|getServletContext
argument_list|()
operator|.
name|getNamedDispatcher
argument_list|(
literal|"default"
argument_list|)
operator|.
name|forward
argument_list|(
name|request
argument_list|,
name|response
argument_list|)
expr_stmt|;
return|return;
block|}
comment|// Serve from the classpath resources
name|String
name|resource
init|=
literal|"org/apache/activemq/web"
operator|+
name|request
operator|.
name|getPathInfo
argument_list|()
decl_stmt|;
synchronized|synchronized
init|(
name|jsCache
init|)
block|{
name|byte
index|[]
name|data
init|=
operator|(
name|byte
index|[]
operator|)
name|jsCache
operator|.
name|get
argument_list|(
name|resource
argument_list|)
decl_stmt|;
if|if
condition|(
name|data
operator|==
literal|null
condition|)
block|{
name|InputStream
name|in
init|=
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getContextClassLoader
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
name|resource
argument_list|)
decl_stmt|;
if|if
condition|(
name|in
operator|!=
literal|null
condition|)
block|{
name|ByteArrayOutputStream
name|out
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|byte
index|[]
name|buf
init|=
operator|new
name|byte
index|[
literal|4096
index|]
decl_stmt|;
name|int
name|len
init|=
name|in
operator|.
name|read
argument_list|(
name|buf
argument_list|)
decl_stmt|;
while|while
condition|(
name|len
operator|>=
literal|0
condition|)
block|{
name|out
operator|.
name|write
argument_list|(
name|buf
argument_list|,
literal|0
argument_list|,
name|len
argument_list|)
expr_stmt|;
name|len
operator|=
name|in
operator|.
name|read
argument_list|(
name|buf
argument_list|)
expr_stmt|;
block|}
name|in
operator|.
name|close
argument_list|()
expr_stmt|;
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
name|data
operator|=
name|out
operator|.
name|toByteArray
argument_list|()
expr_stmt|;
name|jsCache
operator|.
name|put
argument_list|(
name|resource
argument_list|,
name|data
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|data
operator|!=
literal|null
condition|)
block|{
name|long
name|if_modified
init|=
name|request
operator|.
name|getDateHeader
argument_list|(
literal|"If-Modified-Since"
argument_list|)
decl_stmt|;
if|if
condition|(
name|if_modified
operator|==
name|jsLastModified
condition|)
block|{
name|response
operator|.
name|sendError
argument_list|(
name|HttpServletResponse
operator|.
name|SC_NOT_MODIFIED
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|response
operator|.
name|setContentType
argument_list|(
literal|"application/x-javascript"
argument_list|)
expr_stmt|;
name|response
operator|.
name|setContentLength
argument_list|(
name|data
operator|.
name|length
argument_list|)
expr_stmt|;
name|response
operator|.
name|setDateHeader
argument_list|(
literal|"Last-Modified"
argument_list|,
name|jsLastModified
argument_list|)
expr_stmt|;
name|response
operator|.
name|getOutputStream
argument_list|()
operator|.
name|write
argument_list|(
name|data
argument_list|)
expr_stmt|;
block|}
block|}
else|else
name|response
operator|.
name|sendError
argument_list|(
name|HttpServletResponse
operator|.
name|SC_NOT_FOUND
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

