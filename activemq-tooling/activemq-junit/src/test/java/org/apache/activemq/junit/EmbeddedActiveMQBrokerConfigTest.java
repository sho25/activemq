begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|junit
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * Verify the get/set operations are working properly  */
end_comment

begin_class
specifier|public
class|class
name|EmbeddedActiveMQBrokerConfigTest
block|{
comment|// Don't use @Rule in this case - just testing getters/setters
name|EmbeddedActiveMQBroker
name|instance
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|instance
operator|=
operator|new
name|EmbeddedActiveMQBroker
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetVmURL
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
literal|"Default VM URL in incorrect"
argument_list|,
literal|"failover:(vm://embedded-broker?create=false)"
argument_list|,
name|instance
operator|.
name|getVmURL
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetBrokerName
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
literal|"Default Broker Name in incorrect"
argument_list|,
literal|"embedded-broker"
argument_list|,
name|instance
operator|.
name|getBrokerName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBrokerNameConfig
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|dummyName
init|=
literal|"test-broker-name"
decl_stmt|;
name|instance
operator|.
name|setBrokerName
argument_list|(
name|dummyName
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Broker Name not set correctly"
argument_list|,
name|dummyName
argument_list|,
name|instance
operator|.
name|getBrokerName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testStatisticsPluginConfig
parameter_list|()
throws|throws
name|Exception
block|{
name|assertFalse
argument_list|(
literal|"Statistics plugin should not be enabled by default"
argument_list|,
name|instance
operator|.
name|isStatisticsPluginEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|instance
operator|.
name|enableStatisticsPlugin
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Statistics plugin not enabled"
argument_list|,
name|instance
operator|.
name|isStatisticsPluginEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|instance
operator|.
name|disableStatisticsPlugin
argument_list|()
expr_stmt|;
name|assertFalse
argument_list|(
literal|"Statistics plugin not disabled"
argument_list|,
name|instance
operator|.
name|isStatisticsPluginEnabled
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAdvisoryForDeliveryConfig
parameter_list|()
throws|throws
name|Exception
block|{
name|assertFalse
argument_list|(
literal|"Advisory messages for delivery should not be enabled by default"
argument_list|,
name|instance
operator|.
name|isAdvisoryForDeliveryEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|instance
operator|.
name|enableAdvisoryForDelivery
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Advisory messages for delivery not enabled"
argument_list|,
name|instance
operator|.
name|isAdvisoryForDeliveryEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|instance
operator|.
name|disableAdvisoryForDelivery
argument_list|()
expr_stmt|;
name|assertFalse
argument_list|(
literal|"Advisory messages for delivery not disabled"
argument_list|,
name|instance
operator|.
name|isAdvisoryForDeliveryEnabled
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAdvisoryForConsumedConfig
parameter_list|()
throws|throws
name|Exception
block|{
name|assertFalse
argument_list|(
literal|"Advisory messages for consumed should not be enabled by default"
argument_list|,
name|instance
operator|.
name|isAdvisoryForConsumedEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|instance
operator|.
name|enableAdvisoryForConsumed
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Advisory messages for consumed not enabled"
argument_list|,
name|instance
operator|.
name|isAdvisoryForConsumedEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|instance
operator|.
name|disableAdvisoryForConsumed
argument_list|()
expr_stmt|;
name|assertFalse
argument_list|(
literal|"Advisory messages for consumed not disabled"
argument_list|,
name|instance
operator|.
name|isAdvisoryForConsumedEnabled
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAdvisoryForDiscardingMessagesConfig
parameter_list|()
throws|throws
name|Exception
block|{
name|assertFalse
argument_list|(
literal|"Advisory messages for discarding messages should not be enabled by default"
argument_list|,
name|instance
operator|.
name|isAdvisoryForDiscardingMessagesEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|instance
operator|.
name|enableAdvisoryForDiscardingMessages
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Advisory messages for discarding messages not enabled"
argument_list|,
name|instance
operator|.
name|isAdvisoryForDiscardingMessagesEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|instance
operator|.
name|disableAdvisoryForDiscardingMessages
argument_list|()
expr_stmt|;
name|assertFalse
argument_list|(
literal|"Advisory messages for discarding messages not disabled"
argument_list|,
name|instance
operator|.
name|isAdvisoryForDiscardingMessagesEnabled
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAdvisoryForFastProducersConfig
parameter_list|()
throws|throws
name|Exception
block|{
name|assertFalse
argument_list|(
literal|"Advisory messages for fast producers should not be enabled by default"
argument_list|,
name|instance
operator|.
name|isAdvisoryForFastProducersEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|instance
operator|.
name|enableAdvisoryForFastProducers
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Advisory messages for fast producers not enabled"
argument_list|,
name|instance
operator|.
name|isAdvisoryForFastProducersEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|instance
operator|.
name|disableAdvisoryForFastProducers
argument_list|()
expr_stmt|;
name|assertFalse
argument_list|(
literal|"Advisory messages for fast producers not disabled"
argument_list|,
name|instance
operator|.
name|isAdvisoryForFastProducersEnabled
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAdvisoryForSlowConsumersConfig
parameter_list|()
throws|throws
name|Exception
block|{
name|assertFalse
argument_list|(
literal|"Advisory messages for slow consumers should not be enabled by default"
argument_list|,
name|instance
operator|.
name|isAdvisoryForSlowConsumersEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|instance
operator|.
name|enableAdvisoryForSlowConsumers
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Advisory messages for slow consumers not enabled"
argument_list|,
name|instance
operator|.
name|isAdvisoryForSlowConsumersEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|instance
operator|.
name|disableAdvisoryForSlowConsumers
argument_list|()
expr_stmt|;
name|assertFalse
argument_list|(
literal|"Advisory messages for slow consumers not disabled"
argument_list|,
name|instance
operator|.
name|isAdvisoryForSlowConsumersEnabled
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

