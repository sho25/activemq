begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|amqp
operator|.
name|transform
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|qpid
operator|.
name|proton
operator|.
name|codec
operator|.
name|WritableBuffer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
import|;
end_import

begin_class
specifier|public
class|class
name|DroppingWritableBuffer
implements|implements
name|WritableBuffer
block|{
name|int
name|pos
init|=
literal|0
decl_stmt|;
annotation|@
name|Override
specifier|public
name|boolean
name|hasRemaining
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|put
parameter_list|(
name|byte
name|b
parameter_list|)
block|{
name|pos
operator|+=
literal|1
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|putFloat
parameter_list|(
name|float
name|f
parameter_list|)
block|{
name|pos
operator|+=
literal|4
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|putDouble
parameter_list|(
name|double
name|d
parameter_list|)
block|{
name|pos
operator|+=
literal|8
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|put
parameter_list|(
name|byte
index|[]
name|src
parameter_list|,
name|int
name|offset
parameter_list|,
name|int
name|length
parameter_list|)
block|{
name|pos
operator|+=
name|length
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|putShort
parameter_list|(
name|short
name|s
parameter_list|)
block|{
name|pos
operator|+=
literal|2
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|putInt
parameter_list|(
name|int
name|i
parameter_list|)
block|{
name|pos
operator|+=
literal|4
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|putLong
parameter_list|(
name|long
name|l
parameter_list|)
block|{
name|pos
operator|+=
literal|8
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|remaining
parameter_list|()
block|{
return|return
name|Integer
operator|.
name|MAX_VALUE
operator|-
name|pos
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|position
parameter_list|()
block|{
return|return
name|pos
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|position
parameter_list|(
name|int
name|position
parameter_list|)
block|{
name|pos
operator|=
name|position
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|put
parameter_list|(
name|ByteBuffer
name|payload
parameter_list|)
block|{
name|pos
operator|+=
name|payload
operator|.
name|remaining
argument_list|()
expr_stmt|;
name|payload
operator|.
name|position
argument_list|(
name|payload
operator|.
name|limit
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|limit
parameter_list|()
block|{
return|return
name|Integer
operator|.
name|MAX_VALUE
return|;
block|}
block|}
end_class

end_unit

