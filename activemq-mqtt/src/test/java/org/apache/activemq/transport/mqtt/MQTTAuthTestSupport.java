begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|mqtt
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerPlugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|filter
operator|.
name|DestinationMapEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|security
operator|.
name|AuthenticationUser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|security
operator|.
name|AuthorizationEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|security
operator|.
name|AuthorizationPlugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|security
operator|.
name|DefaultAuthorizationMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|security
operator|.
name|SimpleAuthenticationPlugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|security
operator|.
name|TempDestinationAuthorizationEntry
import|;
end_import

begin_comment
comment|/**  * Used as a base class for MQTT tests that require Authentication and Authorization  * to be configured on the Broker.  */
end_comment

begin_class
specifier|public
class|class
name|MQTTAuthTestSupport
extends|extends
name|MQTTTestSupport
block|{
specifier|public
name|MQTTAuthTestSupport
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
specifier|public
name|MQTTAuthTestSupport
parameter_list|(
name|String
name|connectorScheme
parameter_list|,
name|boolean
name|useSSL
parameter_list|)
block|{
name|super
argument_list|(
name|connectorScheme
argument_list|,
name|useSSL
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|BrokerPlugin
name|configureAuthentication
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|AuthenticationUser
argument_list|>
name|users
init|=
operator|new
name|ArrayList
argument_list|<
name|AuthenticationUser
argument_list|>
argument_list|()
decl_stmt|;
name|users
operator|.
name|add
argument_list|(
operator|new
name|AuthenticationUser
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|,
literal|"users,admins"
argument_list|)
argument_list|)
expr_stmt|;
name|users
operator|.
name|add
argument_list|(
operator|new
name|AuthenticationUser
argument_list|(
literal|"user"
argument_list|,
literal|"password"
argument_list|,
literal|"users"
argument_list|)
argument_list|)
expr_stmt|;
name|users
operator|.
name|add
argument_list|(
operator|new
name|AuthenticationUser
argument_list|(
literal|"guest"
argument_list|,
literal|"password"
argument_list|,
literal|"guests"
argument_list|)
argument_list|)
expr_stmt|;
name|SimpleAuthenticationPlugin
name|authenticationPlugin
init|=
operator|new
name|SimpleAuthenticationPlugin
argument_list|(
name|users
argument_list|)
decl_stmt|;
name|authenticationPlugin
operator|.
name|setAnonymousAccessAllowed
argument_list|(
literal|true
argument_list|)
expr_stmt|;
return|return
name|authenticationPlugin
return|;
block|}
annotation|@
name|Override
specifier|protected
name|BrokerPlugin
name|configureAuthorization
parameter_list|()
throws|throws
name|Exception
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
name|List
argument_list|<
name|DestinationMapEntry
argument_list|>
name|authorizationEntries
init|=
operator|new
name|ArrayList
argument_list|<
name|DestinationMapEntry
argument_list|>
argument_list|()
decl_stmt|;
name|AuthorizationEntry
name|entry
init|=
operator|new
name|AuthorizationEntry
argument_list|()
decl_stmt|;
name|entry
operator|.
name|setQueue
argument_list|(
literal|">"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setRead
argument_list|(
literal|"admins"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setWrite
argument_list|(
literal|"admins"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setAdmin
argument_list|(
literal|"admins"
argument_list|)
expr_stmt|;
name|authorizationEntries
operator|.
name|add
argument_list|(
name|entry
argument_list|)
expr_stmt|;
name|entry
operator|=
operator|new
name|AuthorizationEntry
argument_list|()
expr_stmt|;
name|entry
operator|.
name|setQueue
argument_list|(
literal|"USERS.>"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setRead
argument_list|(
literal|"users"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setWrite
argument_list|(
literal|"users"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setAdmin
argument_list|(
literal|"users"
argument_list|)
expr_stmt|;
name|authorizationEntries
operator|.
name|add
argument_list|(
name|entry
argument_list|)
expr_stmt|;
name|entry
operator|=
operator|new
name|AuthorizationEntry
argument_list|()
expr_stmt|;
name|entry
operator|.
name|setQueue
argument_list|(
literal|"GUEST.>"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setRead
argument_list|(
literal|"guests"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setWrite
argument_list|(
literal|"guests,users"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setAdmin
argument_list|(
literal|"guests,users"
argument_list|)
expr_stmt|;
name|authorizationEntries
operator|.
name|add
argument_list|(
name|entry
argument_list|)
expr_stmt|;
name|entry
operator|=
operator|new
name|AuthorizationEntry
argument_list|()
expr_stmt|;
name|entry
operator|.
name|setTopic
argument_list|(
literal|">"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setRead
argument_list|(
literal|"admins"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setWrite
argument_list|(
literal|"admins"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setAdmin
argument_list|(
literal|"admins"
argument_list|)
expr_stmt|;
name|authorizationEntries
operator|.
name|add
argument_list|(
name|entry
argument_list|)
expr_stmt|;
name|entry
operator|=
operator|new
name|AuthorizationEntry
argument_list|()
expr_stmt|;
name|entry
operator|.
name|setTopic
argument_list|(
literal|"USERS.>"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setRead
argument_list|(
literal|"users"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setWrite
argument_list|(
literal|"users"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setAdmin
argument_list|(
literal|"users"
argument_list|)
expr_stmt|;
name|authorizationEntries
operator|.
name|add
argument_list|(
name|entry
argument_list|)
expr_stmt|;
name|entry
operator|=
operator|new
name|AuthorizationEntry
argument_list|()
expr_stmt|;
name|entry
operator|.
name|setTopic
argument_list|(
literal|"GUEST.>"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setRead
argument_list|(
literal|"guests"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setWrite
argument_list|(
literal|"guests,users"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setAdmin
argument_list|(
literal|"guests,users"
argument_list|)
expr_stmt|;
name|authorizationEntries
operator|.
name|add
argument_list|(
name|entry
argument_list|)
expr_stmt|;
name|entry
operator|=
operator|new
name|AuthorizationEntry
argument_list|()
expr_stmt|;
name|entry
operator|.
name|setTopic
argument_list|(
literal|"anonymous"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setRead
argument_list|(
literal|"guests,anonymous"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setWrite
argument_list|(
literal|"guests,users,anonymous"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setAdmin
argument_list|(
literal|"guests,users,anonymous"
argument_list|)
expr_stmt|;
name|authorizationEntries
operator|.
name|add
argument_list|(
name|entry
argument_list|)
expr_stmt|;
name|entry
operator|=
operator|new
name|AuthorizationEntry
argument_list|()
expr_stmt|;
name|entry
operator|.
name|setTopic
argument_list|(
literal|"ActiveMQ.Advisory.>"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setRead
argument_list|(
literal|"guests,users,anonymous"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setWrite
argument_list|(
literal|"guests,users,anonymous"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setAdmin
argument_list|(
literal|"guests,users,anonymous"
argument_list|)
expr_stmt|;
name|authorizationEntries
operator|.
name|add
argument_list|(
name|entry
argument_list|)
expr_stmt|;
name|TempDestinationAuthorizationEntry
name|tempEntry
init|=
operator|new
name|TempDestinationAuthorizationEntry
argument_list|()
decl_stmt|;
name|tempEntry
operator|.
name|setRead
argument_list|(
literal|"admins"
argument_list|)
expr_stmt|;
name|tempEntry
operator|.
name|setWrite
argument_list|(
literal|"admins"
argument_list|)
expr_stmt|;
name|tempEntry
operator|.
name|setAdmin
argument_list|(
literal|"admins"
argument_list|)
expr_stmt|;
name|DefaultAuthorizationMap
name|authorizationMap
init|=
operator|new
name|DefaultAuthorizationMap
argument_list|(
name|authorizationEntries
argument_list|)
decl_stmt|;
name|authorizationMap
operator|.
name|setTempDestinationAuthorizationEntry
argument_list|(
name|tempEntry
argument_list|)
expr_stmt|;
name|AuthorizationPlugin
name|authorizationPlugin
init|=
operator|new
name|AuthorizationPlugin
argument_list|(
name|authorizationMap
argument_list|)
decl_stmt|;
return|return
name|authorizationPlugin
return|;
block|}
block|}
end_class

end_unit

