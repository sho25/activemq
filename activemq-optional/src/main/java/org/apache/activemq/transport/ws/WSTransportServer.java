begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|ws
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetSocketAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|command
operator|.
name|BrokerInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|TransportServerSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|util
operator|.
name|ServiceStopper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|Connector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|bio
operator|.
name|SocketConnector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|session
operator|.
name|SessionHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|servlet
operator|.
name|ServletContextHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|servlet
operator|.
name|ServletHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|servlet
operator|.
name|ServletHolder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|servlet
operator|.
name|ServletMapping
import|;
end_import

begin_comment
comment|/**  * Creates a web server and registers web socket server  *  */
end_comment

begin_class
specifier|public
class|class
name|WSTransportServer
extends|extends
name|TransportServerSupport
block|{
specifier|private
name|URI
name|bindAddress
decl_stmt|;
specifier|private
name|Server
name|server
decl_stmt|;
specifier|private
name|Connector
name|connector
decl_stmt|;
specifier|public
name|WSTransportServer
parameter_list|(
name|URI
name|location
parameter_list|)
block|{
name|super
argument_list|(
name|location
argument_list|)
expr_stmt|;
name|this
operator|.
name|bindAddress
operator|=
name|location
expr_stmt|;
block|}
specifier|protected
name|void
name|doStart
parameter_list|()
throws|throws
name|Exception
block|{
name|server
operator|=
operator|new
name|Server
argument_list|()
expr_stmt|;
if|if
condition|(
name|connector
operator|==
literal|null
condition|)
block|{
name|connector
operator|=
operator|new
name|SocketConnector
argument_list|()
expr_stmt|;
block|}
name|connector
operator|.
name|setHost
argument_list|(
name|bindAddress
operator|.
name|getHost
argument_list|()
argument_list|)
expr_stmt|;
name|connector
operator|.
name|setPort
argument_list|(
name|bindAddress
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
name|server
operator|.
name|setConnectors
argument_list|(
operator|new
name|Connector
index|[]
block|{
name|connector
block|}
argument_list|)
expr_stmt|;
name|ServletContextHandler
name|contextHandler
init|=
operator|new
name|ServletContextHandler
argument_list|()
decl_stmt|;
name|contextHandler
operator|.
name|setContextPath
argument_list|(
literal|"/"
argument_list|)
expr_stmt|;
name|contextHandler
operator|.
name|setServer
argument_list|(
name|server
argument_list|)
expr_stmt|;
name|server
operator|.
name|setHandler
argument_list|(
name|contextHandler
argument_list|)
expr_stmt|;
name|SessionHandler
name|sessionHandler
init|=
operator|new
name|SessionHandler
argument_list|()
decl_stmt|;
name|contextHandler
operator|.
name|setHandler
argument_list|(
name|sessionHandler
argument_list|)
expr_stmt|;
name|ServletHandler
name|servletHandler
init|=
operator|new
name|ServletHandler
argument_list|()
decl_stmt|;
name|sessionHandler
operator|.
name|setHandler
argument_list|(
name|servletHandler
argument_list|)
expr_stmt|;
name|ServletHolder
name|holder
init|=
operator|new
name|ServletHolder
argument_list|()
decl_stmt|;
name|holder
operator|.
name|setName
argument_list|(
literal|"WSStomp"
argument_list|)
expr_stmt|;
name|holder
operator|.
name|setClassName
argument_list|(
name|StompServlet
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|servletHandler
operator|.
name|setServlets
argument_list|(
operator|new
name|ServletHolder
index|[]
block|{
name|holder
block|}
argument_list|)
expr_stmt|;
name|ServletMapping
name|mapping
init|=
operator|new
name|ServletMapping
argument_list|()
decl_stmt|;
name|mapping
operator|.
name|setServletName
argument_list|(
literal|"WSStomp"
argument_list|)
expr_stmt|;
name|mapping
operator|.
name|setPathSpec
argument_list|(
literal|"/*"
argument_list|)
expr_stmt|;
name|servletHandler
operator|.
name|setServletMappings
argument_list|(
operator|new
name|ServletMapping
index|[]
block|{
name|mapping
block|}
argument_list|)
expr_stmt|;
name|contextHandler
operator|.
name|setAttribute
argument_list|(
literal|"acceptListener"
argument_list|,
name|getAcceptListener
argument_list|()
argument_list|)
expr_stmt|;
name|server
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|doStop
parameter_list|(
name|ServiceStopper
name|stopper
parameter_list|)
throws|throws
name|Exception
block|{
name|Server
name|temp
init|=
name|server
decl_stmt|;
name|server
operator|=
literal|null
expr_stmt|;
if|if
condition|(
name|temp
operator|!=
literal|null
condition|)
block|{
name|temp
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|InetSocketAddress
name|getSocketAddress
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|setBrokerInfo
parameter_list|(
name|BrokerInfo
name|brokerInfo
parameter_list|)
block|{     }
block|}
end_class

end_unit

