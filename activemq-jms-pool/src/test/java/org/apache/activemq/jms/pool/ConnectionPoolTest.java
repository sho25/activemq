begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|jms
operator|.
name|pool
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|JMSException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|ConnectionPoolTest
extends|extends
name|JmsPoolTestSupport
block|{
specifier|private
class|class
name|PooledConnectionFactoryTest
extends|extends
name|PooledConnectionFactory
block|{
name|ConnectionPool
name|pool
init|=
literal|null
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|Connection
name|newPooledConnection
parameter_list|(
name|ConnectionPool
name|connection
parameter_list|)
block|{
name|connection
operator|.
name|setIdleTimeout
argument_list|(
name|Integer
operator|.
name|MAX_VALUE
argument_list|)
expr_stmt|;
name|this
operator|.
name|pool
operator|=
name|connection
expr_stmt|;
name|Connection
name|ret
init|=
name|super
operator|.
name|newPooledConnection
argument_list|(
name|connection
argument_list|)
decl_stmt|;
name|ConnectionPool
name|cp
init|=
operator|(
operator|(
name|PooledConnection
operator|)
name|ret
operator|)
operator|.
name|pool
decl_stmt|;
name|cp
operator|.
name|decrementReferenceCount
argument_list|()
expr_stmt|;
comment|// will fail if timeout does overflow
name|assertFalse
argument_list|(
name|cp
operator|.
name|expiredCheck
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|ret
return|;
block|}
specifier|public
name|ConnectionPool
name|getPool
parameter_list|()
block|{
return|return
name|pool
return|;
block|}
block|}
annotation|@
name|Override
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|brokerService
operator|=
operator|new
name|BrokerService
argument_list|()
expr_stmt|;
name|brokerService
operator|.
name|setDeleteAllMessagesOnStartup
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|brokerService
operator|.
name|setPersistent
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|brokerService
operator|.
name|setUseJmx
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|brokerService
operator|.
name|setAdvisorySupport
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|brokerService
operator|.
name|setSchedulerSupport
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|brokerService
operator|.
name|start
argument_list|()
expr_stmt|;
name|brokerService
operator|.
name|waitUntilStarted
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|120000
argument_list|)
specifier|public
name|void
name|demo
parameter_list|()
throws|throws
name|JMSException
throws|,
name|InterruptedException
block|{
specifier|final
name|PooledConnectionFactoryTest
name|pooled
init|=
operator|new
name|PooledConnectionFactoryTest
argument_list|()
decl_stmt|;
name|pooled
operator|.
name|setConnectionFactory
argument_list|(
operator|new
name|ActiveMQConnectionFactory
argument_list|(
literal|"vm://localhost?create=false"
argument_list|)
argument_list|)
expr_stmt|;
name|pooled
operator|.
name|setMaxConnections
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|pooled
operator|.
name|setExpiryTimeout
argument_list|(
name|Long
operator|.
name|MAX_VALUE
argument_list|)
expr_stmt|;
name|pooled
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

