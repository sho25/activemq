begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|jmx
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|openmbean
operator|.
name|CompositeData
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|openmbean
operator|.
name|TabularData
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * @version $Revision: 1.1 $  */
end_comment

begin_class
specifier|public
class|class
name|CompositeDataHelper
block|{
comment|/**      * Extracts the named TabularData field from the CompositeData and converts it to a Map      * which is the method used to get the typesafe user properties.      */
specifier|public
specifier|static
name|Map
name|getTabularMap
parameter_list|(
name|CompositeData
name|cdata
parameter_list|,
name|String
name|fieldName
parameter_list|)
block|{
name|Map
name|map
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
name|Object
name|tabularObject
init|=
name|cdata
operator|.
name|get
argument_list|(
name|fieldName
argument_list|)
decl_stmt|;
if|if
condition|(
name|tabularObject
operator|instanceof
name|TabularData
condition|)
block|{
name|TabularData
name|tabularData
init|=
operator|(
name|TabularData
operator|)
name|tabularObject
decl_stmt|;
name|Collection
argument_list|<
name|CompositeData
argument_list|>
name|values
init|=
name|tabularData
operator|.
name|values
argument_list|()
decl_stmt|;
for|for
control|(
name|CompositeData
name|compositeData
range|:
name|values
control|)
block|{
name|Object
name|key
init|=
name|compositeData
operator|.
name|get
argument_list|(
literal|"key"
argument_list|)
decl_stmt|;
name|Object
name|value
init|=
name|compositeData
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|map
return|;
block|}
block|}
end_class

end_unit

