begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|shiro
operator|.
name|authz
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|shiro
operator|.
name|authz
operator|.
name|Permission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|shiro
operator|.
name|authz
operator|.
name|permission
operator|.
name|WildcardPermission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|shiro
operator|.
name|authz
operator|.
name|permission
operator|.
name|WildcardPermissionResolver
import|;
end_import

begin_comment
comment|/**  * {@link WildcardPermissionResolver} that can create case-sensitive (or case-insensitive)  * {@link WildcardPermission} instances as expected for ActiveMQ.  *  * @since 5.10.0  */
end_comment

begin_class
specifier|public
class|class
name|ActiveMQPermissionResolver
extends|extends
name|WildcardPermissionResolver
block|{
specifier|private
name|boolean
name|caseSensitive
decl_stmt|;
specifier|public
name|ActiveMQPermissionResolver
parameter_list|()
block|{
name|caseSensitive
operator|=
literal|true
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCaseSensitive
parameter_list|()
block|{
return|return
name|caseSensitive
return|;
block|}
specifier|public
name|void
name|setCaseSensitive
parameter_list|(
name|boolean
name|caseSensitive
parameter_list|)
block|{
name|this
operator|.
name|caseSensitive
operator|=
name|caseSensitive
expr_stmt|;
block|}
comment|/**      * Creates a new {@link WildcardPermission} instance, with case-sensitivity determined by the      * {@link #isCaseSensitive() caseSensitive} setting.      *      * @param permissionString the wildcard permission-formatted string.      * @return a new {@link WildcardPermission} instance, with case-sensitivity determined by the      *         {@link #isCaseSensitive() caseSensitive} setting.      */
annotation|@
name|Override
specifier|public
name|Permission
name|resolvePermission
parameter_list|(
name|String
name|permissionString
parameter_list|)
block|{
return|return
operator|new
name|ActiveMQWildcardPermission
argument_list|(
name|permissionString
argument_list|,
name|isCaseSensitive
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

