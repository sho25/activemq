begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|kahadb
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|store
operator|.
name|MessageStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_comment
comment|/**  * This test is for AMQ-5748 to verify that {@link MessageStore} implements correctly  * compute the size of the messages in the store.  *  *  */
end_comment

begin_class
specifier|public
class|class
name|MultiKahaDBMessageStoreSizeTest
extends|extends
name|AbstractKahaDBMessageStoreSizeTest
block|{
annotation|@
name|Override
specifier|protected
name|void
name|createStore
parameter_list|(
name|boolean
name|deleteAllMessages
parameter_list|,
name|String
name|directory
parameter_list|)
throws|throws
name|Exception
block|{
name|MultiKahaDBPersistenceAdapter
name|multiStore
init|=
operator|new
name|MultiKahaDBPersistenceAdapter
argument_list|()
decl_stmt|;
name|store
operator|=
name|multiStore
expr_stmt|;
name|File
name|fileDir
init|=
operator|new
name|File
argument_list|(
name|directory
argument_list|)
decl_stmt|;
if|if
condition|(
name|deleteAllMessages
operator|&&
name|fileDir
operator|.
name|exists
argument_list|()
condition|)
block|{
name|FileUtils
operator|.
name|cleanDirectory
argument_list|(
operator|new
name|File
argument_list|(
name|directory
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|KahaDBPersistenceAdapter
name|localStore
init|=
operator|new
name|KahaDBPersistenceAdapter
argument_list|()
decl_stmt|;
name|localStore
operator|.
name|setJournalMaxFileLength
argument_list|(
literal|1024
operator|*
literal|512
argument_list|)
expr_stmt|;
name|localStore
operator|.
name|setDirectory
argument_list|(
operator|new
name|File
argument_list|(
name|directory
argument_list|)
argument_list|)
expr_stmt|;
name|FilteredKahaDBPersistenceAdapter
name|filtered
init|=
operator|new
name|FilteredKahaDBPersistenceAdapter
argument_list|()
decl_stmt|;
name|filtered
operator|.
name|setPersistenceAdapter
argument_list|(
name|localStore
argument_list|)
expr_stmt|;
name|filtered
operator|.
name|setPerDestination
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|FilteredKahaDBPersistenceAdapter
argument_list|>
name|stores
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|stores
operator|.
name|add
argument_list|(
name|filtered
argument_list|)
expr_stmt|;
name|multiStore
operator|.
name|setFilteredPersistenceAdapters
argument_list|(
name|stores
argument_list|)
expr_stmt|;
name|multiStore
operator|.
name|setDirectory
argument_list|(
name|fileDir
argument_list|)
expr_stmt|;
name|multiStore
operator|.
name|start
argument_list|()
expr_stmt|;
name|messageStore
operator|=
name|store
operator|.
name|createQueueMessageStore
argument_list|(
name|destination
argument_list|)
expr_stmt|;
name|messageStore
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|String
name|getVersion5Dir
parameter_list|()
block|{
return|return
literal|"src/test/resources/org/apache/activemq/store/kahadb/MultiKahaMessageStoreTest/version5"
return|;
block|}
block|}
end_class

end_unit

