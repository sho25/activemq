begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|plugin
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|schema
operator|.
name|core
operator|.
name|DtoBroker
import|;
end_import

begin_class
specifier|public
class|class
name|ProcessorFactory
block|{
specifier|public
specifier|static
name|ConfigurationProcessor
name|createProcessor
parameter_list|(
name|RuntimeConfigurationBroker
name|plugin
parameter_list|,
name|Class
name|dtoClass
parameter_list|)
block|{
if|if
condition|(
name|dtoClass
operator|.
name|equals
argument_list|(
name|DtoBroker
operator|.
name|Plugins
operator|.
name|class
argument_list|)
condition|)
block|{
return|return
operator|new
name|PluginsProcessor
argument_list|(
name|plugin
argument_list|,
name|dtoClass
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|dtoClass
operator|.
name|equals
argument_list|(
name|DtoBroker
operator|.
name|NetworkConnectors
operator|.
name|class
argument_list|)
condition|)
block|{
return|return
operator|new
name|NetworkConnectorsProcessor
argument_list|(
name|plugin
argument_list|,
name|dtoClass
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|dtoClass
operator|.
name|equals
argument_list|(
name|DtoBroker
operator|.
name|DestinationPolicy
operator|.
name|class
argument_list|)
condition|)
block|{
return|return
operator|new
name|DestinationPolicyProcessor
argument_list|(
name|plugin
argument_list|,
name|dtoClass
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|dtoClass
operator|.
name|equals
argument_list|(
name|DtoBroker
operator|.
name|DestinationInterceptors
operator|.
name|class
argument_list|)
condition|)
block|{
return|return
operator|new
name|DestinationInterceptorProcessor
argument_list|(
name|plugin
argument_list|,
name|dtoClass
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|dtoClass
operator|.
name|equals
argument_list|(
name|DtoBroker
operator|.
name|Destinations
operator|.
name|class
argument_list|)
condition|)
block|{
return|return
operator|new
name|DestinationsProcessor
argument_list|(
name|plugin
argument_list|,
name|dtoClass
argument_list|)
return|;
block|}
else|else
block|{
return|return
operator|new
name|DefaultConfigurationProcessor
argument_list|(
name|plugin
argument_list|,
name|dtoClass
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

