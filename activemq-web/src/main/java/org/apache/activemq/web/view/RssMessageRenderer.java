begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|web
operator|.
name|view
package|;
end_package

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|syndication
operator|.
name|feed
operator|.
name|synd
operator|.
name|SyndContent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|syndication
operator|.
name|feed
operator|.
name|synd
operator|.
name|SyndContentImpl
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|syndication
operator|.
name|feed
operator|.
name|synd
operator|.
name|SyndEntry
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|syndication
operator|.
name|feed
operator|.
name|synd
operator|.
name|SyndEntryImpl
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|syndication
operator|.
name|feed
operator|.
name|synd
operator|.
name|SyndFeed
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|syndication
operator|.
name|feed
operator|.
name|synd
operator|.
name|SyndFeedImpl
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|syndication
operator|.
name|io
operator|.
name|FeedException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|syndication
operator|.
name|io
operator|.
name|SyndFeedOutput
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|JMSException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|QueueBrowser
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|TextMessage
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * This renderer uses XStream to render messages on a queue as full XML elements  *   * @version $Revision: $  */
end_comment

begin_class
specifier|public
class|class
name|RssMessageRenderer
extends|extends
name|SimpleMessageRenderer
block|{
comment|//private String feedType = "atom_0.3";
specifier|private
name|String
name|feedType
init|=
literal|"rss_2.0"
decl_stmt|;
specifier|private
name|SyndFeed
name|feed
decl_stmt|;
specifier|private
name|String
name|description
init|=
literal|"This feed is auto-generated by Apache ActiveMQ"
decl_stmt|;
specifier|private
name|String
name|entryContentType
init|=
literal|"text/plain"
decl_stmt|;
specifier|public
name|void
name|renderMessage
parameter_list|(
name|PrintWriter
name|writer
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|,
name|QueueBrowser
name|browser
parameter_list|,
name|Message
name|message
parameter_list|)
throws|throws
name|JMSException
block|{
name|SyndFeed
name|feed
init|=
name|getFeed
argument_list|(
name|browser
argument_list|,
name|request
argument_list|)
decl_stmt|;
name|List
name|entries
init|=
name|feed
operator|.
name|getEntries
argument_list|()
decl_stmt|;
name|SyndEntry
name|entry
init|=
name|createEntry
argument_list|(
name|browser
argument_list|,
name|message
argument_list|,
name|request
argument_list|)
decl_stmt|;
name|SyndContent
name|description
init|=
name|createEntryContent
argument_list|(
name|browser
argument_list|,
name|message
argument_list|,
name|request
argument_list|)
decl_stmt|;
name|entry
operator|.
name|setDescription
argument_list|(
name|description
argument_list|)
expr_stmt|;
name|entries
operator|.
name|add
argument_list|(
name|entry
argument_list|)
expr_stmt|;
block|}
comment|// Properties
comment|// -------------------------------------------------------------------------
specifier|public
name|String
name|getDescription
parameter_list|()
block|{
return|return
name|description
return|;
block|}
specifier|public
name|void
name|setDescription
parameter_list|(
name|String
name|feedDescription
parameter_list|)
block|{
name|this
operator|.
name|description
operator|=
name|feedDescription
expr_stmt|;
block|}
specifier|public
name|String
name|getFeedType
parameter_list|()
block|{
return|return
name|feedType
return|;
block|}
specifier|public
name|void
name|setFeedType
parameter_list|(
name|String
name|feedType
parameter_list|)
block|{
name|this
operator|.
name|feedType
operator|=
name|feedType
expr_stmt|;
block|}
specifier|public
name|String
name|getEntryContentType
parameter_list|()
block|{
return|return
name|entryContentType
return|;
block|}
specifier|public
name|void
name|setEntryContentType
parameter_list|(
name|String
name|entryContentType
parameter_list|)
block|{
name|this
operator|.
name|entryContentType
operator|=
name|entryContentType
expr_stmt|;
block|}
comment|// Implementation methods
comment|// -------------------------------------------------------------------------
specifier|protected
name|void
name|printFooter
parameter_list|(
name|PrintWriter
name|writer
parameter_list|,
name|QueueBrowser
name|browser
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|)
throws|throws
name|IOException
throws|,
name|JMSException
throws|,
name|ServletException
block|{
comment|// now lets actually write out the content
name|SyndFeed
name|feed
init|=
name|getFeed
argument_list|(
name|browser
argument_list|,
name|request
argument_list|)
decl_stmt|;
name|SyndFeedOutput
name|output
init|=
operator|new
name|SyndFeedOutput
argument_list|()
decl_stmt|;
try|try
block|{
name|output
operator|.
name|output
argument_list|(
name|feed
argument_list|,
name|writer
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|FeedException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServletException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
specifier|protected
name|void
name|printHeader
parameter_list|(
name|PrintWriter
name|writer
parameter_list|,
name|QueueBrowser
name|browser
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|)
throws|throws
name|IOException
throws|,
name|JMSException
block|{     }
specifier|public
name|SyndFeed
name|getFeed
parameter_list|(
name|QueueBrowser
name|browser
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|)
throws|throws
name|JMSException
block|{
if|if
condition|(
name|feed
operator|==
literal|null
condition|)
block|{
name|feed
operator|=
name|createFeed
argument_list|(
name|browser
argument_list|,
name|request
argument_list|)
expr_stmt|;
block|}
return|return
name|feed
return|;
block|}
specifier|protected
name|SyndEntry
name|createEntry
parameter_list|(
name|QueueBrowser
name|browser
parameter_list|,
name|Message
name|message
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|)
throws|throws
name|JMSException
block|{
name|SyndEntry
name|entry
init|=
operator|new
name|SyndEntryImpl
argument_list|()
decl_stmt|;
name|String
name|title
init|=
name|message
operator|.
name|getJMSMessageID
argument_list|()
decl_stmt|;
name|entry
operator|.
name|setTitle
argument_list|(
name|title
argument_list|)
expr_stmt|;
name|String
name|link
init|=
name|request
operator|.
name|getRequestURI
argument_list|()
operator|+
literal|"/"
operator|+
name|title
decl_stmt|;
name|entry
operator|.
name|setLink
argument_list|(
name|link
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setPublishedDate
argument_list|(
operator|new
name|Date
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|entry
return|;
block|}
specifier|protected
name|SyndContent
name|createEntryContent
parameter_list|(
name|QueueBrowser
name|browser
parameter_list|,
name|Message
name|message
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|)
throws|throws
name|JMSException
block|{
name|SyndContent
name|description
init|=
operator|new
name|SyndContentImpl
argument_list|()
decl_stmt|;
name|description
operator|.
name|setType
argument_list|(
name|entryContentType
argument_list|)
expr_stmt|;
if|if
condition|(
name|message
operator|instanceof
name|TextMessage
condition|)
block|{
name|String
name|text
init|=
operator|(
operator|(
name|TextMessage
operator|)
name|message
operator|)
operator|.
name|getText
argument_list|()
decl_stmt|;
name|description
operator|.
name|setValue
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
return|return
name|description
return|;
block|}
specifier|protected
name|SyndFeed
name|createFeed
parameter_list|(
name|QueueBrowser
name|browser
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|)
throws|throws
name|JMSException
block|{
name|SyndFeed
name|feed
init|=
operator|new
name|SyndFeedImpl
argument_list|()
decl_stmt|;
name|feed
operator|.
name|setFeedType
argument_list|(
name|feedType
argument_list|)
expr_stmt|;
name|String
name|title
init|=
name|browser
operator|.
name|getQueue
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|selector
init|=
name|browser
operator|.
name|getMessageSelector
argument_list|()
decl_stmt|;
if|if
condition|(
name|selector
operator|!=
literal|null
condition|)
block|{
name|title
operator|+=
literal|" with selector: "
operator|+
name|selector
expr_stmt|;
block|}
name|feed
operator|.
name|setTitle
argument_list|(
name|title
argument_list|)
expr_stmt|;
name|feed
operator|.
name|setLink
argument_list|(
name|request
operator|.
name|getRequestURI
argument_list|()
argument_list|)
expr_stmt|;
name|feed
operator|.
name|setDescription
argument_list|(
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|feed
return|;
block|}
block|}
end_class

end_unit

