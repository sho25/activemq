begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|tool
operator|.
name|sampler
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|tool
operator|.
name|reports
operator|.
name|AbstractPerfReportWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
specifier|public
class|class
name|ThroughputSamplerTask
extends|extends
name|AbstractPerformanceSampler
block|{
specifier|private
specifier|final
name|Object
name|mutex
init|=
operator|new
name|Object
argument_list|()
decl_stmt|;
specifier|private
name|List
name|clients
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
specifier|public
name|void
name|registerClient
parameter_list|(
name|MeasurableClient
name|client
parameter_list|)
block|{
synchronized|synchronized
init|(
name|mutex
init|)
block|{
name|clients
operator|.
name|add
argument_list|(
name|client
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|sampleData
parameter_list|()
block|{
for|for
control|(
name|Iterator
name|i
init|=
name|clients
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|MeasurableClient
name|client
init|=
operator|(
name|MeasurableClient
operator|)
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|perfReportWriter
operator|!=
literal|null
condition|)
block|{
name|perfReportWriter
operator|.
name|writeCsvData
argument_list|(
name|AbstractPerfReportWriter
operator|.
name|REPORT_PLUGIN_THROUGHPUT
argument_list|,
literal|"index="
operator|+
name|sampleIndex
operator|+
literal|",clientName="
operator|+
name|client
operator|.
name|getClientName
argument_list|()
operator|+
literal|",throughput="
operator|+
name|client
operator|.
name|getThroughput
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|client
operator|.
name|reset
argument_list|()
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|onSamplerStart
parameter_list|()
block|{
comment|// Reset the throughput of the clients
for|for
control|(
name|Iterator
name|i
init|=
name|clients
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|MeasurableClient
name|client
init|=
operator|(
name|MeasurableClient
operator|)
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
name|client
operator|.
name|reset
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

