begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|util
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|helpers
operator|.
name|LogLog
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|ConnectionFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|JMSException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|InitialContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|NamingException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_comment
comment|/**  * A JMS 1.1 log4j appender which uses JNDI to locate a JMS ConnectionFactory  * to use for logging events.  *  * @version $Revision$  */
end_comment

begin_class
specifier|public
class|class
name|JndiJmsLogAppender
extends|extends
name|JmsLogAppenderSupport
block|{
specifier|private
name|String
name|jndiName
decl_stmt|;
specifier|private
name|String
name|userName
decl_stmt|;
specifier|private
name|String
name|password
decl_stmt|;
specifier|private
name|String
name|initialContextFactoryName
decl_stmt|;
specifier|private
name|String
name|providerURL
decl_stmt|;
specifier|private
name|String
name|urlPkgPrefixes
decl_stmt|;
specifier|private
name|String
name|securityPrincipalName
decl_stmt|;
specifier|private
name|String
name|securityCredentials
decl_stmt|;
specifier|public
name|JndiJmsLogAppender
parameter_list|()
block|{     }
specifier|public
name|String
name|getJndiName
parameter_list|()
block|{
return|return
name|jndiName
return|;
block|}
specifier|public
name|void
name|setJndiName
parameter_list|(
name|String
name|jndiName
parameter_list|)
block|{
name|this
operator|.
name|jndiName
operator|=
name|jndiName
expr_stmt|;
block|}
specifier|public
name|String
name|getUserName
parameter_list|()
block|{
return|return
name|userName
return|;
block|}
specifier|public
name|void
name|setUserName
parameter_list|(
name|String
name|userName
parameter_list|)
block|{
name|this
operator|.
name|userName
operator|=
name|userName
expr_stmt|;
block|}
specifier|public
name|String
name|getPassword
parameter_list|()
block|{
return|return
name|password
return|;
block|}
specifier|public
name|void
name|setPassword
parameter_list|(
name|String
name|password
parameter_list|)
block|{
name|this
operator|.
name|password
operator|=
name|password
expr_stmt|;
block|}
comment|// to customize the JNDI context
comment|//-------------------------------------------------------------------------
specifier|public
name|String
name|getInitialContextFactoryName
parameter_list|()
block|{
return|return
name|initialContextFactoryName
return|;
block|}
specifier|public
name|void
name|setInitialContextFactoryName
parameter_list|(
name|String
name|initialContextFactoryName
parameter_list|)
block|{
name|this
operator|.
name|initialContextFactoryName
operator|=
name|initialContextFactoryName
expr_stmt|;
block|}
specifier|public
name|String
name|getProviderURL
parameter_list|()
block|{
return|return
name|providerURL
return|;
block|}
specifier|public
name|void
name|setProviderURL
parameter_list|(
name|String
name|providerURL
parameter_list|)
block|{
name|this
operator|.
name|providerURL
operator|=
name|providerURL
expr_stmt|;
block|}
specifier|public
name|String
name|getUrlPkgPrefixes
parameter_list|()
block|{
return|return
name|urlPkgPrefixes
return|;
block|}
specifier|public
name|void
name|setUrlPkgPrefixes
parameter_list|(
name|String
name|urlPkgPrefixes
parameter_list|)
block|{
name|this
operator|.
name|urlPkgPrefixes
operator|=
name|urlPkgPrefixes
expr_stmt|;
block|}
specifier|public
name|String
name|getSecurityPrincipalName
parameter_list|()
block|{
return|return
name|securityPrincipalName
return|;
block|}
specifier|public
name|void
name|setSecurityPrincipalName
parameter_list|(
name|String
name|securityPrincipalName
parameter_list|)
block|{
name|this
operator|.
name|securityPrincipalName
operator|=
name|securityPrincipalName
expr_stmt|;
block|}
specifier|public
name|String
name|getSecurityCredentials
parameter_list|()
block|{
return|return
name|securityCredentials
return|;
block|}
specifier|public
name|void
name|setSecurityCredentials
parameter_list|(
name|String
name|securityCredentials
parameter_list|)
block|{
name|this
operator|.
name|securityCredentials
operator|=
name|securityCredentials
expr_stmt|;
block|}
comment|// Implementation methods
comment|//-------------------------------------------------------------------------
specifier|protected
name|Connection
name|createConnection
parameter_list|()
throws|throws
name|JMSException
throws|,
name|NamingException
block|{
name|InitialContext
name|context
init|=
name|createInitialContext
argument_list|()
decl_stmt|;
name|LogLog
operator|.
name|debug
argument_list|(
literal|"Looking up ConnectionFactory with jndiName: "
operator|+
name|jndiName
argument_list|)
expr_stmt|;
name|ConnectionFactory
name|factory
init|=
operator|(
name|ConnectionFactory
operator|)
name|context
operator|.
name|lookup
argument_list|(
name|jndiName
argument_list|)
decl_stmt|;
if|if
condition|(
name|factory
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|JMSException
argument_list|(
literal|"No such ConnectionFactory for name: "
operator|+
name|jndiName
argument_list|)
throw|;
block|}
if|if
condition|(
name|userName
operator|!=
literal|null
condition|)
block|{
return|return
name|factory
operator|.
name|createConnection
argument_list|(
name|userName
argument_list|,
name|password
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|factory
operator|.
name|createConnection
argument_list|()
return|;
block|}
block|}
specifier|protected
name|InitialContext
name|createInitialContext
parameter_list|()
throws|throws
name|NamingException
block|{
if|if
condition|(
name|initialContextFactoryName
operator|==
literal|null
condition|)
block|{
return|return
operator|new
name|InitialContext
argument_list|()
return|;
block|}
else|else
block|{
name|Hashtable
name|env
init|=
operator|new
name|Hashtable
argument_list|()
decl_stmt|;
name|env
operator|.
name|put
argument_list|(
name|Context
operator|.
name|INITIAL_CONTEXT_FACTORY
argument_list|,
name|initialContextFactoryName
argument_list|)
expr_stmt|;
if|if
condition|(
name|providerURL
operator|!=
literal|null
condition|)
block|{
name|env
operator|.
name|put
argument_list|(
name|Context
operator|.
name|PROVIDER_URL
argument_list|,
name|providerURL
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|LogLog
operator|.
name|warn
argument_list|(
literal|"You have set InitialContextFactoryName option but not the "
operator|+
literal|"ProviderURL. This is likely to cause problems."
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|urlPkgPrefixes
operator|!=
literal|null
condition|)
block|{
name|env
operator|.
name|put
argument_list|(
name|Context
operator|.
name|URL_PKG_PREFIXES
argument_list|,
name|urlPkgPrefixes
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|securityPrincipalName
operator|!=
literal|null
condition|)
block|{
name|env
operator|.
name|put
argument_list|(
name|Context
operator|.
name|SECURITY_PRINCIPAL
argument_list|,
name|securityPrincipalName
argument_list|)
expr_stmt|;
if|if
condition|(
name|securityCredentials
operator|!=
literal|null
condition|)
block|{
name|env
operator|.
name|put
argument_list|(
name|Context
operator|.
name|SECURITY_CREDENTIALS
argument_list|,
name|securityCredentials
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|LogLog
operator|.
name|warn
argument_list|(
literal|"You have set SecurityPrincipalName option but not the "
operator|+
literal|"SecurityCredentials. This is likely to cause problems."
argument_list|)
expr_stmt|;
block|}
block|}
name|LogLog
operator|.
name|debug
argument_list|(
literal|"Looking up JNDI context with environment: "
operator|+
name|env
argument_list|)
expr_stmt|;
return|return
operator|new
name|InitialContext
argument_list|(
name|env
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

