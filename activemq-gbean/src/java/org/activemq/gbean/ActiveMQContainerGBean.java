begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**   *   * Copyright 2004 Protique Ltd  *   * Licensed under the Apache License, Version 2.0 (the "License");   * you may not use this file except in compliance with the License.   * You may obtain a copy of the License at   *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   * See the License for the specific language governing permissions and   * limitations under the License.   *   **/
end_comment

begin_package
package|package
name|org
operator|.
name|activemq
operator|.
name|gbean
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|JMSException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gbean
operator|.
name|GBeanInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gbean
operator|.
name|GBeanInfoBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gbean
operator|.
name|GBeanLifecycle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerAdmin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerContainer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activemq
operator|.
name|broker
operator|.
name|impl
operator|.
name|BrokerContainerImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activemq
operator|.
name|security
operator|.
name|jassjacc
operator|.
name|JassJaccSecurityAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activemq
operator|.
name|security
operator|.
name|jassjacc
operator|.
name|PropertiesConfigLoader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|activemq
operator|.
name|store
operator|.
name|PersistenceAdapter
import|;
end_import

begin_comment
comment|/**  * Default implementation of the ActiveMQ Message Server  *  * @version $Revision: 1.1.1.1 $  */
end_comment

begin_class
specifier|public
class|class
name|ActiveMQContainerGBean
implements|implements
name|GBeanLifecycle
implements|,
name|ActiveMQContainer
block|{
specifier|private
name|Log
name|log
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|String
name|brokerName
decl_stmt|;
specifier|private
name|BrokerContext
name|context
init|=
name|BrokerContext
operator|.
name|getInstance
argument_list|()
decl_stmt|;
specifier|private
name|BrokerContainer
name|container
decl_stmt|;
specifier|private
specifier|final
name|PersistenceAdapter
name|persistenceAdapter
decl_stmt|;
specifier|private
specifier|final
name|String
name|jaasConfiguration
decl_stmt|;
specifier|private
specifier|final
name|Properties
name|securityRoles
decl_stmt|;
comment|//default constructor for use as gbean endpoint.
specifier|public
name|ActiveMQContainerGBean
parameter_list|()
block|{
name|brokerName
operator|=
literal|null
expr_stmt|;
name|jaasConfiguration
operator|=
literal|null
expr_stmt|;
name|securityRoles
operator|=
literal|null
expr_stmt|;
name|persistenceAdapter
operator|=
literal|null
expr_stmt|;
block|}
specifier|public
name|ActiveMQContainerGBean
parameter_list|(
name|String
name|brokerName
parameter_list|,
name|PersistenceAdapter
name|persistenceAdapter
parameter_list|,
name|String
name|jaasConfiguration
parameter_list|,
name|Properties
name|securityRoles
parameter_list|)
block|{
assert|assert
name|brokerName
operator|!=
literal|null
assert|;
assert|assert
name|persistenceAdapter
operator|!=
literal|null
assert|;
name|this
operator|.
name|brokerName
operator|=
name|brokerName
expr_stmt|;
name|this
operator|.
name|jaasConfiguration
operator|=
name|jaasConfiguration
expr_stmt|;
name|this
operator|.
name|persistenceAdapter
operator|=
name|persistenceAdapter
expr_stmt|;
name|this
operator|.
name|securityRoles
operator|=
name|securityRoles
expr_stmt|;
block|}
specifier|public
specifier|synchronized
name|BrokerContainer
name|getBrokerContainer
parameter_list|()
block|{
return|return
name|container
return|;
block|}
comment|/**      * @see org.activemq.gbean.ActiveMQContainer#getBrokerAdmin()      */
specifier|public
name|BrokerAdmin
name|getBrokerAdmin
parameter_list|()
block|{
return|return
name|container
operator|.
name|getBroker
argument_list|()
operator|.
name|getBrokerAdmin
argument_list|()
return|;
block|}
specifier|public
specifier|synchronized
name|void
name|doStart
parameter_list|()
throws|throws
name|Exception
block|{
name|ClassLoader
name|old
init|=
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getContextClassLoader
argument_list|()
decl_stmt|;
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|setContextClassLoader
argument_list|(
name|ActiveMQContainerGBean
operator|.
name|class
operator|.
name|getClassLoader
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
if|if
condition|(
name|container
operator|==
literal|null
condition|)
block|{
name|container
operator|=
name|createContainer
argument_list|()
expr_stmt|;
name|container
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|setContextClassLoader
argument_list|(
name|old
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|synchronized
name|void
name|doStop
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|container
operator|!=
literal|null
condition|)
block|{
name|BrokerContainer
name|temp
init|=
name|container
decl_stmt|;
name|container
operator|=
literal|null
expr_stmt|;
name|temp
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|synchronized
name|void
name|doFail
parameter_list|()
block|{
if|if
condition|(
name|container
operator|!=
literal|null
condition|)
block|{
name|BrokerContainer
name|temp
init|=
name|container
decl_stmt|;
name|container
operator|=
literal|null
expr_stmt|;
try|try
block|{
name|temp
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JMSException
name|e
parameter_list|)
block|{
name|log
operator|.
name|info
argument_list|(
literal|"Caught while closing due to failure: "
operator|+
name|e
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|protected
name|BrokerContainer
name|createContainer
parameter_list|()
throws|throws
name|Exception
block|{
name|BrokerContainerImpl
name|answer
init|=
operator|new
name|BrokerContainerImpl
argument_list|(
name|brokerName
argument_list|,
name|context
argument_list|)
decl_stmt|;
name|answer
operator|.
name|setPersistenceAdapter
argument_list|(
name|persistenceAdapter
argument_list|)
expr_stmt|;
if|if
condition|(
name|jaasConfiguration
operator|!=
literal|null
condition|)
block|{
name|answer
operator|.
name|setSecurityAdapter
argument_list|(
operator|new
name|JassJaccSecurityAdapter
argument_list|(
name|jaasConfiguration
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|securityRoles
operator|!=
literal|null
condition|)
block|{
comment|// Install JACC configuration.
name|PropertiesConfigLoader
name|loader
init|=
operator|new
name|PropertiesConfigLoader
argument_list|(
name|brokerName
argument_list|,
name|securityRoles
argument_list|)
decl_stmt|;
name|loader
operator|.
name|installSecurity
argument_list|()
expr_stmt|;
block|}
return|return
name|answer
return|;
block|}
specifier|public
specifier|static
specifier|final
name|GBeanInfo
name|GBEAN_INFO
decl_stmt|;
static|static
block|{
name|GBeanInfoBuilder
name|infoFactory
init|=
operator|new
name|GBeanInfoBuilder
argument_list|(
literal|"ActiveMQ Message Broker"
argument_list|,
name|ActiveMQContainerGBean
operator|.
name|class
argument_list|,
literal|"JMSServer"
argument_list|)
decl_stmt|;
name|infoFactory
operator|.
name|addAttribute
argument_list|(
literal|"brokerName"
argument_list|,
name|String
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|infoFactory
operator|.
name|addReference
argument_list|(
literal|"persistenceAdapter"
argument_list|,
name|PersistenceAdapter
operator|.
name|class
argument_list|)
expr_stmt|;
name|infoFactory
operator|.
name|addAttribute
argument_list|(
literal|"jaasConfiguration"
argument_list|,
name|String
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|infoFactory
operator|.
name|addAttribute
argument_list|(
literal|"securityRoles"
argument_list|,
name|Properties
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|infoFactory
operator|.
name|addInterface
argument_list|(
name|ActiveMQContainer
operator|.
name|class
argument_list|)
expr_stmt|;
name|infoFactory
operator|.
name|setConstructor
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"brokerName"
block|,
literal|"persistenceAdapter"
block|,
literal|"jaasConfiguration"
block|,
literal|"securityRoles"
block|}
argument_list|)
expr_stmt|;
name|GBEAN_INFO
operator|=
name|infoFactory
operator|.
name|getBeanInfo
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|GBeanInfo
name|getGBeanInfo
parameter_list|()
block|{
return|return
name|GBEAN_INFO
return|;
block|}
comment|/** 	 * @return Returns the brokerName. 	 */
specifier|public
name|String
name|getBrokerName
parameter_list|()
block|{
return|return
name|brokerName
return|;
block|}
comment|/** 	 * @return Returns the jassConfiguration. 	 */
specifier|public
name|String
name|getJaasConfiguration
parameter_list|()
block|{
return|return
name|jaasConfiguration
return|;
block|}
comment|/** 	 * @return Returns the securityRoles. 	 */
specifier|public
name|Properties
name|getSecurityRoles
parameter_list|()
block|{
return|return
name|securityRoles
return|;
block|}
block|}
end_class

end_unit

