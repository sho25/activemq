begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|Locker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|util
operator|.
name|ServiceSupport
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractLocker
extends|extends
name|ServiceSupport
implements|implements
name|Locker
block|{
specifier|public
specifier|static
specifier|final
name|long
name|DEFAULT_LOCK_ACQUIRE_SLEEP_INTERVAL
init|=
literal|10
operator|*
literal|1000
decl_stmt|;
specifier|protected
name|String
name|name
decl_stmt|;
specifier|protected
name|boolean
name|failIfLocked
init|=
literal|false
decl_stmt|;
specifier|protected
name|long
name|lockAcquireSleepInterval
init|=
name|DEFAULT_LOCK_ACQUIRE_SLEEP_INTERVAL
decl_stmt|;
annotation|@
name|Override
specifier|public
name|boolean
name|keepAlive
parameter_list|()
throws|throws
name|IOException
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setLockAcquireSleepInterval
parameter_list|(
name|long
name|lockAcquireSleepInterval
parameter_list|)
block|{
name|this
operator|.
name|lockAcquireSleepInterval
operator|=
name|lockAcquireSleepInterval
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setFailIfLocked
parameter_list|(
name|boolean
name|failIfLocked
parameter_list|)
block|{
name|this
operator|.
name|failIfLocked
operator|=
name|failIfLocked
expr_stmt|;
block|}
block|}
end_class

end_unit

